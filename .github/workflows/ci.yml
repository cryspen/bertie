name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        rust: [stable]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Checkout BoringSSL
        uses: actions/checkout@v4
        with:
          repository: google/boringssl
          path: boringssl

      - name: Build code
        if: matrix.os != 'windows-latest'
        run: cargo build --workspace

      - name: Test code
        run: cargo test --workspace

      - name: Test code w/ secret-integers
        run: cargo test --workspace --features secret_integers

      - name: BoGo
        if: matrix.os != 'windows-latest'
        run: BORINGSSL_ROOT=./boringssl ./bogo_shim/run.sh

  # audit:
  #   needs: test
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4

  #     - name: Audit dependencies
  #       uses: EmbarkStudios/cargo-deny-action@v1
  #       # TODO: Check licenses, too.
  #       with:
  #         command: check bans advisories sources

  lint:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Install toolchain
        run: |
          rustup component add clippy
          rustup component add rustfmt

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check code formatting
        run: cargo fmt --all -- --check

      - name: Check for common mistakes and missed improvements
        run: cargo clippy -- -D warnings

  benchmark:
    needs: test
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Benchmark
        run: cargo bench

  # interop:
  #   needs: test
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4

  #     - name: OpenSSL Interop
  #       run: ./tests/openssl-interop.sh
