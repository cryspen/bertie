module Bertie.Tls13utils
#set-options "--fuel 0 --ifuel 1 --z3rlimit 15"
open Core
open FStar.Mul

type t_Error = | Error_UnknownCiphersuite : Alloc.String.t_String -> t_Error

unfold
let t_TLSError = u8

let v_APPLICATION_DATA_INSTEAD_OF_HANDSHAKE: u8 = 138uy

let v_CRYPTO_ERROR: u8 = 2uy

let v_DECODE_ERROR: u8 = 142uy

let v_GOT_HANDSHAKE_FAILURE_ALERT: u8 = 141uy

let v_INCORRECT_ARRAY_LENGTH: u8 = 4uy

let v_INCORRECT_STATE: u8 = 128uy

let v_INSUFFICIENT_DATA: u8 = 134uy

let v_INSUFFICIENT_ENTROPY: u8 = 3uy

let v_INVALID_COMPRESSION_LIST: u8 = 136uy

let v_INVALID_SIGNATURE: u8 = 140uy

let v_MISSING_KEY_SHARE: u8 = 139uy

let v_NEGOTIATION_MISMATCH: u8 = 132uy

let v_PARSE_FAILED: u8 = 133uy

let v_PAYLOAD_TOO_LONG: u8 = 130uy

let v_PROTOCOL_VERSION_ALERT: u8 = 137uy

let v_PSK_MODE_MISMATCH: u8 = 131uy

let v_UNSUPPORTED: u8 = 135uy

let v_UNSUPPORTED_ALGORITHM: u8 = 1uy

let v_ZERO_RTT_DISABLED: u8 = 129uy

let parse_failed (_: Prims.unit) : u8 = v_PARSE_FAILED

let check (b: bool) : Core.Result.t_Result Prims.unit u8 =
  if b
  then Core.Result.Result_Ok (() <: Prims.unit) <: Core.Result.t_Result Prims.unit u8
  else Core.Result.Result_Err (parse_failed ()) <: Core.Result.t_Result Prims.unit u8

let error_string (c: u8) : Alloc.String.t_String =
  Alloc.Fmt.format (Core.Fmt.impl_2__new_v1 (Rust_primitives.unsize (let list = [""] in
              FStar.Pervasives.assert_norm (Prims.eq2 (List.Tot.length list) 1);
              Rust_primitives.Hax.array_of_list list)
          <:
          t_Slice string)
        (Rust_primitives.unsize (let list =
                [Core.Fmt.Rt.impl_1__new_display c <: Core.Fmt.Rt.t_Argument]
              in
              FStar.Pervasives.assert_norm (Prims.eq2 (List.Tot.length list) 1);
              Rust_primitives.Hax.array_of_list list)
          <:
          t_Slice Core.Fmt.Rt.t_Argument)
      <:
      Core.Fmt.t_Arguments)

let tlserr
      (#v_T: Type)
      (#[FStar.Tactics.Typeclasses.tcresolve ()] i0: Core.Marker.t_Sized v_T)
      (err: u8)
    : Core.Result.t_Result v_T u8 =
  let bt:Backtrace.Capture.t_Backtrace = Backtrace.Capture.impl__Backtrace__new () in
  let _:Prims.unit =
    Std.Io.Stdio.v__print (Core.Fmt.impl_2__new_v1 (Rust_primitives.unsize (let list = [""; "\n"] in
                FStar.Pervasives.assert_norm (Prims.eq2 (List.Tot.length list) 2);
                Rust_primitives.Hax.array_of_list list)
            <:
            t_Slice string)
          (Rust_primitives.unsize (let list =
                  [Core.Fmt.Rt.impl_1__new_debug bt <: Core.Fmt.Rt.t_Argument]
                in
                FStar.Pervasives.assert_norm (Prims.eq2 (List.Tot.length list) 1);
                Rust_primitives.Hax.array_of_list list)
            <:
            t_Slice Core.Fmt.Rt.t_Argument)
        <:
        Core.Fmt.t_Arguments)
  in
  let _:Prims.unit = () in
  Core.Result.Result_Err err <: Core.Result.t_Result v_T u8

type t_U16 = | U16 : u16 -> t_U16

[@@ FStar.Tactics.Typeclasses.tcinstance]
let impl_4: Core.Convert.t_From t_U16 u16 = { f_from = fun (x: u16) -> U16 x <: t_U16 }

let impl__U16__declassify (self: t_U16) : u16 = self._0

type t_U32 = | U32 : u32 -> t_U32

[@@ FStar.Tactics.Typeclasses.tcinstance]
let impl_5: Core.Convert.t_From t_U32 u32 = { f_from = fun (x: u32) -> U32 x <: t_U32 }

[@@ FStar.Tactics.Typeclasses.tcinstance]
let impl_6: Core.Ops.Arith.t_Add t_U32 t_U32 =
  { f_Output = t_U32; f_add = fun (self: t_U32) (y: t_U32) -> U32 (self._0 +! y._0) <: t_U32 }

let impl__U32__declassify (self: t_U32) : u32 = self._0

type t_U8 = | U8 : u8 -> t_U8

[@@ FStar.Tactics.Typeclasses.tcinstance]
let impl: Core.Ops.Bit.t_BitXor t_U8 t_U8 =
  { f_Output = t_U8; f_bitxor = fun (self: t_U8) (rhs: t_U8) -> U8 (self._0 ^. rhs._0) <: t_U8 }

[@@ FStar.Tactics.Typeclasses.tcinstance]
let impl_1: Core.Convert.t_From t_U8 u8 = { f_from = fun (x: u8) -> U8 x <: t_U8 }

let impl__U8__declassify (self: t_U8) : u8 = self._0

[@@ FStar.Tactics.Typeclasses.tcinstance]
let impl_3: Core.Convert.t_From t_U8 u8 = { f_from = fun (x: u8) -> U8 x <: t_U8 }

let eq1 (b1 b2: t_U8) : bool = (impl__U8__declassify b1 <: u8) =. (impl__U8__declassify b2 <: u8)

let check_eq1 (b1 b2: t_U8) : Core.Result.t_Result Prims.unit u8 =
  if eq1 b1 b2
  then Core.Result.Result_Ok (() <: Prims.unit) <: Core.Result.t_Result Prims.unit u8
  else Core.Result.Result_Err (parse_failed ()) <: Core.Result.t_Result Prims.unit u8

type t_Bytes = | Bytes : Alloc.Vec.t_Vec t_U8 Alloc.Alloc.t_Global -> t_Bytes

[@@ FStar.Tactics.Typeclasses.tcinstance]
let impl_7: Core.Convert.t_From t_Bytes (Alloc.Vec.t_Vec u8 Alloc.Alloc.t_Global) =
  {
    f_from
    =
    fun (x: Alloc.Vec.t_Vec u8 Alloc.Alloc.t_Global) ->
      Bytes
      (Rust_primitives.Hax.failure ""
          "{ Types.attributes = [];\n  contents =\n  Types.Call {\n    args =\n    [{ Types.attributes = [];\n       contents =\n       Types.Call {\n         args =\n         [{ Types.attributes = [];\n            contents =\n            Types.Call {\n              args =\n              [{ Types.attributes = [];\n                 contents =\n                 Types.Borrow {\n                   arg =\n                   { Types.attributes = [];\n                     contents =\n                     Types.Deref {\n                       arg =\n                       { Types.attributes = [];\n                         contents =\n                         Types.Call {\n                           args =\n                           [{ Types.attributes = [];\n                              contents =\n                              Types.Borrow {\n                                arg =\n                                { Types.attributes = [];\n                                  contents =\n                                  Types.VarRef {\n                                    id =\n                                    { Types.id =\n                                      { Types.local_id = \"2\";\n                                        owner =\n                                        { Types.index = (0, 647);\n                                          krate = \"bertie\";\n                                          path =\n                                          [{ Types.data =\n                                             (Types.TypeNs \"tls13utils\");\n                                             disambiguator = 0 };\n                                            { Types.data = Types.Impl;\n                                              disambiguator = 7 };\n                                            { Types.data =\n                                              (Types.ValueNs \"from\");\n                                              disambiguator = 0 }\n                                            ]\n                                          }\n                                        };\n                                      name = \"x\" }};\n                                  hir_id = None;\n                                  span =\n                                  { Types.filename =\n                                    (Types.Real\n                                       (Types.LocalPath \"src/tls13utils.rs\"));\n                                    hi = { Types.col = \"15\"; line = \"131\" };\n                                    lo = { Types.col = \"14\"; line = \"131\" } };\n                                  ty =\n                                  Types.Adt {\n                                    def_id =\n                                    { Types.index = (5, 6696);\n                                      krate = \"alloc\";\n                                      path =\n                                      [{ Types.data = (Types.TypeNs \"vec\");\n                                         disambiguator = 0 };\n                                        { Types.data = (Types.TypeNs \"Vec\");\n                                          disambiguator = 0 }\n                                        ]\n                                      };\n                                    generic_args =\n                                    [(Types.Type (Types.Uint Types.U8));\n                                      (Types.Type\n                                         Types.Adt {\n                                           def_id =\n                                           { Types.index = (5, 7004);\n                                             krate = \"alloc\";\n                                             path =\n                                             [{ Types.data =\n                                                (Types.TypeNs \"alloc\");\n                                                disambiguator = 0 };\n                                               { Types.data =\n                                                 (Types.TypeNs \"Global\");\n                                                 disambiguator = 0 }\n                                               ]\n                                             };\n                                           generic_args = []})\n                                      ]}\n                                  };\n                                borrow_kind = Types.Shared};\n                              hir_id = None;\n                              span =\n                              { Types.filename =\n                                (Types.Real\n                                   (Types.LocalPath \"src/tls13utils.rs\"));\n                                hi = { Types.col = \"22\"; line = \"131\" };\n                                lo = { Types.col = \"14\"; line = \"131\" } };\n                              ty =\n                              (Types.Ref\n                                 ({ Types.kind = Types.ReErased },\n                                  Types.Adt {\n                                    def_id =\n                                    { Types.index = (5, 6696);\n                                      krate = \"alloc\";\n                                      path =\n                                      [{ Types.data = (Types.TypeNs \"vec\");\n                                         disambiguator = 0 };\n                                        { Types.data = (Types.TypeNs \"Vec\");\n                                          disambiguator = 0 }\n                                        ]\n                                      };\n                                    generic_args =\n                                    [(Types.Type (Types.Uint Types.U8));\n                                      (Types.Type\n                                         Types.Adt {\n                                           def_id =\n                                           { Types.index = (5, 7004);\n                                             krate = \"alloc\";\n                                             path =\n                                             [{ Types.data =\n                                                (Types.TypeNs \"alloc\");\n                                                disambiguator = 0 };\n                                               { Types.data =\n                                                 (Types.TypeNs \"Global\");\n                                                 disambiguator = 0 }\n                                               ]\n                                             };\n                                           generic_args = []})\n                                      ]},\n                                  false))\n                              }\n                             ];\n                           fn_span =\n                           { Types.filename =\n                             (Types.Real\n                                (Types.LocalPath \"src/tls13utils.rs\"));\n                             hi = { Types.col = \"22\"; line = \"131\" };\n                             lo = { Types.col = \"14\"; line = \"131\" } };\n                           from_hir_call = false;\n                           fun' =\n                           { Types.attributes = [];\n                             contents =\n                             Types.GlobalName {\n                               id =\n                               { Types.index = (2, 2897); krate = \"core\";\n                                 path =\n                                 [{ Types.data = (Types.TypeNs \"ops\");\n                                    disambiguator = 0 };\n                                   { Types.data = (Types.TypeNs \"deref\");\n                                     disambiguator = 0 };\n                                   { Types.data = (Types.TypeNs \"Deref\");\n                                     disambiguator = 0 };\n                                   { Types.data = (Types.ValueNs \"deref\");\n                                     disambiguator = 0 }\n                                   ]\n                                 }};\n                             hir_id = None;\n                             span =\n                             { Types.filename =\n                               (Types.Real\n                                  (Types.LocalPath \"src/tls13utils.rs\"));\n                               hi = { Types.col = \"22\"; line = \"131\" };\n                               lo = { Types.col = \"14\"; line = \"131\" } };\n                             ty =\n                             (Types.Arrow\n                                { Types.bound_vars =\n                                  [(Types.Region\n                                      (Types.BrNamed\n                                         ({ Types.index = (2, 53660);\n                                            krate = \"core\";\n                                            path =\n                                            [{ Types.data =\n                                               (Types.TypeNs \"ops\");\n                                               disambiguator = 0 };\n                                              { Types.data =\n                                                (Types.TypeNs \"deref\");\n                                                disambiguator = 0 };\n                                              { Types.data =\n                                                (Types.TypeNs \"Deref\");\n                                                disambiguator = 0 };\n                                              { Types.data =\n                                                (Types.ValueNs \"deref\");\n                                                disambiguator = 0 };\n                                              { Types.data =\n                                                (Types.LifetimeNs \"'_\");\n                                                disambiguator = 0 }\n                                              ]\n                                            },\n                                          \"'_\")))\n                                    ];\n                                  value =\n                                  { Types.abi = Types.Abi {todo = \"Rust\"};\n                                    c_variadic = false;\n                                    inputs =\n                                    [(Types.Ref\n                                        ({ Types.kind =\n                                           (Types.ReLateBound\n                                              (\"0\",\n                                               { Types.kind =\n                                                 (Types.BrNamed\n                                                    ({ Types.index =\n                                                       (2, 53660);\n                                                       krate = \"core\";\n                                                       path =\n                                                       [{ Types.data =\n                                                          (Types.TypeNs \"ops\");\n                                                          disambiguator = 0 };\n                                                         { Types.data =\n                                                           (Types.TypeNs\n                                                              \"deref\");\n                                                           disambiguator = 0\n                                                           };\n                                                         { Types.data =\n                                                           (Types.TypeNs\n                                                              \"Deref\");\n                                                           disambiguator = 0\n                                                           };\n                                                         { Types.data =\n                                                           (Types.ValueNs\n                                                              \"deref\");\n                                                           disambiguator = 0\n                                                           };\n                                                         { Types.data =\n                                                           (Types.LifetimeNs\n                                                              \"'_\");\n                                                           disambiguator = 0\n                                                           }\n                                                         ]\n                                                       },\n                                                     \"'_\"));\n                                                 var = \"0\" }))\n                                           },\n                                         Types.Adt {\n                                           def_id =\n                                           { Types.index = (5, 6696);\n                                             krate = \"alloc\";\n                                             path =\n                                             [{ Types.data =\n                                                (Types.TypeNs \"vec\");\n                                                disambiguator = 0 };\n                                               { Types.data =\n                                                 (Types.TypeNs \"Vec\");\n                                                 disambiguator = 0 }\n                                               ]\n                                             };\n                                           generic_args =\n                                           [(Types.Type (Types.Uint Types.U8));\n                                             (Types.Type\n                                                Types.Adt {\n                                                  def_id =\n                                                  { Types.index = (5, 7004);\n                                                    krate = \"alloc\";\n                                                    path =\n                                                    [{ Types.data =\n                                                       (Types.TypeNs \"alloc\");\n                                                       disambiguator = 0 };\n                                                      { Types.data =\n                                                        (Types.TypeNs\n                                                           \"Global\");\n                                                        disambiguator = 0 }\n                                                      ]\n                                                    };\n                                                  generic_args = []})\n                                             ]},\n                                         false))\n                                      ];\n                                    output =\n                                    (Types.Ref\n                                       ({ Types.kind =\n                                          (Types.ReLateBound\n                                             (\"0\",\n                                              { Types.kind =\n                                                (Types.BrNamed\n                                                   ({ Types.index =\n                                                      (2, 53660);\n                                                      krate = \"core\";\n                                                      path =\n                                                      [{ Types.data =\n                                                         (Types.TypeNs \"ops\");\n                                                         disambiguator = 0 };\n                                                        { Types.data =\n                                                          (Types.TypeNs\n                                                             \"deref\");\n                                                          disambiguator = 0 };\n                                                        { Types.data =\n                                                          (Types.TypeNs\n                                                             \"Deref\");\n                                                          disambiguator = 0 };\n                                                        { Types.data =\n                                                          (Types.ValueNs\n                                                             \"deref\");\n                                                          disambiguator = 0 };\n                                                        { Types.data =\n                                                          (Types.LifetimeNs\n                                                             \"'_\");\n                                                          disambiguator = 0 }\n                                                        ]\n                                                      },\n                                                    \"'_\"));\n                                                var = \"0\" }))\n                                          },\n                                        (Types.Alias\n                                           (Types.Projection,\n                                            { Types.def_id =\n                                              { Types.index = (2, 2896);\n                                                krate = \"core\";\n                                                path =\n                                                [{ Types.data =\n                                                   (Types.TypeNs \"ops\");\n                                                   disambiguator = 0 };\n                                                  { Types.data =\n                                                    (Types.TypeNs \"deref\");\n                                                    disambiguator = 0 };\n                                                  { Types.data =\n                                                    (Types.TypeNs \"Deref\");\n                                                    disambiguator = 0 };\n                                                  { Types.data =\n                                                    (Types.TypeNs \"Target\");\n                                                    disambiguator = 0 }\n                                                  ]\n                                                };\n                                              substs =\n                                              [(Types.Type\n                                                  Types.Adt {\n                                                    def_id =\n                                                    { Types.index = (5, 6696);\n                                                      krate = \"alloc\";\n                                                      path =\n                                                      [{ Types.data =\n                                                         (Types.TypeNs \"vec\");\n                                                         disambiguator = 0 };\n                                                        { Types.data =\n                                                          (Types.TypeNs \"Vec\");\n                                                          disambiguator = 0 }\n                                                        ]\n                                                      };\n                                                    generic_args =\n                                                    [(Types.Type\n                                                        (Types.Uint Types.U8));\n                                                      (Types.Type\n                                                         Types.Adt {\n                                                           def_id =\n                                                           { Types.index =\n                                                             (5, 7004);\n                                                             krate = \"alloc\";\n                                                             path =\n                                                             [{ Types.data =\n                                                                (Types.TypeNs\n                                                                   \"alloc\");\n                                                                disambiguator =\n                                                                0 };\n                                                               { Types.data =\n                                                                 (Types.TypeNs\n                                                                    \"Global\");\n                                                                 disambiguator =\n                                                                 0 }\n                                                               ]\n                                                             };\n                                                           generic_args = []})\n                                                      ]})\n                                                ];\n                                              trait_def_id =\n                                              (Some ({ Types.index =\n                                                       (2, 2895);\n                                                       krate = \"core\";\n                                                       path =\n                                                       [{ Types.data =\n                                                          (Types.TypeNs \"ops\");\n                                                          disambiguator = 0 };\n                                                         { Types.data =\n                                                           (Types.TypeNs\n                                                              \"deref\");\n                                                           disambiguator = 0\n                                                           };\n                                                         { Types.data =\n                                                           (Types.TypeNs\n                                                              \"Deref\");\n                                                           disambiguator = 0\n                                                           }\n                                                         ]\n                                                       },\n                                                     { Types.args =\n                                                       [{ Types.args = [];\n                                                          impl =\n                                                          Types.Builtin {\n                                                            trait =\n                                                            { Types.def_id =\n                                                              { Types.index =\n                                                                (2, 2689);\n                                                                krate =\n                                                                \"core\";\n                                                                path =\n                                                                [{ Types.data =\n                                                                   (Types.TypeNs\n                                                                    \"marker\");\n                                                                   disambiguator =\n                                                                   0 };\n                                                                  { Types.data =\n                                                                    (\n                                                                    Types.TypeNs\n                                                                    \"Sized\");\n                                                                    disambiguator =\n                                                                    0 }\n                                                                  ]\n                                                                };\n                                                              generic_args =\n                                                              [(Types.Type\n                                                                  (Types.Uint\n                                                                    Types.U8))\n                                                                ]\n                                                              }}\n                                                          };\n                                                         { Types.args = [];\n                                                           impl =\n                                                           Types.Builtin {\n                                                             trait =\n                                                             { Types.def_id =\n                                                               { Types.index =\n                                                                 (2, 2689);\n                                                                 krate =\n                                                                 \"core\";\n                                                                 path =\n                                                                 [{ Types.data =\n                                                                    (\n                                                                    Types.TypeNs\n                                                                    \"marker\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                   { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"Sized\");\n                                                                    disambiguator =\n                                                                    0 }\n                                                                   ]\n                                                                 };\n                                                               generic_args =\n                                                               [(Types.Type\n                                                                   Types.Adt {\n                                                                    def_id =\n                                                                    { Types.index =\n                                                                    (5, 7004);\n                                                                    krate =\n                                                                    \"alloc\";\n                                                                    path =\n                                                                    [{ Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"alloc\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"Global\");\n                                                                    disambiguator =\n                                                                    0 }] };\n                                                                    generic_args =\n                                                                    []})\n                                                                 ]\n                                                               }}\n                                                           };\n                                                         { Types.args = [];\n                                                           impl =\n                                                           Types.Concrete {\n                                                             generics = [];\n                                                             id =\n                                                             { Types.index =\n                                                               (5, 116);\n                                                               krate =\n                                                               \"alloc\";\n                                                               path =\n                                                               [{ Types.data =\n                                                                  (Types.TypeNs\n                                                                    \"alloc\");\n                                                                  disambiguator =\n                                                                  0 };\n                                                                 { Types.data =\n                                                                   Types.Impl;\n                                                                   disambiguator =\n                                                                   1 }\n                                                                 ]\n                                                               }}\n                                                           }\n                                                         ];\n                                                       impl =\n                                                       Types.Concrete {\n                                                         generics =\n                                                         [(Types.Type\n                                                             (Types.Uint\n                                                                Types.U8));\n                                                           (Types.Type\n                                                              Types.Adt {\n                                                                def_id =\n                                                                { Types.index =\n                                                                  (5, 7004);\n                                                                  krate =\n                                                                  \"alloc\";\n                                                                  path =\n                                                                  [{ Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"alloc\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"Global\");\n                                                                    disambiguator =\n                                                                    0 }]\n                                                                  };\n                                                                generic_args =\n                                                                []})\n                                                           ];\n                                                         id =\n                                                         { Types.index =\n                                                           (5, 6848);\n                                                           krate = \"alloc\";\n                                                           path =\n                                                           [{ Types.data =\n                                                              (Types.TypeNs\n                                                                 \"vec\");\n                                                              disambiguator =\n                                                              0 };\n                                                             { Types.data =\n                                                               Types.Impl;\n                                                               disambiguator =\n                                                               9 }\n                                                             ]\n                                                           }}\n                                                       }))\n                                              })),\n                                        false));\n                                    unsafety = Types.Normal }\n                                  })\n                             };\n                           generic_args =\n                           [(Types.Type\n                               Types.Adt {\n                                 def_id =\n                                 { Types.index = (5, 6696); krate = \"alloc\";\n                                   path =\n                                   [{ Types.data = (Types.TypeNs \"vec\");\n                                      disambiguator = 0 };\n                                     { Types.data = (Types.TypeNs \"Vec\");\n                                       disambiguator = 0 }\n                                     ]\n                                   };\n                                 generic_args =\n                                 [(Types.Type (Types.Uint Types.U8));\n                                   (Types.Type\n                                      Types.Adt {\n                                        def_id =\n                                        { Types.index = (5, 7004);\n                                          krate = \"alloc\";\n                                          path =\n                                          [{ Types.data =\n                                             (Types.TypeNs \"alloc\");\n                                             disambiguator = 0 };\n                                            { Types.data =\n                                              (Types.TypeNs \"Global\");\n                                              disambiguator = 0 }\n                                            ]\n                                          };\n                                        generic_args = []})\n                                   ]})\n                             ];\n                           impl =\n                           (Some { Types.args =\n                                   [{ Types.args = [];\n                                      impl =\n                                      Types.Builtin {\n                                        trait =\n                                        { Types.def_id =\n                                          { Types.index = (2, 2689);\n                                            krate = \"core\";\n                                            path =\n                                            [{ Types.data =\n                                               (Types.TypeNs \"marker\");\n                                               disambiguator = 0 };\n                                              { Types.data =\n                                                (Types.TypeNs \"Sized\");\n                                                disambiguator = 0 }\n                                              ]\n                                            };\n                                          generic_args =\n                                          [(Types.Type (Types.Uint Types.U8))\n                                            ]\n                                          }}\n                                      };\n                                     { Types.args = [];\n                                       impl =\n                                       Types.Builtin {\n                                         trait =\n                                         { Types.def_id =\n                                           { Types.index = (2, 2689);\n                                             krate = \"core\";\n                                             path =\n                                             [{ Types.data =\n                                                (Types.TypeNs \"marker\");\n                                                disambiguator = 0 };\n                                               { Types.data =\n                                                 (Types.TypeNs \"Sized\");\n                                                 disambiguator = 0 }\n                                               ]\n                                             };\n                                           generic_args =\n                                           [(Types.Type\n                                               Types.Adt {\n                                                 def_id =\n                                                 { Types.index = (5, 7004);\n                                                   krate = \"alloc\";\n                                                   path =\n                                                   [{ Types.data =\n                                                      (Types.TypeNs \"alloc\");\n                                                      disambiguator = 0 };\n                                                     { Types.data =\n                                                       (Types.TypeNs \"Global\");\n                                                       disambiguator = 0 }\n                                                     ]\n                                                   };\n                                                 generic_args = []})\n                                             ]\n                                           }}\n                                       };\n                                     { Types.args = [];\n                                       impl =\n                                       Types.Concrete {generics = [];\n                                         id =\n                                         { Types.index = (5, 116);\n                                           krate = \"alloc\";\n                                           path =\n                                           [{ Types.data =\n                                              (Types.TypeNs \"alloc\");\n                                              disambiguator = 0 };\n                                             { Types.data = Types.Impl;\n                                               disambiguator = 1 }\n                                             ]\n                                           }}\n                                       }\n                                     ];\n                                   impl =\n                                   Types.Concrete {\n                                     generics =\n                                     [(Types.Type (Types.Uint Types.U8));\n                                       (Types.Type\n                                          Types.Adt {\n                                            def_id =\n                                            { Types.index = (5, 7004);\n                                              krate = \"alloc\";\n                                              path =\n                                              [{ Types.data =\n                                                 (Types.TypeNs \"alloc\");\n                                                 disambiguator = 0 };\n                                                { Types.data =\n                                                  (Types.TypeNs \"Global\");\n                                                  disambiguator = 0 }\n                                                ]\n                                              };\n                                            generic_args = []})\n                                       ];\n                                     id =\n                                     { Types.index = (5, 6848);\n                                       krate = \"alloc\";\n                                       path =\n                                       [{ Types.data = (Types.TypeNs \"vec\");\n                                          disambiguator = 0 };\n                                         { Types.data = Types.Impl;\n                                           disambiguator = 9 }\n                                         ]\n                                       }}\n                                   });\n                           ty =\n                           (Types.Arrow\n                              { Types.bound_vars =\n                                [(Types.Region\n                                    (Types.BrNamed\n                                       ({ Types.index = (2, 53660);\n                                          krate = \"core\";\n                                          path =\n                                          [{ Types.data =\n                                             (Types.TypeNs \"ops\");\n                                             disambiguator = 0 };\n                                            { Types.data =\n                                              (Types.TypeNs \"deref\");\n                                              disambiguator = 0 };\n                                            { Types.data =\n                                              (Types.TypeNs \"Deref\");\n                                              disambiguator = 0 };\n                                            { Types.data =\n                                              (Types.ValueNs \"deref\");\n                                              disambiguator = 0 };\n                                            { Types.data =\n                                              (Types.LifetimeNs \"'_\");\n                                              disambiguator = 0 }\n                                            ]\n                                          },\n                                        \"'_\")))\n                                  ];\n                                value =\n                                { Types.abi = Types.Abi {todo = \"Rust\"};\n                                  c_variadic = false;\n                                  inputs =\n                                  [(Types.Ref\n                                      ({ Types.kind =\n                                         (Types.ReLateBound\n                                            (\"0\",\n                                             { Types.kind =\n                                               (Types.BrNamed\n                                                  ({ Types.index = (2, 53660);\n                                                     krate = \"core\";\n                                                     path =\n                                                     [{ Types.data =\n                                                        (Types.TypeNs \"ops\");\n                                                        disambiguator = 0 };\n                                                       { Types.data =\n                                                         (Types.TypeNs\n                                                            \"deref\");\n                                                         disambiguator = 0 };\n                                                       { Types.data =\n                                                         (Types.TypeNs\n                                                            \"Deref\");\n                                                         disambiguator = 0 };\n                                                       { Types.data =\n                                                         (Types.ValueNs\n                                                            \"deref\");\n                                                         disambiguator = 0 };\n                                                       { Types.data =\n                                                         (Types.LifetimeNs\n                                                            \"'_\");\n                                                         disambiguator = 0 }\n                                                       ]\n                                                     },\n                                                   \"'_\"));\n                                               var = \"0\" }))\n                                         },\n                                       Types.Adt {\n                                         def_id =\n                                         { Types.index = (5, 6696);\n                                           krate = \"alloc\";\n                                           path =\n                                           [{ Types.data =\n                                              (Types.TypeNs \"vec\");\n                                              disambiguator = 0 };\n                                             { Types.data =\n                                               (Types.TypeNs \"Vec\");\n                                               disambiguator = 0 }\n                                             ]\n                                           };\n                                         generic_args =\n                                         [(Types.Type (Types.Uint Types.U8));\n                                           (Types.Type\n                                              Types.Adt {\n                                                def_id =\n                                                { Types.index = (5, 7004);\n                                                  krate = \"alloc\";\n                                                  path =\n                                                  [{ Types.data =\n                                                     (Types.TypeNs \"alloc\");\n                                                     disambiguator = 0 };\n                                                    { Types.data =\n                                                      (Types.TypeNs \"Global\");\n                                                      disambiguator = 0 }\n                                                    ]\n                                                  };\n                                                generic_args = []})\n                                           ]},\n                                       false))\n                                    ];\n                                  output =\n                                  (Types.Ref\n                                     ({ Types.kind =\n                                        (Types.ReLateBound\n                                           (\"0\",\n                                            { Types.kind =\n                                              (Types.BrNamed\n                                                 ({ Types.index = (2, 53660);\n                                                    krate = \"core\";\n                                                    path =\n                                                    [{ Types.data =\n                                                       (Types.TypeNs \"ops\");\n                                                       disambiguator = 0 };\n                                                      { Types.data =\n                                                        (Types.TypeNs \"deref\");\n                                                        disambiguator = 0 };\n                                                      { Types.data =\n                                                        (Types.TypeNs \"Deref\");\n                                                        disambiguator = 0 };\n                                                      { Types.data =\n                                                        (Types.ValueNs\n                                                           \"deref\");\n                                                        disambiguator = 0 };\n                                                      { Types.data =\n                                                        (Types.LifetimeNs\n                                                           \"'_\");\n                                                        disambiguator = 0 }\n                                                      ]\n                                                    },\n                                                  \"'_\"));\n                                              var = \"0\" }))\n                                        },\n                                      (Types.Alias\n                                         (Types.Projection,\n                                          { Types.def_id =\n                                            { Types.index = (2, 2896);\n                                              krate = \"core\";\n                                              path =\n                                              [{ Types.data =\n                                                 (Types.TypeNs \"ops\");\n                                                 disambiguator = 0 };\n                                                { Types.data =\n                                                  (Types.TypeNs \"deref\");\n                                                  disambiguator = 0 };\n                                                { Types.data =\n                                                  (Types.TypeNs \"Deref\");\n                                                  disambiguator = 0 };\n                                                { Types.data =\n                                                  (Types.TypeNs \"Target\");\n                                                  disambiguator = 0 }\n                                                ]\n                                              };\n                                            substs =\n                                            [(Types.Type\n                                                Types.Adt {\n                                                  def_id =\n                                                  { Types.index = (5, 6696);\n                                                    krate = \"alloc\";\n                                                    path =\n                                                    [{ Types.data =\n                                                       (Types.TypeNs \"vec\");\n                                                       disambiguator = 0 };\n                                                      { Types.data =\n                                                        (Types.TypeNs \"Vec\");\n                                                        disambiguator = 0 }\n                                                      ]\n                                                    };\n                                                  generic_args =\n                                                  [(Types.Type\n                                                      (Types.Uint Types.U8));\n                                                    (Types.Type\n                                                       Types.Adt {\n                                                         def_id =\n                                                         { Types.index =\n                                                           (5, 7004);\n                                                           krate = \"alloc\";\n                                                           path =\n                                                           [{ Types.data =\n                                                              (Types.TypeNs\n                                                                 \"alloc\");\n                                                              disambiguator =\n                                                              0 };\n                                                             { Types.data =\n                                                               (Types.TypeNs\n                                                                  \"Global\");\n                                                               disambiguator =\n                                                               0 }\n                                                             ]\n                                                           };\n                                                         generic_args = []})\n                                                    ]})\n                                              ];\n                                            trait_def_id =\n                                            (Some ({ Types.index = (2, 2895);\n                                                     krate = \"core\";\n                                                     path =\n                                                     [{ Types.data =\n                                                        (Types.TypeNs \"ops\");\n                                                        disambiguator = 0 };\n                                                       { Types.data =\n                                                         (Types.TypeNs\n                                                            \"deref\");\n                                                         disambiguator = 0 };\n                                                       { Types.data =\n                                                         (Types.TypeNs\n                                                            \"Deref\");\n                                                         disambiguator = 0 }\n                                                       ]\n                                                     },\n                                                   { Types.args =\n                                                     [{ Types.args = [];\n                                                        impl =\n                                                        Types.Builtin {\n                                                          trait =\n                                                          { Types.def_id =\n                                                            { Types.index =\n                                                              (2, 2689);\n                                                              krate = \"core\";\n                                                              path =\n                                                              [{ Types.data =\n                                                                 (Types.TypeNs\n                                                                    \"marker\");\n                                                                 disambiguator =\n                                                                 0 };\n                                                                { Types.data =\n                                                                  (Types.TypeNs\n                                                                    \"Sized\");\n                                                                  disambiguator =\n                                                                  0 }\n                                                                ]\n                                                              };\n                                                            generic_args =\n                                                            [(Types.Type\n                                                                (Types.Uint\n                                                                   Types.U8))\n                                                              ]\n                                                            }}\n                                                        };\n                                                       { Types.args = [];\n                                                         impl =\n                                                         Types.Builtin {\n                                                           trait =\n                                                           { Types.def_id =\n                                                             { Types.index =\n                                                               (2, 2689);\n                                                               krate = \"core\";\n                                                               path =\n                                                               [{ Types.data =\n                                                                  (Types.TypeNs\n                                                                    \"marker\");\n                                                                  disambiguator =\n                                                                  0 };\n                                                                 { Types.data =\n                                                                   (Types.TypeNs\n                                                                    \"Sized\");\n                                                                   disambiguator =\n                                                                   0 }\n                                                                 ]\n                                                               };\n                                                             generic_args =\n                                                             [(Types.Type\n                                                                 Types.Adt {\n                                                                   def_id =\n                                                                   { Types.index =\n                                                                    (5, 7004);\n                                                                    krate =\n                                                                    \"alloc\";\n                                                                    path =\n                                                                    [{ Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"alloc\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"Global\");\n                                                                    disambiguator =\n                                                                    0 }] };\n                                                                   generic_args =\n                                                                   []})\n                                                               ]\n                                                             }}\n                                                         };\n                                                       { Types.args = [];\n                                                         impl =\n                                                         Types.Concrete {\n                                                           generics = [];\n                                                           id =\n                                                           { Types.index =\n                                                             (5, 116);\n                                                             krate = \"alloc\";\n                                                             path =\n                                                             [{ Types.data =\n                                                                (Types.TypeNs\n                                                                   \"alloc\");\n                                                                disambiguator =\n                                                                0 };\n                                                               { Types.data =\n                                                                 Types.Impl;\n                                                                 disambiguator =\n                                                                 1 }\n                                                               ]\n                                                             }}\n                                                         }\n                                                       ];\n                                                     impl =\n                                                     Types.Concrete {\n                                                       generics =\n                                                       [(Types.Type\n                                                           (Types.Uint\n                                                              Types.U8));\n                                                         (Types.Type\n                                                            Types.Adt {\n                                                              def_id =\n                                                              { Types.index =\n                                                                (5, 7004);\n                                                                krate =\n                                                                \"alloc\";\n                                                                path =\n                                                                [{ Types.data =\n                                                                   (Types.TypeNs\n                                                                    \"alloc\");\n                                                                   disambiguator =\n                                                                   0 };\n                                                                  { Types.data =\n                                                                    (\n                                                                    Types.TypeNs\n                                                                    \"Global\");\n                                                                    disambiguator =\n                                                                    0 }\n                                                                  ]\n                                                                };\n                                                              generic_args =\n                                                              []})\n                                                         ];\n                                                       id =\n                                                       { Types.index =\n                                                         (5, 6848);\n                                                         krate = \"alloc\";\n                                                         path =\n                                                         [{ Types.data =\n                                                            (Types.TypeNs\n                                                               \"vec\");\n                                                            disambiguator = 0\n                                                            };\n                                                           { Types.data =\n                                                             Types.Impl;\n                                                             disambiguator =\n                                                             9 }\n                                                           ]\n                                                         }}\n                                                     }))\n                                            })),\n                                      false));\n                                  unsafety = Types.Normal }\n                                })};\n                         hir_id = None;\n                         span =\n                         { Types.filename =\n                           (Types.Real (Types.LocalPath \"src/tls13utils.rs\"));\n                           hi = { Types.col = \"22\"; line = \"131\" };\n                           lo = { Types.col = \"14\"; line = \"131\" } };\n                         ty =\n                         (Types.Ref\n                            ({ Types.kind = Types.ReErased },\n                             (Types.Slice (Types.Uint Types.U8)), false))\n                         }};\n                     hir_id = None;\n                     span =\n                     { Types.filename =\n                       (Types.Real (Types.LocalPath \"src/tls13utils.rs\"));\n                       hi = { Types.col = \"22\"; line = \"131\" };\n                       lo = { Types.col = \"14\"; line = \"131\" } };\n                     ty = (Types.Slice (Types.Uint Types.U8)) };\n                   borrow_kind = Types.Shared};\n                 hir_id = (Some (\"647\", \"12\"));\n                 span =\n                 { Types.filename =\n                   (Types.Real (Types.LocalPath \"src/tls13utils.rs\"));\n                   hi = { Types.col = \"22\"; line = \"131\" };\n                   lo = { Types.col = \"14\"; line = \"131\" } };\n                 ty =\n                 (Types.Ref\n                    ({ Types.kind = Types.ReErased },\n                     (Types.Slice (Types.Uint Types.U8)), false))\n                 }\n                ];\n              fn_span =\n              { Types.filename =\n                (Types.Real (Types.LocalPath \"src/tls13utils.rs\"));\n                hi = { Types.col = \"22\"; line = \"131\" };\n                lo = { Types.col = \"16\"; line = \"131\" } };\n              from_hir_call = true;\n              fun' =\n              { Types.attributes = [];\n                contents =\n                Types.GlobalName {\n                  id =\n                  { Types.index = (2, 11048); krate = \"core\";\n                    path =\n                    [{ Types.data = (Types.TypeNs \"slice\"); disambiguator = 0\n                       };\n                      { Types.data = Types.Impl; disambiguator = 0 };\n                      { Types.data = (Types.ValueNs \"iter\");\n                        disambiguator = 0 }\n                      ]\n                    }};\n                hir_id = None;\n                span =\n                { Types.filename =\n                  (Types.Real (Types.LocalPath \"src/tls13utils.rs\"));\n                  hi = { Types.col = \"20\"; line = \"131\" };\n                  lo = { Types.col = \"16\"; line = \"131\" } };\n                ty =\n                (Types.Arrow\n                   { Types.bound_vars =\n                     [(Types.Region\n                         (Types.BrNamed\n                            ({ Types.index = (2, 56478); krate = \"core\";\n                               path =\n                               [{ Types.data = (Types.TypeNs \"slice\");\n                                  disambiguator = 0 };\n                                 { Types.data = Types.Impl; disambiguator = 0\n                                   };\n                                 { Types.data = (Types.ValueNs \"iter\");\n                                   disambiguator = 0 };\n                                 { Types.data = (Types.LifetimeNs \"'_\");\n                                   disambiguator = 0 }\n                                 ]\n                               },\n                             \"'_\")))\n                       ];\n                     value =\n                     { Types.abi = Types.Abi {todo = \"Rust\"};\n                       c_variadic = false;\n                       inputs =\n                       [(Types.Ref\n                           ({ Types.kind =\n                              (Types.ReLateBound\n                                 (\"0\",\n                                  { Types.kind =\n                                    (Types.BrNamed\n                                       ({ Types.index = (2, 56478);\n                                          krate = \"core\";\n                                          path =\n                                          [{ Types.data =\n                                             (Types.TypeNs \"slice\");\n                                             disambiguator = 0 };\n                                            { Types.data = Types.Impl;\n                                              disambiguator = 0 };\n                                            { Types.data =\n                                              (Types.ValueNs \"iter\");\n                                              disambiguator = 0 };\n                                            { Types.data =\n                                              (Types.LifetimeNs \"'_\");\n                                              disambiguator = 0 }\n                                            ]\n                                          },\n                                        \"'_\"));\n                                    var = \"0\" }))\n                              },\n                            (Types.Slice (Types.Uint Types.U8)), false))\n                         ];\n                       output =\n                       Types.Adt {\n                         def_id =\n                         { Types.index = (2, 9967); krate = \"core\";\n                           path =\n                           [{ Types.data = (Types.TypeNs \"slice\");\n                              disambiguator = 0 };\n                             { Types.data = (Types.TypeNs \"iter\");\n                               disambiguator = 0 };\n                             { Types.data = (Types.TypeNs \"Iter\");\n                               disambiguator = 0 }\n                             ]\n                           };\n                         generic_args =\n                         [(Types.Lifetime\n                             { Types.kind =\n                               (Types.ReLateBound\n                                  (\"0\",\n                                   { Types.kind =\n                                     (Types.BrNamed\n                                        ({ Types.index = (2, 56478);\n                                           krate = \"core\";\n                                           path =\n                                           [{ Types.data =\n                                              (Types.TypeNs \"slice\");\n                                              disambiguator = 0 };\n                                             { Types.data = Types.Impl;\n                                               disambiguator = 0 };\n                                             { Types.data =\n                                               (Types.ValueNs \"iter\");\n                                               disambiguator = 0 };\n                                             { Types.data =\n                                               (Types.LifetimeNs \"'_\");\n                                               disambiguator = 0 }\n                                             ]\n                                           },\n                                         \"'_\"));\n                                     var = \"0\" }))\n                               });\n                           (Types.Type (Types.Uint Types.U8))]};\n                       unsafety = Types.Normal }\n                     })\n                };\n              generic_args = [(Types.Type (Types.Uint Types.U8))];\n              impl = None;\n              ty =\n              (Types.Arrow\n                 { Types.bound_vars =\n                   [(Types.Region\n                       (Types.BrNamed\n                          ({ Types.index = (2, 56478); krate = \"core\";\n                             path =\n                             [{ Types.data = (Types.TypeNs \"slice\");\n                                disambiguator = 0 };\n                               { Types.data = Types.Impl; disambiguator = 0 };\n                               { Types.data = (Types.ValueNs \"iter\");\n                                 disambiguator = 0 };\n                               { Types.data = (Types.LifetimeNs \"'_\");\n                                 disambiguator = 0 }\n                               ]\n                             },\n                           \"'_\")))\n                     ];\n                   value =\n                   { Types.abi = Types.Abi {todo = \"Rust\"};\n                     c_variadic = false;\n                     inputs =\n                     [(Types.Ref\n                         ({ Types.kind =\n                            (Types.ReLateBound\n                               (\"0\",\n                                { Types.kind =\n                                  (Types.BrNamed\n                                     ({ Types.index = (2, 56478);\n                                        krate = \"core\";\n                                        path =\n                                        [{ Types.data =\n                                           (Types.TypeNs \"slice\");\n                                           disambiguator = 0 };\n                                          { Types.data = Types.Impl;\n                                            disambiguator = 0 };\n                                          { Types.data =\n                                            (Types.ValueNs \"iter\");\n                                            disambiguator = 0 };\n                                          { Types.data =\n                                            (Types.LifetimeNs \"'_\");\n                                            disambiguator = 0 }\n                                          ]\n                                        },\n                                      \"'_\"));\n                                  var = \"0\" }))\n                            },\n                          (Types.Slice (Types.Uint Types.U8)), false))\n                       ];\n                     output =\n                     Types.Adt {\n                       def_id =\n                       { Types.index = (2, 9967); krate = \"core\";\n                         path =\n                         [{ Types.data = (Types.TypeNs \"slice\");\n                            disambiguator = 0 };\n                           { Types.data = (Types.TypeNs \"iter\");\n                             disambiguator = 0 };\n                           { Types.data = (Types.TypeNs \"Iter\");\n                             disambiguator = 0 }\n                           ]\n                         };\n                       generic_args =\n                       [(Types.Lifetime\n                           { Types.kind =\n                             (Types.ReLateBound\n                                (\"0\",\n                                 { Types.kind =\n                                   (Types.BrNamed\n                                      ({ Types.index = (2, 56478);\n                                         krate = \"core\";\n                                         path =\n                                         [{ Types.data =\n                                            (Types.TypeNs \"slice\");\n                                            disambiguator = 0 };\n                                           { Types.data = Types.Impl;\n                                             disambiguator = 0 };\n                                           { Types.data =\n                                             (Types.ValueNs \"iter\");\n                                             disambiguator = 0 };\n                                           { Types.data =\n                                             (Types.LifetimeNs \"'_\");\n                                             disambiguator = 0 }\n                                           ]\n                                         },\n                                       \"'_\"));\n                                   var = \"0\" }))\n                             });\n                         (Types.Type (Types.Uint Types.U8))]};\n                     unsafety = Types.Normal }\n                   })};\n            hir_id = (Some (\"647\", \"10\"));\n            span =\n            { Types.filename =\n              (Types.Real (Types.LocalPath \"src/tls13utils.rs\"));\n              hi = { Types.col = \"22\"; line = \"131\" };\n              lo = { Types.col = \"14\"; line = \"131\" } };\n            ty =\n            Types.Adt {\n              def_id =\n              { Types.index = (2, 9967); krate = \"core\";\n                path =\n                [{ Types.data = (Types.TypeNs \"slice\"); disambiguator = 0 };\n                  { Types.data = (Types.TypeNs \"iter\"); disambiguator = 0 };\n                  { Types.data = (Types.TypeNs \"Iter\"); disambiguator = 0 }]\n                };\n              generic_args =\n              [(Types.Lifetime { Types.kind = Types.ReErased });\n                (Types.Type (Types.Uint Types.U8))]}\n            };\n           { Types.attributes = [];\n             contents =\n             Types.Closure {\n               body =\n               { Types.attributes = [];\n                 contents =\n                 Types.Call {\n                   args =\n                   [{ Types.attributes = [];\n                      contents =\n                      Types.Borrow {\n                        arg =\n                        { Types.attributes = [];\n                          contents =\n                          Types.Deref {\n                            arg =\n                            { Types.attributes = [];\n                              contents =\n                              Types.VarRef {\n                                id =\n                                { Types.id =\n                                  { Types.local_id = \"16\";\n                                    owner =\n                                    { Types.index = (0, 647);\n                                      krate = \"bertie\";\n                                      path =\n                                      [{ Types.data =\n                                         (Types.TypeNs \"tls13utils\");\n                                         disambiguator = 0 };\n                                        { Types.data = Types.Impl;\n                                          disambiguator = 7 };\n                                        { Types.data = (Types.ValueNs \"from\");\n                                          disambiguator = 0 }\n                                        ]\n                                      }\n                                    };\n                                  name = \"x\" }};\n                              hir_id = None;\n                              span =\n                              { Types.filename =\n                                (Types.Real\n                                   (Types.LocalPath \"src/tls13utils.rs\"));\n                                hi = { Types.col = \"32\"; line = \"131\" };\n                                lo = { Types.col = \"31\"; line = \"131\" } };\n                              ty =\n                              (Types.Ref\n                                 ({ Types.kind = Types.ReErased },\n                                  (Types.Uint Types.U8), false))\n                              }};\n                          hir_id = None;\n                          span =\n                          { Types.filename =\n                            (Types.Real (Types.LocalPath \"src/tls13utils.rs\"));\n                            hi = { Types.col = \"39\"; line = \"131\" };\n                            lo = { Types.col = \"31\"; line = \"131\" } };\n                          ty = (Types.Uint Types.U8) };\n                        borrow_kind = Types.Shared};\n                      hir_id = (Some (\"647\", \"19\"));\n                      span =\n                      { Types.filename =\n                        (Types.Real (Types.LocalPath \"src/tls13utils.rs\"));\n                        hi = { Types.col = \"39\"; line = \"131\" };\n                        lo = { Types.col = \"31\"; line = \"131\" } };\n                      ty =\n                      (Types.Ref\n                         ({ Types.kind = Types.ReErased },\n                          (Types.Uint Types.U8), false))\n                      }\n                     ];\n                   fn_span =\n                   { Types.filename =\n                     (Types.Real (Types.LocalPath \"src/tls13utils.rs\"));\n                     hi = { Types.col = \"39\"; line = \"131\" };\n                     lo = { Types.col = \"33\"; line = \"131\" } };\n                   from_hir_call = true;\n                   fun' =\n                   { Types.attributes = [];\n                     contents =\n                     Types.GlobalName {\n                       id =\n                       { Types.index = (2, 2512); krate = \"core\";\n                         path =\n                         [{ Types.data = (Types.TypeNs \"convert\");\n                            disambiguator = 0 };\n                           { Types.data = (Types.TypeNs \"Into\");\n                             disambiguator = 0 };\n                           { Types.data = (Types.ValueNs \"into\");\n                             disambiguator = 0 }\n                           ]\n                         }};\n                     hir_id = None;\n                     span =\n                     { Types.filename =\n                       (Types.Real (Types.LocalPath \"src/tls13utils.rs\"));\n                       hi = { Types.col = \"37\"; line = \"131\" };\n                       lo = { Types.col = \"33\"; line = \"131\" } };\n                     ty =\n                     (Types.Arrow\n                        { Types.bound_vars = [];\n                          value =\n                          { Types.abi = Types.Abi {todo = \"Rust\"};\n                            c_variadic = false;\n                            inputs =\n                            [(Types.Ref\n                                ({ Types.kind = Types.ReErased },\n                                 (Types.Uint Types.U8), false))\n                              ];\n                            output =\n                            Types.Adt {\n                              def_id =\n                              { Types.index = (0, 1185); krate = \"bertie\";\n                                path =\n                                [{ Types.data = (Types.TypeNs \"tls13utils\");\n                                   disambiguator = 0 };\n                                  { Types.data = (Types.TypeNs \"U8\");\n                                    disambiguator = 0 }\n                                  ]\n                                };\n                              generic_args = []};\n                            unsafety = Types.Normal }\n                          })\n                     };\n                   generic_args =\n                   [(Types.Type\n                       (Types.Ref\n                          ({ Types.kind = Types.ReErased },\n                           (Types.Uint Types.U8), false)));\n                     (Types.Type\n                        Types.Adt {\n                          def_id =\n                          { Types.index = (0, 1185); krate = \"bertie\";\n                            path =\n                            [{ Types.data = (Types.TypeNs \"tls13utils\");\n                               disambiguator = 0 };\n                              { Types.data = (Types.TypeNs \"U8\");\n                                disambiguator = 0 }\n                              ]\n                            };\n                          generic_args = []})\n                     ];\n                   impl =\n                   (Some { Types.args =\n                           [{ Types.args = [];\n                              impl =\n                              Types.Builtin {\n                                trait =\n                                { Types.def_id =\n                                  { Types.index = (2, 2689); krate = \"core\";\n                                    path =\n                                    [{ Types.data = (Types.TypeNs \"marker\");\n                                       disambiguator = 0 };\n                                      { Types.data = (Types.TypeNs \"Sized\");\n                                        disambiguator = 0 }\n                                      ]\n                                    };\n                                  generic_args =\n                                  [(Types.Type\n                                      (Types.Ref\n                                         ({ Types.kind = Types.ReErased },\n                                          (Types.Uint Types.U8), false)))\n                                    ]\n                                  }}\n                              };\n                             { Types.args = [];\n                               impl =\n                               Types.Builtin {\n                                 trait =\n                                 { Types.def_id =\n                                   { Types.index = (2, 2689); krate = \"core\";\n                                     path =\n                                     [{ Types.data = (Types.TypeNs \"marker\");\n                                        disambiguator = 0 };\n                                       { Types.data = (Types.TypeNs \"Sized\");\n                                         disambiguator = 0 }\n                                       ]\n                                     };\n                                   generic_args =\n                                   [(Types.Type\n                                       Types.Adt {\n                                         def_id =\n                                         { Types.index = (0, 1185);\n                                           krate = \"bertie\";\n                                           path =\n                                           [{ Types.data =\n                                              (Types.TypeNs \"tls13utils\");\n                                              disambiguator = 0 };\n                                             { Types.data =\n                                               (Types.TypeNs \"U8\");\n                                               disambiguator = 0 }\n                                             ]\n                                           };\n                                         generic_args = []})\n                                     ]\n                                   }}\n                               };\n                             { Types.args = [];\n                               impl =\n                               Types.Concrete {\n                                 generics =\n                                 [(Types.Lifetime\n                                     { Types.kind =\n                                       (Types.ReVar { Types.index = 0 }) })\n                                   ];\n                                 id =\n                                 { Types.index = (0, 637); krate = \"bertie\";\n                                   path =\n                                   [{ Types.data =\n                                      (Types.TypeNs \"tls13utils\");\n                                      disambiguator = 0 };\n                                     { Types.data = Types.Impl;\n                                       disambiguator = 3 }\n                                     ]\n                                   }}\n                               }\n                             ];\n                           impl =\n                           Types.Concrete {\n                             generics =\n                             [(Types.Type\n                                 (Types.Ref\n                                    ({ Types.kind = Types.ReErased },\n                                     (Types.Uint Types.U8), false)));\n                               (Types.Type\n                                  Types.Adt {\n                                    def_id =\n                                    { Types.index = (0, 1185);\n                                      krate = \"bertie\";\n                                      path =\n                                      [{ Types.data =\n                                         (Types.TypeNs \"tls13utils\");\n                                         disambiguator = 0 };\n                                        { Types.data = (Types.TypeNs \"U8\");\n                                          disambiguator = 0 }\n                                        ]\n                                      };\n                                    generic_args = []})\n                               ];\n                             id =\n                             { Types.index = (2, 2536); krate = \"core\";\n                               path =\n                               [{ Types.data = (Types.TypeNs \"convert\");\n                                  disambiguator = 0 };\n                                 { Types.data = Types.Impl; disambiguator = 3\n                                   }\n                                 ]\n                               }}\n                           });\n                   ty =\n                   (Types.Arrow\n                      { Types.bound_vars = [];\n                        value =\n                        { Types.abi = Types.Abi {todo = \"Rust\"};\n                          c_variadic = false;\n                          inputs =\n                          [(Types.Ref\n                              ({ Types.kind = Types.ReErased },\n                               (Types.Uint Types.U8), false))\n                            ];\n                          output =\n                          Types.Adt {\n                            def_id =\n                            { Types.index = (0, 1185); krate = \"bertie\";\n                              path =\n                              [{ Types.data = (Types.TypeNs \"tls13utils\");\n                                 disambiguator = 0 };\n                                { Types.data = (Types.TypeNs \"U8\");\n                                  disambiguator = 0 }\n                                ]\n                              };\n                            generic_args = []};\n                          unsafety = Types.Normal }\n                        })};\n                 hir_id = (Some (\"647\", \"17\"));\n                 span =\n                 { Types.filename =\n                   (Types.Real (Types.LocalPath \"src/tls13utils.rs\"));\n                   hi = { Types.col = \"39\"; line = \"131\" };\n                   lo = { Types.col = \"31\"; line = \"131\" } };\n                 ty =\n                 Types.Adt {\n                   def_id =\n                   { Types.index = (0, 1185); krate = \"bertie\";\n                     path =\n                     [{ Types.data = (Types.TypeNs \"tls13utils\");\n                        disambiguator = 0 };\n                       { Types.data = (Types.TypeNs \"U8\"); disambiguator = 0\n                         }\n                       ]\n                     };\n                   generic_args = []}\n                 };\n               movability = None;\n               params =\n               [{ Types.attributes = []; hir_id = None; pat = None;\n                  self_kind = None;\n                  ty =\n                  (Types.Ref\n                     ({ Types.kind = Types.ReErased },\n                      (Types.Arrow\n                         { Types.bound_vars = [];\n                           value =\n                           { Types.abi = Types.Abi {todo = \"Rust\"};\n                             c_variadic = false;\n                             inputs =\n                             [(Types.Ref\n                                 ({ Types.kind = Types.ReErased },\n                                  (Types.Uint Types.U8), false))\n                               ];\n                             output =\n                             Types.Adt {\n                               def_id =\n                               { Types.index = (0, 1185); krate = \"bertie\";\n                                 path =\n                                 [{ Types.data = (Types.TypeNs \"tls13utils\");\n                                    disambiguator = 0 };\n                                   { Types.data = (Types.TypeNs \"U8\");\n                                     disambiguator = 0 }\n                                   ]\n                                 };\n                               generic_args = []};\n                             unsafety = Types.Normal }\n                           }),\n                      true));\n                  ty_span = None };\n                 { Types.attributes = [];\n                   hir_id =\n                   (Some { Types.local_id = \"15\";\n                           owner =\n                           { Types.index = (0, 647); krate = \"bertie\";\n                             path =\n                             [{ Types.data = (Types.TypeNs \"tls13utils\");\n                                disambiguator = 0 };\n                               { Types.data = Types.Impl; disambiguator = 7 };\n                               { Types.data = (Types.ValueNs \"from\");\n                                 disambiguator = 0 }\n                               ]\n                             }\n                           });\n                   pat =\n                   (Some { Types.attributes = [];\n                           contents =\n                           Types.Binding {is_primary = true;\n                             mode = Types.ByValue; mutability = false;\n                             subpattern = None;\n                             ty =\n                             (Types.Ref\n                                ({ Types.kind = Types.ReErased },\n                                 (Types.Uint Types.U8), false));\n                             var =\n                             { Types.id =\n                               { Types.local_id = \"16\";\n                                 owner =\n                                 { Types.index = (0, 647); krate = \"bertie\";\n                                   path =\n                                   [{ Types.data =\n                                      (Types.TypeNs \"tls13utils\");\n                                      disambiguator = 0 };\n                                     { Types.data = Types.Impl;\n                                       disambiguator = 7 };\n                                     { Types.data = (Types.ValueNs \"from\");\n                                       disambiguator = 0 }\n                                     ]\n                                   }\n                                 };\n                               name = \"x\" }};\n                           hir_id = None;\n                           span =\n                           { Types.filename =\n                             (Types.Real\n                                (Types.LocalPath \"src/tls13utils.rs\"));\n                             hi = { Types.col = \"29\"; line = \"131\" };\n                             lo = { Types.col = \"28\"; line = \"131\" } };\n                           ty =\n                           (Types.Ref\n                              ({ Types.kind = Types.ReErased },\n                               (Types.Uint Types.U8), false))\n                           });\n                   self_kind = None;\n                   ty =\n                   (Types.Ref\n                      ({ Types.kind = Types.ReErased },\n                       (Types.Uint Types.U8), false));\n                   ty_span = None }\n                 ];\n               upvars = []};\n             hir_id = (Some (\"647\", \"14\"));\n             span =\n             { Types.filename =\n               (Types.Real (Types.LocalPath \"src/tls13utils.rs\"));\n               hi = { Types.col = \"39\"; line = \"131\" };\n               lo = { Types.col = \"27\"; line = \"131\" } };\n             ty =\n             (Types.Arrow\n                { Types.bound_vars = [];\n                  value =\n                  { Types.abi = Types.Abi {todo = \"Rust\"};\n                    c_variadic = false;\n                    inputs =\n                    [(Types.Ref\n                        ({ Types.kind = Types.ReErased },\n                         (Types.Uint Types.U8), false))\n                      ];\n                    output =\n                    Types.Adt {\n                      def_id =\n                      { Types.index = (0, 1185); krate = \"bertie\";\n                        path =\n                        [{ Types.data = (Types.TypeNs \"tls13utils\");\n                           disambiguator = 0 };\n                          { Types.data = (Types.TypeNs \"U8\");\n                            disambiguator = 0 }\n                          ]\n                        };\n                      generic_args = []};\n                    unsafety = Types.Normal }\n                  })\n             }\n           ];\n         fn_span =\n         { Types.filename =\n           (Types.Real (Types.LocalPath \"src/tls13utils.rs\"));\n           hi = { Types.col = \"40\"; line = \"131\" };\n           lo = { Types.col = \"23\"; line = \"131\" } };\n         from_hir_call = true;\n         fun' =\n         { Types.attributes = [];\n           contents =\n           Types.GlobalName {\n             id =\n             { Types.index = (2, 7344); krate = \"core\";\n               path =\n               [{ Types.data = (Types.TypeNs \"iter\"); disambiguator = 0 };\n                 { Types.data = (Types.TypeNs \"traits\"); disambiguator = 0 };\n                 { Types.data = (Types.TypeNs \"iterator\"); disambiguator = 0\n                   };\n                 { Types.data = (Types.TypeNs \"Iterator\"); disambiguator = 0\n                   };\n                 { Types.data = (Types.ValueNs \"map\"); disambiguator = 0 }]\n               }};\n           hir_id = None;\n           span =\n           { Types.filename =\n             (Types.Real (Types.LocalPath \"src/tls13utils.rs\"));\n             hi = { Types.col = \"26\"; line = \"131\" };\n             lo = { Types.col = \"23\"; line = \"131\" } };\n           ty =\n           (Types.Arrow\n              { Types.bound_vars = [];\n                value =\n                { Types.abi = Types.Abi {todo = \"Rust\"}; c_variadic = false;\n                  inputs =\n                  [Types.Adt {\n                     def_id =\n                     { Types.index = (2, 9967); krate = \"core\";\n                       path =\n                       [{ Types.data = (Types.TypeNs \"slice\");\n                          disambiguator = 0 };\n                         { Types.data = (Types.TypeNs \"iter\");\n                           disambiguator = 0 };\n                         { Types.data = (Types.TypeNs \"Iter\");\n                           disambiguator = 0 }\n                         ]\n                       };\n                     generic_args =\n                     [(Types.Lifetime { Types.kind = Types.ReErased });\n                       (Types.Type (Types.Uint Types.U8))]};\n                    (Types.Arrow\n                       { Types.bound_vars = [];\n                         value =\n                         { Types.abi = Types.Abi {todo = \"Rust\"};\n                           c_variadic = false;\n                           inputs =\n                           [(Types.Ref\n                               ({ Types.kind = Types.ReErased },\n                                (Types.Uint Types.U8), false))\n                             ];\n                           output =\n                           Types.Adt {\n                             def_id =\n                             { Types.index = (0, 1185); krate = \"bertie\";\n                               path =\n                               [{ Types.data = (Types.TypeNs \"tls13utils\");\n                                  disambiguator = 0 };\n                                 { Types.data = (Types.TypeNs \"U8\");\n                                   disambiguator = 0 }\n                                 ]\n                               };\n                             generic_args = []};\n                           unsafety = Types.Normal }\n                         })\n                    ];\n                  output =\n                  Types.Adt {\n                    def_id =\n                    { Types.index = (2, 33976); krate = \"core\";\n                      path =\n                      [{ Types.data = (Types.TypeNs \"iter\");\n                         disambiguator = 0 };\n                        { Types.data = (Types.TypeNs \"adapters\");\n                          disambiguator = 0 };\n                        { Types.data = (Types.TypeNs \"map\");\n                          disambiguator = 0 };\n                        { Types.data = (Types.TypeNs \"Map\");\n                          disambiguator = 0 }\n                        ]\n                      };\n                    generic_args =\n                    [(Types.Type\n                        Types.Adt {\n                          def_id =\n                          { Types.index = (2, 9967); krate = \"core\";\n                            path =\n                            [{ Types.data = (Types.TypeNs \"slice\");\n                               disambiguator = 0 };\n                              { Types.data = (Types.TypeNs \"iter\");\n                                disambiguator = 0 };\n                              { Types.data = (Types.TypeNs \"Iter\");\n                                disambiguator = 0 }\n                              ]\n                            };\n                          generic_args =\n                          [(Types.Lifetime { Types.kind = Types.ReErased });\n                            (Types.Type (Types.Uint Types.U8))]});\n                      (Types.Type\n                         (Types.Arrow\n                            { Types.bound_vars = [];\n                              value =\n                              { Types.abi = Types.Abi {todo = \"Rust\"};\n                                c_variadic = false;\n                                inputs =\n                                [(Types.Ref\n                                    ({ Types.kind = Types.ReErased },\n                                     (Types.Uint Types.U8), false))\n                                  ];\n                                output =\n                                Types.Adt {\n                                  def_id =\n                                  { Types.index = (0, 1185);\n                                    krate = \"bertie\";\n                                    path =\n                                    [{ Types.data =\n                                       (Types.TypeNs \"tls13utils\");\n                                       disambiguator = 0 };\n                                      { Types.data = (Types.TypeNs \"U8\");\n                                        disambiguator = 0 }\n                                      ]\n                                    };\n                                  generic_args = []};\n                                unsafety = Types.Normal }\n                              }))\n                      ]};\n                  unsafety = Types.Normal }\n                })\n           };\n         generic_args =\n         [(Types.Type\n             Types.Adt {\n               def_id =\n               { Types.index = (2, 9967); krate = \"core\";\n                 path =\n                 [{ Types.data = (Types.TypeNs \"slice\"); disambiguator = 0 };\n                   { Types.data = (Types.TypeNs \"iter\"); disambiguator = 0 };\n                   { Types.data = (Types.TypeNs \"Iter\"); disambiguator = 0 }]\n                 };\n               generic_args =\n               [(Types.Lifetime { Types.kind = Types.ReErased });\n                 (Types.Type (Types.Uint Types.U8))]});\n           (Types.Type\n              Types.Adt {\n                def_id =\n                { Types.index = (0, 1185); krate = \"bertie\";\n                  path =\n                  [{ Types.data = (Types.TypeNs \"tls13utils\");\n                     disambiguator = 0 };\n                    { Types.data = (Types.TypeNs \"U8\"); disambiguator = 0 }]\n                  };\n                generic_args = []});\n           (Types.Type\n              (Types.Arrow\n                 { Types.bound_vars = [];\n                   value =\n                   { Types.abi = Types.Abi {todo = \"Rust\"};\n                     c_variadic = false;\n                     inputs =\n                     [(Types.Ref\n                         ({ Types.kind = Types.ReErased },\n                          (Types.Uint Types.U8), false))\n                       ];\n                     output =\n                     Types.Adt {\n                       def_id =\n                       { Types.index = (0, 1185); krate = \"bertie\";\n                         path =\n                         [{ Types.data = (Types.TypeNs \"tls13utils\");\n                            disambiguator = 0 };\n                           { Types.data = (Types.TypeNs \"U8\");\n                             disambiguator = 0 }\n                           ]\n                         };\n                       generic_args = []};\n                     unsafety = Types.Normal }\n                   }))\n           ];\n         impl =\n         (Some { Types.args =\n                 [{ Types.args = [];\n                    impl =\n                    Types.Builtin {\n                      trait =\n                      { Types.def_id =\n                        { Types.index = (2, 2689); krate = \"core\";\n                          path =\n                          [{ Types.data = (Types.TypeNs \"marker\");\n                             disambiguator = 0 };\n                            { Types.data = (Types.TypeNs \"Sized\");\n                              disambiguator = 0 }\n                            ]\n                          };\n                        generic_args = [(Types.Type (Types.Uint Types.U8))] }}\n                    }\n                   ];\n                 impl =\n                 Types.Concrete {\n                   generics =\n                   [(Types.Lifetime\n                       { Types.kind = (Types.ReVar { Types.index = 0 }) });\n                     (Types.Type (Types.Uint Types.U8))];\n                   id =\n                   { Types.index = (2, 36672); krate = \"core\";\n                     path =\n                     [{ Types.data = (Types.TypeNs \"slice\");\n                        disambiguator = 0 };\n                       { Types.data = (Types.TypeNs \"iter\");\n                         disambiguator = 0 };\n                       { Types.data = Types.Impl; disambiguator = 181 }]\n                     }}\n                 });\n         ty =\n         (Types.Arrow\n            { Types.bound_vars = [];\n              value =\n              { Types.abi = Types.Abi {todo = \"Rust\"}; c_variadic = false;\n                inputs =\n                [Types.Adt {\n                   def_id =\n                   { Types.index = (2, 9967); krate = \"core\";\n                     path =\n                     [{ Types.data = (Types.TypeNs \"slice\");\n                        disambiguator = 0 };\n                       { Types.data = (Types.TypeNs \"iter\");\n                         disambiguator = 0 };\n                       { Types.data = (Types.TypeNs \"Iter\");\n                         disambiguator = 0 }\n                       ]\n                     };\n                   generic_args =\n                   [(Types.Lifetime { Types.kind = Types.ReErased });\n                     (Types.Type (Types.Uint Types.U8))]};\n                  (Types.Arrow\n                     { Types.bound_vars = [];\n                       value =\n                       { Types.abi = Types.Abi {todo = \"Rust\"};\n                         c_variadic = false;\n                         inputs =\n                         [(Types.Ref\n                             ({ Types.kind = Types.ReErased },\n                              (Types.Uint Types.U8), false))\n                           ];\n                         output =\n                         Types.Adt {\n                           def_id =\n                           { Types.index = (0, 1185); krate = \"bertie\";\n                             path =\n                             [{ Types.data = (Types.TypeNs \"tls13utils\");\n                                disambiguator = 0 };\n                               { Types.data = (Types.TypeNs \"U8\");\n                                 disambiguator = 0 }\n                               ]\n                             };\n                           generic_args = []};\n                         unsafety = Types.Normal }\n                       })\n                  ];\n                output =\n                Types.Adt {\n                  def_id =\n                  { Types.index = (2, 33976); krate = \"core\";\n                    path =\n                    [{ Types.data = (Types.TypeNs \"iter\"); disambiguator = 0\n                       };\n                      { Types.data = (Types.TypeNs \"adapters\");\n                        disambiguator = 0 };\n                      { Types.data = (Types.TypeNs \"map\"); disambiguator = 0\n                        };\n                      { Types.data = (Types.TypeNs \"Map\"); disambiguator = 0\n                        }\n                      ]\n                    };\n                  generic_args =\n                  [(Types.Type\n                      Types.Adt {\n                        def_id =\n                        { Types.index = (2, 9967); krate = \"core\";\n                          path =\n                          [{ Types.data = (Types.TypeNs \"slice\");\n                             disambiguator = 0 };\n                            { Types.data = (Types.TypeNs \"iter\");\n                              disambiguator = 0 };\n                            { Types.data = (Types.TypeNs \"Iter\");\n                              disambiguator = 0 }\n                            ]\n                          };\n                        generic_args =\n                        [(Types.Lifetime { Types.kind = Types.ReErased });\n                          (Types.Type (Types.Uint Types.U8))]});\n                    (Types.Type\n                       (Types.Arrow\n                          { Types.bound_vars = [];\n                            value =\n                            { Types.abi = Types.Abi {todo = \"Rust\"};\n                              c_variadic = false;\n                              inputs =\n                              [(Types.Ref\n                                  ({ Types.kind = Types.ReErased },\n                                   (Types.Uint Types.U8), false))\n                                ];\n                              output =\n                              Types.Adt {\n                                def_id =\n                                { Types.index = (0, 1185); krate = \"bertie\";\n                                  path =\n                                  [{ Types.data = (Types.TypeNs \"tls13utils\");\n                                     disambiguator = 0 };\n                                    { Types.data = (Types.TypeNs \"U8\");\n                                      disambiguator = 0 }\n                                    ]\n                                  };\n                                generic_args = []};\n                              unsafety = Types.Normal }\n                            }))\n                    ]};\n                unsafety = Types.Normal }\n              })};\n       hir_id = (Some (\"647\", \"8\"));\n       span =\n       { Types.filename = (Types.Real (Types.LocalPath \"src/tls13utils.rs\"));\n         hi = { Types.col = \"40\"; line = \"131\" };\n         lo = { Types.col = \"14\"; line = \"131\" } };\n       ty =\n       Types.Adt {\n         def_id =\n         { Types.index = (2, 33976); krate = \"core\";\n           path =\n           [{ Types.data = (Types.TypeNs \"iter\"); disambiguator = 0 };\n             { Types.data = (Types.TypeNs \"adapters\"); disambiguator = 0 };\n             { Types.data = (Types.TypeNs \"map\"); disambiguator = 0 };\n             { Types.data = (Types.TypeNs \"Map\"); disambiguator = 0 }]\n           };\n         generic_args =\n         [(Types.Type\n             Types.Adt {\n               def_id =\n               { Types.index = (2, 9967); krate = \"core\";\n                 path =\n                 [{ Types.data = (Types.TypeNs \"slice\"); disambiguator = 0 };\n                   { Types.data = (Types.TypeNs \"iter\"); disambiguator = 0 };\n                   { Types.data = (Types.TypeNs \"Iter\"); disambiguator = 0 }]\n                 };\n               generic_args =\n               [(Types.Lifetime { Types.kind = Types.ReErased });\n                 (Types.Type (Types.Uint Types.U8))]});\n           (Types.Type\n              (Types.Arrow\n                 { Types.bound_vars = [];\n                   value =\n                   { Types.abi = Types.Abi {todo = \"Rust\"};\n                     c_variadic = false;\n                     inputs =\n                     [(Types.Ref\n                         ({ Types.kind = Types.ReErased },\n                          (Types.Uint Types.U8), false))\n                       ];\n                     output =\n                     Types.Adt {\n                       def_id =\n                       { Types.index = (0, 1185); krate = \"bertie\";\n                         path =\n                         [{ Types.data = (Types.TypeNs \"tls13utils\");\n                            disambiguator = 0 };\n                           { Types.data = (Types.TypeNs \"U8\");\n                             disambiguator = 0 }\n                           ]\n                         };\n                       generic_args = []};\n                     unsafety = Types.Normal }\n                   }))\n           ]}\n       }\n      ];\n    fn_span =\n    { Types.filename = (Types.Real (Types.LocalPath \"src/tls13utils.rs\"));\n      hi = { Types.col = \"50\"; line = \"131\" };\n      lo = { Types.col = \"41\"; line = \"131\" } };\n    from_hir_call = true;\n    fun' =\n    { Types.attributes = [];\n      contents =\n      Types.GlobalName {\n        id =\n        { Types.index = (2, 7380); krate = \"core\";\n          path =\n          [{ Types.data = (Types.TypeNs \"iter\"); disambiguator = 0 };\n            { Types.data = (Types.TypeNs \"traits\"); disambiguator = 0 };\n            { Types.data = (Types.TypeNs \"iterator\"); disambiguator = 0 };\n            { Types.data = (Types.TypeNs \"Iterator\"); disambiguator = 0 };\n            { Types.data = (Types.ValueNs \"collect\"); disambiguator = 0 }]\n          }};\n      hir_id = None;\n      span =\n      { Types.filename = (Types.Real (Types.LocalPath \"src/tls13utils.rs\"));\n        hi = { Types.col = \"48\"; line = \"131\" };\n        lo = { Types.col = \"41\"; line = \"131\" } };\n      ty =\n      (Types.Arrow\n         { Types.bound_vars = [];\n           value =\n           { Types.abi = Types.Abi {todo = \"Rust\"}; c_variadic = false;\n             inputs =\n             [Types.Adt {\n                def_id =\n                { Types.index = (2, 33976); krate = \"core\";\n                  path =\n                  [{ Types.data = (Types.TypeNs \"iter\"); disambiguator = 0 };\n                    { Types.data = (Types.TypeNs \"adapters\");\n                      disambiguator = 0 };\n                    { Types.data = (Types.TypeNs \"map\"); disambiguator = 0 };\n                    { Types.data = (Types.TypeNs \"Map\"); disambiguator = 0 }]\n                  };\n                generic_args =\n                [(Types.Type\n                    Types.Adt {\n                      def_id =\n                      { Types.index = (2, 9967); krate = \"core\";\n                        path =\n                        [{ Types.data = (Types.TypeNs \"slice\");\n                           disambiguator = 0 };\n                          { Types.data = (Types.TypeNs \"iter\");\n                            disambiguator = 0 };\n                          { Types.data = (Types.TypeNs \"Iter\");\n                            disambiguator = 0 }\n                          ]\n                        };\n                      generic_args =\n                      [(Types.Lifetime { Types.kind = Types.ReErased });\n                        (Types.Type (Types.Uint Types.U8))]});\n                  (Types.Type\n                     (Types.Arrow\n                        { Types.bound_vars = [];\n                          value =\n                          { Types.abi = Types.Abi {todo = \"Rust\"};\n                            c_variadic = false;\n                            inputs =\n                            [(Types.Ref\n                                ({ Types.kind = Types.ReErased },\n                                 (Types.Uint Types.U8), false))\n                              ];\n                            output =\n                            Types.Adt {\n                              def_id =\n                              { Types.index = (0, 1185); krate = \"bertie\";\n                                path =\n                                [{ Types.data = (Types.TypeNs \"tls13utils\");\n                                   disambiguator = 0 };\n                                  { Types.data = (Types.TypeNs \"U8\");\n                                    disambiguator = 0 }\n                                  ]\n                                };\n                              generic_args = []};\n                            unsafety = Types.Normal }\n                          }))\n                  ]}\n               ];\n             output =\n             Types.Adt {\n               def_id =\n               { Types.index = (5, 6696); krate = \"alloc\";\n                 path =\n                 [{ Types.data = (Types.TypeNs \"vec\"); disambiguator = 0 };\n                   { Types.data = (Types.TypeNs \"Vec\"); disambiguator = 0 }]\n                 };\n               generic_args =\n               [(Types.Type\n                   Types.Adt {\n                     def_id =\n                     { Types.index = (0, 1185); krate = \"bertie\";\n                       path =\n                       [{ Types.data = (Types.TypeNs \"tls13utils\");\n                          disambiguator = 0 };\n                         { Types.data = (Types.TypeNs \"U8\");\n                           disambiguator = 0 }\n                         ]\n                       };\n                     generic_args = []});\n                 (Types.Type\n                    Types.Adt {\n                      def_id =\n                      { Types.index = (5, 7004); krate = \"alloc\";\n                        path =\n                        [{ Types.data = (Types.TypeNs \"alloc\");\n                           disambiguator = 0 };\n                          { Types.data = (Types.TypeNs \"Global\");\n                            disambiguator = 0 }\n                          ]\n                        };\n                      generic_args = []})\n                 ]};\n             unsafety = Types.Normal }\n           })\n      };\n    generic_args =\n    [(Types.Type\n        Types.Adt {\n          def_id =\n          { Types.index = (2, 33976); krate = \"core\";\n            path =\n            [{ Types.data = (Types.TypeNs \"iter\"); disambiguator = 0 };\n              { Types.data = (Types.TypeNs \"adapters\"); disambiguator = 0 };\n              { Types.data = (Types.TypeNs \"map\"); disambiguator = 0 };\n              { Types.data = (Types.TypeNs \"Map\"); disambiguator = 0 }]\n            };\n          generic_args =\n          [(Types.Type\n              Types.Adt {\n                def_id =\n                { Types.index = (2, 9967); krate = \"core\";\n                  path =\n                  [{ Types.data = (Types.TypeNs \"slice\"); disambiguator = 0 };\n                    { Types.data = (Types.TypeNs \"iter\"); disambiguator = 0 };\n                    { Types.data = (Types.TypeNs \"Iter\"); disambiguator = 0 }\n                    ]\n                  };\n                generic_args =\n                [(Types.Lifetime { Types.kind = Types.ReErased });\n                  (Types.Type (Types.Uint Types.U8))]});\n            (Types.Type\n               (Types.Arrow\n                  { Types.bound_vars = [];\n                    value =\n                    { Types.abi = Types.Abi {todo = \"Rust\"};\n                      c_variadic = false;\n                      inputs =\n                      [(Types.Ref\n                          ({ Types.kind = Types.ReErased },\n                           (Types.Uint Types.U8), false))\n                        ];\n                      output =\n                      Types.Adt {\n                        def_id =\n                        { Types.index = (0, 1185); krate = \"bertie\";\n                          path =\n                          [{ Types.data = (Types.TypeNs \"tls13utils\");\n                             disambiguator = 0 };\n                            { Types.data = (Types.TypeNs \"U8\");\n                              disambiguator = 0 }\n                            ]\n                          };\n                        generic_args = []};\n                      unsafety = Types.Normal }\n                    }))\n            ]});\n      (Types.Type\n         Types.Adt {\n           def_id =\n           { Types.index = (5, 6696); krate = \"alloc\";\n             path =\n             [{ Types.data = (Types.TypeNs \"vec\"); disambiguator = 0 };\n               { Types.data = (Types.TypeNs \"Vec\"); disambiguator = 0 }]\n             };\n           generic_args =\n           [(Types.Type\n               Types.Adt {\n                 def_id =\n                 { Types.index = (0, 1185); krate = \"bertie\";\n                   path =\n                   [{ Types.data = (Types.TypeNs \"tls13utils\");\n                      disambiguator = 0 };\n                     { Types.data = (Types.TypeNs \"U8\"); disambiguator = 0 }]\n                   };\n                 generic_args = []});\n             (Types.Type\n                Types.Adt {\n                  def_id =\n                  { Types.index = (5, 7004); krate = \"alloc\";\n                    path =\n                    [{ Types.data = (Types.TypeNs \"alloc\"); disambiguator = 0\n                       };\n                      { Types.data = (Types.TypeNs \"Global\");\n                        disambiguator = 0 }\n                      ]\n                    };\n                  generic_args = []})\n             ]})\n      ];\n    impl =\n    (Some { Types.args =\n            [{ Types.args = [];\n               impl =\n               Types.Builtin {\n                 trait =\n                 { Types.def_id =\n                   { Types.index = (2, 2689); krate = \"core\";\n                     path =\n                     [{ Types.data = (Types.TypeNs \"marker\");\n                        disambiguator = 0 };\n                       { Types.data = (Types.TypeNs \"Sized\");\n                         disambiguator = 0 }\n                       ]\n                     };\n                   generic_args = [(Types.Type (Types.Uint Types.U8))] }}\n               };\n              { Types.args = [];\n                impl =\n                Types.Builtin {\n                  trait =\n                  { Types.def_id =\n                    { Types.index = (2, 2689); krate = \"core\";\n                      path =\n                      [{ Types.data = (Types.TypeNs \"marker\");\n                         disambiguator = 0 };\n                        { Types.data = (Types.TypeNs \"Sized\");\n                          disambiguator = 0 }\n                        ]\n                      };\n                    generic_args =\n                    [(Types.Type\n                        Types.Adt {\n                          def_id =\n                          { Types.index = (2, 9967); krate = \"core\";\n                            path =\n                            [{ Types.data = (Types.TypeNs \"slice\");\n                               disambiguator = 0 };\n                              { Types.data = (Types.TypeNs \"iter\");\n                                disambiguator = 0 };\n                              { Types.data = (Types.TypeNs \"Iter\");\n                                disambiguator = 0 }\n                              ]\n                            };\n                          generic_args =\n                          [(Types.Lifetime { Types.kind = Types.ReErased });\n                            (Types.Type (Types.Uint Types.U8))]})\n                      ]\n                    }}\n                };\n              { Types.args = [];\n                impl =\n                Types.Builtin {\n                  trait =\n                  { Types.def_id =\n                    { Types.index = (2, 2689); krate = \"core\";\n                      path =\n                      [{ Types.data = (Types.TypeNs \"marker\");\n                         disambiguator = 0 };\n                        { Types.data = (Types.TypeNs \"Sized\");\n                          disambiguator = 0 }\n                        ]\n                      };\n                    generic_args =\n                    [(Types.Type\n                        (Types.Arrow\n                           { Types.bound_vars = [];\n                             value =\n                             { Types.abi = Types.Abi {todo = \"Rust\"};\n                               c_variadic = false;\n                               inputs =\n                               [(Types.Ref\n                                   ({ Types.kind = Types.ReErased },\n                                    (Types.Uint Types.U8), false))\n                                 ];\n                               output =\n                               Types.Adt {\n                                 def_id =\n                                 { Types.index = (0, 1185); krate = \"bertie\";\n                                   path =\n                                   [{ Types.data =\n                                      (Types.TypeNs \"tls13utils\");\n                                      disambiguator = 0 };\n                                     { Types.data = (Types.TypeNs \"U8\");\n                                       disambiguator = 0 }\n                                     ]\n                                   };\n                                 generic_args = []};\n                               unsafety = Types.Normal }\n                             }))\n                      ]\n                    }}\n                };\n              { Types.args =\n                [{ Types.args = [];\n                   impl =\n                   Types.Builtin {\n                     trait =\n                     { Types.def_id =\n                       { Types.index = (2, 2689); krate = \"core\";\n                         path =\n                         [{ Types.data = (Types.TypeNs \"marker\");\n                            disambiguator = 0 };\n                           { Types.data = (Types.TypeNs \"Sized\");\n                             disambiguator = 0 }\n                           ]\n                         };\n                       generic_args = [(Types.Type (Types.Uint Types.U8))] }}\n                   }\n                  ];\n                impl =\n                Types.Concrete {\n                  generics =\n                  [(Types.Lifetime\n                      { Types.kind = (Types.ReVar { Types.index = 0 }) });\n                    (Types.Type (Types.Uint Types.U8))];\n                  id =\n                  { Types.index = (2, 36672); krate = \"core\";\n                    path =\n                    [{ Types.data = (Types.TypeNs \"slice\"); disambiguator = 0\n                       };\n                      { Types.data = (Types.TypeNs \"iter\"); disambiguator = 0\n                        };\n                      { Types.data = Types.Impl; disambiguator = 181 }]\n                    }}\n                };\n              { Types.args = [];\n                impl =\n                Types.Builtin {\n                  trait =\n                  { Types.def_id =\n                    { Types.index = (2, 2689); krate = \"core\";\n                      path =\n                      [{ Types.data = (Types.TypeNs \"marker\");\n                         disambiguator = 0 };\n                        { Types.data = (Types.TypeNs \"Sized\");\n                          disambiguator = 0 }\n                        ]\n                      };\n                    generic_args = [(Types.Type (Types.Uint Types.U8))] }}\n                };\n              { Types.args = [];\n                impl =\n                (Types.Todo\n                   \"ImplExprAtom::Todo(see https://github.com/hacspec/hax/issues/381) ImplSourceClosureData(closure_def_id=DefId(0:648 ~ bertie[6a41]::tls13utils::{impl#7}::from::{closure#0}), substs=[i16, extern \\\"rust-call\\\" fn((&u8,)) -> tls13utils::U8, ()], nested=[Obligation(predicate=Binder(ClosureKind(DefId(0:648 ~ bertie[6a41]::tls13utils::{impl#7}::from::{closure#0}), [i16, extern \\\"rust-call\\\" fn((&u8,)) -> tls13utils::U8, ()], FnMut), []), depth=1)])\\n\\nBinder(\\n    <[closure@src/tls13utils.rs:131:28: 131:31] as std::ops::FnMut<(&u8,)>>,\\n    [],\\n)\")\n                };\n              { Types.args = [];\n                impl =\n                (Types.Todo\n                   \"impl_expr failed on Binder(\\n    <_ as std::marker::Sized>,\\n    [],\\n)\")\n                }\n              ];\n            impl =\n            Types.Concrete {\n              generics =\n              [(Types.Type (Types.Infer Types.TyVar));\n                (Types.Type\n                   Types.Adt {\n                     def_id =\n                     { Types.index = (2, 9967); krate = \"core\";\n                       path =\n                       [{ Types.data = (Types.TypeNs \"slice\");\n                          disambiguator = 0 };\n                         { Types.data = (Types.TypeNs \"iter\");\n                           disambiguator = 0 };\n                         { Types.data = (Types.TypeNs \"Iter\");\n                           disambiguator = 0 }\n                         ]\n                       };\n                     generic_args =\n                     [(Types.Lifetime { Types.kind = Types.ReErased });\n                       (Types.Type (Types.Uint Types.U8))]});\n                (Types.Type\n                   (Types.Arrow\n                      { Types.bound_vars = [];\n                        value =\n                        { Types.abi = Types.Abi {todo = \"Rust\"};\n                          c_variadic = false;\n                          inputs =\n                          [(Types.Ref\n                              ({ Types.kind = Types.ReErased },\n                               (Types.Uint Types.U8), false))\n                            ];\n                          output =\n                          Types.Adt {\n                            def_id =\n                            { Types.index = (0, 1185); krate = \"bertie\";\n                              path =\n                              [{ Types.data = (Types.TypeNs \"tls13utils\");\n                                 disambiguator = 0 };\n                                { Types.data = (Types.TypeNs \"U8\");\n                                  disambiguator = 0 }\n                                ]\n                              };\n                            generic_args = []};\n                          unsafety = Types.Normal }\n                        }))\n                ];\n              id =\n              { Types.index = (2, 6060); krate = \"core\";\n                path =\n                [{ Types.data = (Types.TypeNs \"iter\"); disambiguator = 0 };\n                  { Types.data = (Types.TypeNs \"adapters\"); disambiguator = 0\n                    };\n                  { Types.data = (Types.TypeNs \"map\"); disambiguator = 0 };\n                  { Types.data = Types.Impl; disambiguator = 2 }]\n                }}\n            });\n    ty =\n    (Types.Arrow\n       { Types.bound_vars = [];\n         value =\n         { Types.abi = Types.Abi {todo = \"Rust\"}; c_variadic = false;\n           inputs =\n           [Types.Adt {\n              def_id =\n              { Types.index = (2, 33976); krate = \"core\";\n                path =\n                [{ Types.data = (Types.TypeNs \"iter\"); disambiguator = 0 };\n                  { Types.data = (Types.TypeNs \"adapters\"); disambiguator = 0\n                    };\n                  { Types.data = (Types.TypeNs \"map\"); disambiguator = 0 };\n                  { Types.data = (Types.TypeNs \"Map\"); disambiguator = 0 }]\n                };\n              generic_args =\n              [(Types.Type\n                  Types.Adt {\n                    def_id =\n                    { Types.index = (2, 9967); krate = \"core\";\n                      path =\n                      [{ Types.data = (Types.TypeNs \"slice\");\n                         disambiguator = 0 };\n                        { Types.data = (Types.TypeNs \"iter\");\n                          disambiguator = 0 };\n                        { Types.data = (Types.TypeNs \"Iter\");\n                          disambiguator = 0 }\n                        ]\n                      };\n                    generic_args =\n                    [(Types.Lifetime { Types.kind = Types.ReErased });\n                      (Types.Type (Types.Uint Types.U8))]});\n                (Types.Type\n                   (Types.Arrow\n                      { Types.bound_vars = [];\n                        value =\n                        { Types.abi = Types.Abi {todo = \"Rust\"};\n                          c_variadic = false;\n                          inputs =\n                          [(Types.Ref\n                              ({ Types.kind = Types.ReErased },\n                               (Types.Uint Types.U8), false))\n                            ];\n                          output =\n                          Types.Adt {\n                            def_id =\n                            { Types.index = (0, 1185); krate = \"bertie\";\n                              path =\n                              [{ Types.data = (Types.TypeNs \"tls13utils\");\n                                 disambiguator = 0 };\n                                { Types.data = (Types.TypeNs \"U8\");\n                                  disambiguator = 0 }\n                                ]\n                              };\n                            generic_args = []};\n                          unsafety = Types.Normal }\n                        }))\n                ]}\n             ];\n           output =\n           Types.Adt {\n             def_id =\n             { Types.index = (5, 6696); krate = \"alloc\";\n               path =\n               [{ Types.data = (Types.TypeNs \"vec\"); disambiguator = 0 };\n                 { Types.data = (Types.TypeNs \"Vec\"); disambiguator = 0 }]\n               };\n             generic_args =\n             [(Types.Type\n                 Types.Adt {\n                   def_id =\n                   { Types.index = (0, 1185); krate = \"bertie\";\n                     path =\n                     [{ Types.data = (Types.TypeNs \"tls13utils\");\n                        disambiguator = 0 };\n                       { Types.data = (Types.TypeNs \"U8\"); disambiguator = 0\n                         }\n                       ]\n                     };\n                   generic_args = []});\n               (Types.Type\n                  Types.Adt {\n                    def_id =\n                    { Types.index = (5, 7004); krate = \"alloc\";\n                      path =\n                      [{ Types.data = (Types.TypeNs \"alloc\");\n                         disambiguator = 0 };\n                        { Types.data = (Types.TypeNs \"Global\");\n                          disambiguator = 0 }\n                        ]\n                      };\n                    generic_args = []})\n               ]};\n           unsafety = Types.Normal }\n         })};\n  hir_id = (Some (\"647\", \"6\"));\n  span =\n  { Types.filename = (Types.Real (Types.LocalPath \"src/tls13utils.rs\"));\n    hi = { Types.col = \"50\"; line = \"131\" };\n    lo = { Types.col = \"14\"; line = \"131\" } };\n  ty =\n  Types.Adt {\n    def_id =\n    { Types.index = (5, 6696); krate = \"alloc\";\n      path =\n      [{ Types.data = (Types.TypeNs \"vec\"); disambiguator = 0 };\n        { Types.data = (Types.TypeNs \"Vec\"); disambiguator = 0 }]\n      };\n    generic_args =\n    [(Types.Type\n        Types.Adt {\n          def_id =\n          { Types.index = (0, 1185); krate = \"bertie\";\n            path =\n            [{ Types.data = (Types.TypeNs \"tls13utils\"); disambiguator = 0 };\n              { Types.data = (Types.TypeNs \"U8\"); disambiguator = 0 }]\n            };\n          generic_args = []});\n      (Types.Type\n         Types.Adt {\n           def_id =\n           { Types.index = (5, 7004); krate = \"alloc\";\n             path =\n             [{ Types.data = (Types.TypeNs \"alloc\"); disambiguator = 0 };\n               { Types.data = (Types.TypeNs \"Global\"); disambiguator = 0 }]\n             };\n           generic_args = []})\n      ]}\n  }"
        )
      <:
      t_Bytes
  }

let impl__Bytes__as_raw (self: t_Bytes) : t_Slice t_U8 = Core.Ops.Deref.f_deref self._0

let impl__Bytes__declassify (self: t_Bytes) : Alloc.Vec.t_Vec u8 Alloc.Alloc.t_Global =
  Rust_primitives.Hax.failure ""
    "{ Types.attributes = [];\n  contents =\n  Types.Call {\n    args =\n    [{ Types.attributes = [];\n       contents =\n       Types.Call {\n         args =\n         [{ Types.attributes = [];\n            contents =\n            Types.Call {\n              args =\n              [{ Types.attributes = [];\n                 contents =\n                 Types.Borrow {\n                   arg =\n                   { Types.attributes = [];\n                     contents =\n                     Types.Deref {\n                       arg =\n                       { Types.attributes = [];\n                         contents =\n                         Types.Call {\n                           args =\n                           [{ Types.attributes = [];\n                              contents =\n                              Types.Borrow {\n                                arg =\n                                { Types.attributes = [];\n                                  contents =\n                                  Types.Field {\n                                    field =\n                                    { Types.index = (0, 1220);\n                                      krate = \"bertie\";\n                                      path =\n                                      [{ Types.data =\n                                         (Types.TypeNs \"tls13utils\");\n                                         disambiguator = 0 };\n                                        { Types.data = (Types.TypeNs \"Bytes\");\n                                          disambiguator = 0 };\n                                        { Types.data = (Types.ValueNs \"0\");\n                                          disambiguator = 0 }\n                                        ]\n                                      };\n                                    lhs =\n                                    { Types.attributes = [];\n                                      contents =\n                                      Types.Deref {\n                                        arg =\n                                        { Types.attributes = [];\n                                          contents =\n                                          Types.VarRef {\n                                            id =\n                                            { Types.id =\n                                              { Types.local_id = \"2\";\n                                                owner =\n                                                { Types.index = (0, 650);\n                                                  krate = \"bertie\";\n                                                  path =\n                                                  [{ Types.data =\n                                                     (Types.TypeNs\n                                                        \"tls13utils\");\n                                                     disambiguator = 0 };\n                                                    { Types.data = Types.Impl;\n                                                      disambiguator = 8 };\n                                                    { Types.data =\n                                                      (Types.ValueNs\n                                                         \"declassify\");\n                                                      disambiguator = 0 }\n                                                    ]\n                                                  }\n                                                };\n                                              name = \"self\" }};\n                                          hir_id = None;\n                                          span =\n                                          { Types.filename =\n                                            (Types.Real\n                                               (Types.LocalPath\n                                                  \"src/tls13utils.rs\"));\n                                            hi =\n                                            { Types.col = \"12\"; line = \"138\"\n                                              };\n                                            lo =\n                                            { Types.col = \"8\"; line = \"138\" }\n                                            };\n                                          ty =\n                                          (Types.Ref\n                                             ({ Types.kind = Types.ReErased },\n                                              Types.Adt {\n                                                def_id =\n                                                { Types.index = (0, 1218);\n                                                  krate = \"bertie\";\n                                                  path =\n                                                  [{ Types.data =\n                                                     (Types.TypeNs\n                                                        \"tls13utils\");\n                                                     disambiguator = 0 };\n                                                    { Types.data =\n                                                      (Types.TypeNs \"Bytes\");\n                                                      disambiguator = 0 }\n                                                    ]\n                                                  };\n                                                generic_args = []},\n                                              false))\n                                          }};\n                                      hir_id = (Some (\"650\", \"10\"));\n                                      span =\n                                      { Types.filename =\n                                        (Types.Real\n                                           (Types.LocalPath\n                                              \"src/tls13utils.rs\"));\n                                        hi =\n                                        { Types.col = \"12\"; line = \"138\" };\n                                        lo =\n                                        { Types.col = \"8\"; line = \"138\" } };\n                                      ty =\n                                      Types.Adt {\n                                        def_id =\n                                        { Types.index = (0, 1218);\n                                          krate = \"bertie\";\n                                          path =\n                                          [{ Types.data =\n                                             (Types.TypeNs \"tls13utils\");\n                                             disambiguator = 0 };\n                                            { Types.data =\n                                              (Types.TypeNs \"Bytes\");\n                                              disambiguator = 0 }\n                                            ]\n                                          };\n                                        generic_args = []}\n                                      }};\n                                  hir_id = None;\n                                  span =\n                                  { Types.filename =\n                                    (Types.Real\n                                       (Types.LocalPath \"src/tls13utils.rs\"));\n                                    hi = { Types.col = \"14\"; line = \"138\" };\n                                    lo = { Types.col = \"8\"; line = \"138\" } };\n                                  ty =\n                                  Types.Adt {\n                                    def_id =\n                                    { Types.index = (5, 6696);\n                                      krate = \"alloc\";\n                                      path =\n                                      [{ Types.data = (Types.TypeNs \"vec\");\n                                         disambiguator = 0 };\n                                        { Types.data = (Types.TypeNs \"Vec\");\n                                          disambiguator = 0 }\n                                        ]\n                                      };\n                                    generic_args =\n                                    [(Types.Type\n                                        Types.Adt {\n                                          def_id =\n                                          { Types.index = (0, 1185);\n                                            krate = \"bertie\";\n                                            path =\n                                            [{ Types.data =\n                                               (Types.TypeNs \"tls13utils\");\n                                               disambiguator = 0 };\n                                              { Types.data =\n                                                (Types.TypeNs \"U8\");\n                                                disambiguator = 0 }\n                                              ]\n                                            };\n                                          generic_args = []});\n                                      (Types.Type\n                                         Types.Adt {\n                                           def_id =\n                                           { Types.index = (5, 7004);\n                                             krate = \"alloc\";\n                                             path =\n                                             [{ Types.data =\n                                                (Types.TypeNs \"alloc\");\n                                                disambiguator = 0 };\n                                               { Types.data =\n                                                 (Types.TypeNs \"Global\");\n                                                 disambiguator = 0 }\n                                               ]\n                                             };\n                                           generic_args = []})\n                                      ]}\n                                  };\n                                borrow_kind = Types.Shared};\n                              hir_id = None;\n                              span =\n                              { Types.filename =\n                                (Types.Real\n                                   (Types.LocalPath \"src/tls13utils.rs\"));\n                                hi = { Types.col = \"21\"; line = \"138\" };\n                                lo = { Types.col = \"8\"; line = \"138\" } };\n                              ty =\n                              (Types.Ref\n                                 ({ Types.kind = Types.ReErased },\n                                  Types.Adt {\n                                    def_id =\n                                    { Types.index = (5, 6696);\n                                      krate = \"alloc\";\n                                      path =\n                                      [{ Types.data = (Types.TypeNs \"vec\");\n                                         disambiguator = 0 };\n                                        { Types.data = (Types.TypeNs \"Vec\");\n                                          disambiguator = 0 }\n                                        ]\n                                      };\n                                    generic_args =\n                                    [(Types.Type\n                                        Types.Adt {\n                                          def_id =\n                                          { Types.index = (0, 1185);\n                                            krate = \"bertie\";\n                                            path =\n                                            [{ Types.data =\n                                               (Types.TypeNs \"tls13utils\");\n                                               disambiguator = 0 };\n                                              { Types.data =\n                                                (Types.TypeNs \"U8\");\n                                                disambiguator = 0 }\n                                              ]\n                                            };\n                                          generic_args = []});\n                                      (Types.Type\n                                         Types.Adt {\n                                           def_id =\n                                           { Types.index = (5, 7004);\n                                             krate = \"alloc\";\n                                             path =\n                                             [{ Types.data =\n                                                (Types.TypeNs \"alloc\");\n                                                disambiguator = 0 };\n                                               { Types.data =\n                                                 (Types.TypeNs \"Global\");\n                                                 disambiguator = 0 }\n                                               ]\n                                             };\n                                           generic_args = []})\n                                      ]},\n                                  false))\n                              }\n                             ];\n                           fn_span =\n                           { Types.filename =\n                             (Types.Real\n                                (Types.LocalPath \"src/tls13utils.rs\"));\n                             hi = { Types.col = \"21\"; line = \"138\" };\n                             lo = { Types.col = \"8\"; line = \"138\" } };\n                           from_hir_call = false;\n                           fun' =\n                           { Types.attributes = [];\n                             contents =\n                             Types.GlobalName {\n                               id =\n                               { Types.index = (2, 2897); krate = \"core\";\n                                 path =\n                                 [{ Types.data = (Types.TypeNs \"ops\");\n                                    disambiguator = 0 };\n                                   { Types.data = (Types.TypeNs \"deref\");\n                                     disambiguator = 0 };\n                                   { Types.data = (Types.TypeNs \"Deref\");\n                                     disambiguator = 0 };\n                                   { Types.data = (Types.ValueNs \"deref\");\n                                     disambiguator = 0 }\n                                   ]\n                                 }};\n                             hir_id = None;\n                             span =\n                             { Types.filename =\n                               (Types.Real\n                                  (Types.LocalPath \"src/tls13utils.rs\"));\n                               hi = { Types.col = \"21\"; line = \"138\" };\n                               lo = { Types.col = \"8\"; line = \"138\" } };\n                             ty =\n                             (Types.Arrow\n                                { Types.bound_vars =\n                                  [(Types.Region\n                                      (Types.BrNamed\n                                         ({ Types.index = (2, 53660);\n                                            krate = \"core\";\n                                            path =\n                                            [{ Types.data =\n                                               (Types.TypeNs \"ops\");\n                                               disambiguator = 0 };\n                                              { Types.data =\n                                                (Types.TypeNs \"deref\");\n                                                disambiguator = 0 };\n                                              { Types.data =\n                                                (Types.TypeNs \"Deref\");\n                                                disambiguator = 0 };\n                                              { Types.data =\n                                                (Types.ValueNs \"deref\");\n                                                disambiguator = 0 };\n                                              { Types.data =\n                                                (Types.LifetimeNs \"'_\");\n                                                disambiguator = 0 }\n                                              ]\n                                            },\n                                          \"'_\")))\n                                    ];\n                                  value =\n                                  { Types.abi = Types.Abi {todo = \"Rust\"};\n                                    c_variadic = false;\n                                    inputs =\n                                    [(Types.Ref\n                                        ({ Types.kind =\n                                           (Types.ReLateBound\n                                              (\"0\",\n                                               { Types.kind =\n                                                 (Types.BrNamed\n                                                    ({ Types.index =\n                                                       (2, 53660);\n                                                       krate = \"core\";\n                                                       path =\n                                                       [{ Types.data =\n                                                          (Types.TypeNs \"ops\");\n                                                          disambiguator = 0 };\n                                                         { Types.data =\n                                                           (Types.TypeNs\n                                                              \"deref\");\n                                                           disambiguator = 0\n                                                           };\n                                                         { Types.data =\n                                                           (Types.TypeNs\n                                                              \"Deref\");\n                                                           disambiguator = 0\n                                                           };\n                                                         { Types.data =\n                                                           (Types.ValueNs\n                                                              \"deref\");\n                                                           disambiguator = 0\n                                                           };\n                                                         { Types.data =\n                                                           (Types.LifetimeNs\n                                                              \"'_\");\n                                                           disambiguator = 0\n                                                           }\n                                                         ]\n                                                       },\n                                                     \"'_\"));\n                                                 var = \"0\" }))\n                                           },\n                                         Types.Adt {\n                                           def_id =\n                                           { Types.index = (5, 6696);\n                                             krate = \"alloc\";\n                                             path =\n                                             [{ Types.data =\n                                                (Types.TypeNs \"vec\");\n                                                disambiguator = 0 };\n                                               { Types.data =\n                                                 (Types.TypeNs \"Vec\");\n                                                 disambiguator = 0 }\n                                               ]\n                                             };\n                                           generic_args =\n                                           [(Types.Type\n                                               Types.Adt {\n                                                 def_id =\n                                                 { Types.index = (0, 1185);\n                                                   krate = \"bertie\";\n                                                   path =\n                                                   [{ Types.data =\n                                                      (Types.TypeNs\n                                                         \"tls13utils\");\n                                                      disambiguator = 0 };\n                                                     { Types.data =\n                                                       (Types.TypeNs \"U8\");\n                                                       disambiguator = 0 }\n                                                     ]\n                                                   };\n                                                 generic_args = []});\n                                             (Types.Type\n                                                Types.Adt {\n                                                  def_id =\n                                                  { Types.index = (5, 7004);\n                                                    krate = \"alloc\";\n                                                    path =\n                                                    [{ Types.data =\n                                                       (Types.TypeNs \"alloc\");\n                                                       disambiguator = 0 };\n                                                      { Types.data =\n                                                        (Types.TypeNs\n                                                           \"Global\");\n                                                        disambiguator = 0 }\n                                                      ]\n                                                    };\n                                                  generic_args = []})\n                                             ]},\n                                         false))\n                                      ];\n                                    output =\n                                    (Types.Ref\n                                       ({ Types.kind =\n                                          (Types.ReLateBound\n                                             (\"0\",\n                                              { Types.kind =\n                                                (Types.BrNamed\n                                                   ({ Types.index =\n                                                      (2, 53660);\n                                                      krate = \"core\";\n                                                      path =\n                                                      [{ Types.data =\n                                                         (Types.TypeNs \"ops\");\n                                                         disambiguator = 0 };\n                                                        { Types.data =\n                                                          (Types.TypeNs\n                                                             \"deref\");\n                                                          disambiguator = 0 };\n                                                        { Types.data =\n                                                          (Types.TypeNs\n                                                             \"Deref\");\n                                                          disambiguator = 0 };\n                                                        { Types.data =\n                                                          (Types.ValueNs\n                                                             \"deref\");\n                                                          disambiguator = 0 };\n                                                        { Types.data =\n                                                          (Types.LifetimeNs\n                                                             \"'_\");\n                                                          disambiguator = 0 }\n                                                        ]\n                                                      },\n                                                    \"'_\"));\n                                                var = \"0\" }))\n                                          },\n                                        (Types.Alias\n                                           (Types.Projection,\n                                            { Types.def_id =\n                                              { Types.index = (2, 2896);\n                                                krate = \"core\";\n                                                path =\n                                                [{ Types.data =\n                                                   (Types.TypeNs \"ops\");\n                                                   disambiguator = 0 };\n                                                  { Types.data =\n                                                    (Types.TypeNs \"deref\");\n                                                    disambiguator = 0 };\n                                                  { Types.data =\n                                                    (Types.TypeNs \"Deref\");\n                                                    disambiguator = 0 };\n                                                  { Types.data =\n                                                    (Types.TypeNs \"Target\");\n                                                    disambiguator = 0 }\n                                                  ]\n                                                };\n                                              substs =\n                                              [(Types.Type\n                                                  Types.Adt {\n                                                    def_id =\n                                                    { Types.index = (5, 6696);\n                                                      krate = \"alloc\";\n                                                      path =\n                                                      [{ Types.data =\n                                                         (Types.TypeNs \"vec\");\n                                                         disambiguator = 0 };\n                                                        { Types.data =\n                                                          (Types.TypeNs \"Vec\");\n                                                          disambiguator = 0 }\n                                                        ]\n                                                      };\n                                                    generic_args =\n                                                    [(Types.Type\n                                                        Types.Adt {\n                                                          def_id =\n                                                          { Types.index =\n                                                            (0, 1185);\n                                                            krate = \"bertie\";\n                                                            path =\n                                                            [{ Types.data =\n                                                               (Types.TypeNs\n                                                                  \"tls13utils\");\n                                                               disambiguator =\n                                                               0 };\n                                                              { Types.data =\n                                                                (Types.TypeNs\n                                                                   \"U8\");\n                                                                disambiguator =\n                                                                0 }\n                                                              ]\n                                                            };\n                                                          generic_args = []});\n                                                      (Types.Type\n                                                         Types.Adt {\n                                                           def_id =\n                                                           { Types.index =\n                                                             (5, 7004);\n                                                             krate = \"alloc\";\n                                                             path =\n                                                             [{ Types.data =\n                                                                (Types.TypeNs\n                                                                   \"alloc\");\n                                                                disambiguator =\n                                                                0 };\n                                                               { Types.data =\n                                                                 (Types.TypeNs\n                                                                    \"Global\");\n                                                                 disambiguator =\n                                                                 0 }\n                                                               ]\n                                                             };\n                                                           generic_args = []})\n                                                      ]})\n                                                ];\n                                              trait_def_id =\n                                              (Some ({ Types.index =\n                                                       (2, 2895);\n                                                       krate = \"core\";\n                                                       path =\n                                                       [{ Types.data =\n                                                          (Types.TypeNs \"ops\");\n                                                          disambiguator = 0 };\n                                                         { Types.data =\n                                                           (Types.TypeNs\n                                                              \"deref\");\n                                                           disambiguator = 0\n                                                           };\n                                                         { Types.data =\n                                                           (Types.TypeNs\n                                                              \"Deref\");\n                                                           disambiguator = 0\n                                                           }\n                                                         ]\n                                                       },\n                                                     { Types.args =\n                                                       [{ Types.args = [];\n                                                          impl =\n                                                          Types.Builtin {\n                                                            trait =\n                                                            { Types.def_id =\n                                                              { Types.index =\n                                                                (2, 2689);\n                                                                krate =\n                                                                \"core\";\n                                                                path =\n                                                                [{ Types.data =\n                                                                   (Types.TypeNs\n                                                                    \"marker\");\n                                                                   disambiguator =\n                                                                   0 };\n                                                                  { Types.data =\n                                                                    (\n                                                                    Types.TypeNs\n                                                                    \"Sized\");\n                                                                    disambiguator =\n                                                                    0 }\n                                                                  ]\n                                                                };\n                                                              generic_args =\n                                                              [(Types.Type\n                                                                  Types.Adt {\n                                                                    def_id =\n                                                                    { Types.index =\n                                                                    (0, 1185);\n                                                                    krate =\n                                                                    \"bertie\";\n                                                                    path =\n                                                                    [{ Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"tls13utils\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"U8\");\n                                                                    disambiguator =\n                                                                    0 }] };\n                                                                    generic_args =\n                                                                    []})\n                                                                ]\n                                                              }}\n                                                          };\n                                                         { Types.args = [];\n                                                           impl =\n                                                           Types.Builtin {\n                                                             trait =\n                                                             { Types.def_id =\n                                                               { Types.index =\n                                                                 (2, 2689);\n                                                                 krate =\n                                                                 \"core\";\n                                                                 path =\n                                                                 [{ Types.data =\n                                                                    (\n                                                                    Types.TypeNs\n                                                                    \"marker\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                   { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"Sized\");\n                                                                    disambiguator =\n                                                                    0 }\n                                                                   ]\n                                                                 };\n                                                               generic_args =\n                                                               [(Types.Type\n                                                                   Types.Adt {\n                                                                    def_id =\n                                                                    { Types.index =\n                                                                    (5, 7004);\n                                                                    krate =\n                                                                    \"alloc\";\n                                                                    path =\n                                                                    [{ Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"alloc\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"Global\");\n                                                                    disambiguator =\n                                                                    0 }] };\n                                                                    generic_args =\n                                                                    []})\n                                                                 ]\n                                                               }}\n                                                           };\n                                                         { Types.args = [];\n                                                           impl =\n                                                           Types.Concrete {\n                                                             generics = [];\n                                                             id =\n                                                             { Types.index =\n                                                               (5, 116);\n                                                               krate =\n                                                               \"alloc\";\n                                                               path =\n                                                               [{ Types.data =\n                                                                  (Types.TypeNs\n                                                                    \"alloc\");\n                                                                  disambiguator =\n                                                                  0 };\n                                                                 { Types.data =\n                                                                   Types.Impl;\n                                                                   disambiguator =\n                                                                   1 }\n                                                                 ]\n                                                               }}\n                                                           }\n                                                         ];\n                                                       impl =\n                                                       Types.Concrete {\n                                                         generics =\n                                                         [(Types.Type\n                                                             Types.Adt {\n                                                               def_id =\n                                                               { Types.index =\n                                                                 (0, 1185);\n                                                                 krate =\n                                                                 \"bertie\";\n                                                                 path =\n                                                                 [{ Types.data =\n                                                                    (\n                                                                    Types.TypeNs\n                                                                    \"tls13utils\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                   { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"U8\");\n                                                                    disambiguator =\n                                                                    0 }\n                                                                   ]\n                                                                 };\n                                                               generic_args =\n                                                               []});\n                                                           (Types.Type\n                                                              Types.Adt {\n                                                                def_id =\n                                                                { Types.index =\n                                                                  (5, 7004);\n                                                                  krate =\n                                                                  \"alloc\";\n                                                                  path =\n                                                                  [{ Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"alloc\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"Global\");\n                                                                    disambiguator =\n                                                                    0 }]\n                                                                  };\n                                                                generic_args =\n                                                                []})\n                                                           ];\n                                                         id =\n                                                         { Types.index =\n                                                           (5, 6848);\n                                                           krate = \"alloc\";\n                                                           path =\n                                                           [{ Types.data =\n                                                              (Types.TypeNs\n                                                                 \"vec\");\n                                                              disambiguator =\n                                                              0 };\n                                                             { Types.data =\n                                                               Types.Impl;\n                                                               disambiguator =\n                                                               9 }\n                                                             ]\n                                                           }}\n                                                       }))\n                                              })),\n                                        false));\n                                    unsafety = Types.Normal }\n                                  })\n                             };\n                           generic_args =\n                           [(Types.Type\n                               Types.Adt {\n                                 def_id =\n                                 { Types.index = (5, 6696); krate = \"alloc\";\n                                   path =\n                                   [{ Types.data = (Types.TypeNs \"vec\");\n                                      disambiguator = 0 };\n                                     { Types.data = (Types.TypeNs \"Vec\");\n                                       disambiguator = 0 }\n                                     ]\n                                   };\n                                 generic_args =\n                                 [(Types.Type\n                                     Types.Adt {\n                                       def_id =\n                                       { Types.index = (0, 1185);\n                                         krate = \"bertie\";\n                                         path =\n                                         [{ Types.data =\n                                            (Types.TypeNs \"tls13utils\");\n                                            disambiguator = 0 };\n                                           { Types.data = (Types.TypeNs \"U8\");\n                                             disambiguator = 0 }\n                                           ]\n                                         };\n                                       generic_args = []});\n                                   (Types.Type\n                                      Types.Adt {\n                                        def_id =\n                                        { Types.index = (5, 7004);\n                                          krate = \"alloc\";\n                                          path =\n                                          [{ Types.data =\n                                             (Types.TypeNs \"alloc\");\n                                             disambiguator = 0 };\n                                            { Types.data =\n                                              (Types.TypeNs \"Global\");\n                                              disambiguator = 0 }\n                                            ]\n                                          };\n                                        generic_args = []})\n                                   ]})\n                             ];\n                           impl =\n                           (Some { Types.args =\n                                   [{ Types.args = [];\n                                      impl =\n                                      Types.Builtin {\n                                        trait =\n                                        { Types.def_id =\n                                          { Types.index = (2, 2689);\n                                            krate = \"core\";\n                                            path =\n                                            [{ Types.data =\n                                               (Types.TypeNs \"marker\");\n                                               disambiguator = 0 };\n                                              { Types.data =\n                                                (Types.TypeNs \"Sized\");\n                                                disambiguator = 0 }\n                                              ]\n                                            };\n                                          generic_args =\n                                          [(Types.Type\n                                              Types.Adt {\n                                                def_id =\n                                                { Types.index = (0, 1185);\n                                                  krate = \"bertie\";\n                                                  path =\n                                                  [{ Types.data =\n                                                     (Types.TypeNs\n                                                        \"tls13utils\");\n                                                     disambiguator = 0 };\n                                                    { Types.data =\n                                                      (Types.TypeNs \"U8\");\n                                                      disambiguator = 0 }\n                                                    ]\n                                                  };\n                                                generic_args = []})\n                                            ]\n                                          }}\n                                      };\n                                     { Types.args = [];\n                                       impl =\n                                       Types.Builtin {\n                                         trait =\n                                         { Types.def_id =\n                                           { Types.index = (2, 2689);\n                                             krate = \"core\";\n                                             path =\n                                             [{ Types.data =\n                                                (Types.TypeNs \"marker\");\n                                                disambiguator = 0 };\n                                               { Types.data =\n                                                 (Types.TypeNs \"Sized\");\n                                                 disambiguator = 0 }\n                                               ]\n                                             };\n                                           generic_args =\n                                           [(Types.Type\n                                               Types.Adt {\n                                                 def_id =\n                                                 { Types.index = (5, 7004);\n                                                   krate = \"alloc\";\n                                                   path =\n                                                   [{ Types.data =\n                                                      (Types.TypeNs \"alloc\");\n                                                      disambiguator = 0 };\n                                                     { Types.data =\n                                                       (Types.TypeNs \"Global\");\n                                                       disambiguator = 0 }\n                                                     ]\n                                                   };\n                                                 generic_args = []})\n                                             ]\n                                           }}\n                                       };\n                                     { Types.args = [];\n                                       impl =\n                                       Types.Concrete {generics = [];\n                                         id =\n                                         { Types.index = (5, 116);\n                                           krate = \"alloc\";\n                                           path =\n                                           [{ Types.data =\n                                              (Types.TypeNs \"alloc\");\n                                              disambiguator = 0 };\n                                             { Types.data = Types.Impl;\n                                               disambiguator = 1 }\n                                             ]\n                                           }}\n                                       }\n                                     ];\n                                   impl =\n                                   Types.Concrete {\n                                     generics =\n                                     [(Types.Type\n                                         Types.Adt {\n                                           def_id =\n                                           { Types.index = (0, 1185);\n                                             krate = \"bertie\";\n                                             path =\n                                             [{ Types.data =\n                                                (Types.TypeNs \"tls13utils\");\n                                                disambiguator = 0 };\n                                               { Types.data =\n                                                 (Types.TypeNs \"U8\");\n                                                 disambiguator = 0 }\n                                               ]\n                                             };\n                                           generic_args = []});\n                                       (Types.Type\n                                          Types.Adt {\n                                            def_id =\n                                            { Types.index = (5, 7004);\n                                              krate = \"alloc\";\n                                              path =\n                                              [{ Types.data =\n                                                 (Types.TypeNs \"alloc\");\n                                                 disambiguator = 0 };\n                                                { Types.data =\n                                                  (Types.TypeNs \"Global\");\n                                                  disambiguator = 0 }\n                                                ]\n                                              };\n                                            generic_args = []})\n                                       ];\n                                     id =\n                                     { Types.index = (5, 6848);\n                                       krate = \"alloc\";\n                                       path =\n                                       [{ Types.data = (Types.TypeNs \"vec\");\n                                          disambiguator = 0 };\n                                         { Types.data = Types.Impl;\n                                           disambiguator = 9 }\n                                         ]\n                                       }}\n                                   });\n                           ty =\n                           (Types.Arrow\n                              { Types.bound_vars =\n                                [(Types.Region\n                                    (Types.BrNamed\n                                       ({ Types.index = (2, 53660);\n                                          krate = \"core\";\n                                          path =\n                                          [{ Types.data =\n                                             (Types.TypeNs \"ops\");\n                                             disambiguator = 0 };\n                                            { Types.data =\n                                              (Types.TypeNs \"deref\");\n                                              disambiguator = 0 };\n                                            { Types.data =\n                                              (Types.TypeNs \"Deref\");\n                                              disambiguator = 0 };\n                                            { Types.data =\n                                              (Types.ValueNs \"deref\");\n                                              disambiguator = 0 };\n                                            { Types.data =\n                                              (Types.LifetimeNs \"'_\");\n                                              disambiguator = 0 }\n                                            ]\n                                          },\n                                        \"'_\")))\n                                  ];\n                                value =\n                                { Types.abi = Types.Abi {todo = \"Rust\"};\n                                  c_variadic = false;\n                                  inputs =\n                                  [(Types.Ref\n                                      ({ Types.kind =\n                                         (Types.ReLateBound\n                                            (\"0\",\n                                             { Types.kind =\n                                               (Types.BrNamed\n                                                  ({ Types.index = (2, 53660);\n                                                     krate = \"core\";\n                                                     path =\n                                                     [{ Types.data =\n                                                        (Types.TypeNs \"ops\");\n                                                        disambiguator = 0 };\n                                                       { Types.data =\n                                                         (Types.TypeNs\n                                                            \"deref\");\n                                                         disambiguator = 0 };\n                                                       { Types.data =\n                                                         (Types.TypeNs\n                                                            \"Deref\");\n                                                         disambiguator = 0 };\n                                                       { Types.data =\n                                                         (Types.ValueNs\n                                                            \"deref\");\n                                                         disambiguator = 0 };\n                                                       { Types.data =\n                                                         (Types.LifetimeNs\n                                                            \"'_\");\n                                                         disambiguator = 0 }\n                                                       ]\n                                                     },\n                                                   \"'_\"));\n                                               var = \"0\" }))\n                                         },\n                                       Types.Adt {\n                                         def_id =\n                                         { Types.index = (5, 6696);\n                                           krate = \"alloc\";\n                                           path =\n                                           [{ Types.data =\n                                              (Types.TypeNs \"vec\");\n                                              disambiguator = 0 };\n                                             { Types.data =\n                                               (Types.TypeNs \"Vec\");\n                                               disambiguator = 0 }\n                                             ]\n                                           };\n                                         generic_args =\n                                         [(Types.Type\n                                             Types.Adt {\n                                               def_id =\n                                               { Types.index = (0, 1185);\n                                                 krate = \"bertie\";\n                                                 path =\n                                                 [{ Types.data =\n                                                    (Types.TypeNs\n                                                       \"tls13utils\");\n                                                    disambiguator = 0 };\n                                                   { Types.data =\n                                                     (Types.TypeNs \"U8\");\n                                                     disambiguator = 0 }\n                                                   ]\n                                                 };\n                                               generic_args = []});\n                                           (Types.Type\n                                              Types.Adt {\n                                                def_id =\n                                                { Types.index = (5, 7004);\n                                                  krate = \"alloc\";\n                                                  path =\n                                                  [{ Types.data =\n                                                     (Types.TypeNs \"alloc\");\n                                                     disambiguator = 0 };\n                                                    { Types.data =\n                                                      (Types.TypeNs \"Global\");\n                                                      disambiguator = 0 }\n                                                    ]\n                                                  };\n                                                generic_args = []})\n                                           ]},\n                                       false))\n                                    ];\n                                  output =\n                                  (Types.Ref\n                                     ({ Types.kind =\n                                        (Types.ReLateBound\n                                           (\"0\",\n                                            { Types.kind =\n                                              (Types.BrNamed\n                                                 ({ Types.index = (2, 53660);\n                                                    krate = \"core\";\n                                                    path =\n                                                    [{ Types.data =\n                                                       (Types.TypeNs \"ops\");\n                                                       disambiguator = 0 };\n                                                      { Types.data =\n                                                        (Types.TypeNs \"deref\");\n                                                        disambiguator = 0 };\n                                                      { Types.data =\n                                                        (Types.TypeNs \"Deref\");\n                                                        disambiguator = 0 };\n                                                      { Types.data =\n                                                        (Types.ValueNs\n                                                           \"deref\");\n                                                        disambiguator = 0 };\n                                                      { Types.data =\n                                                        (Types.LifetimeNs\n                                                           \"'_\");\n                                                        disambiguator = 0 }\n                                                      ]\n                                                    },\n                                                  \"'_\"));\n                                              var = \"0\" }))\n                                        },\n                                      (Types.Alias\n                                         (Types.Projection,\n                                          { Types.def_id =\n                                            { Types.index = (2, 2896);\n                                              krate = \"core\";\n                                              path =\n                                              [{ Types.data =\n                                                 (Types.TypeNs \"ops\");\n                                                 disambiguator = 0 };\n                                                { Types.data =\n                                                  (Types.TypeNs \"deref\");\n                                                  disambiguator = 0 };\n                                                { Types.data =\n                                                  (Types.TypeNs \"Deref\");\n                                                  disambiguator = 0 };\n                                                { Types.data =\n                                                  (Types.TypeNs \"Target\");\n                                                  disambiguator = 0 }\n                                                ]\n                                              };\n                                            substs =\n                                            [(Types.Type\n                                                Types.Adt {\n                                                  def_id =\n                                                  { Types.index = (5, 6696);\n                                                    krate = \"alloc\";\n                                                    path =\n                                                    [{ Types.data =\n                                                       (Types.TypeNs \"vec\");\n                                                       disambiguator = 0 };\n                                                      { Types.data =\n                                                        (Types.TypeNs \"Vec\");\n                                                        disambiguator = 0 }\n                                                      ]\n                                                    };\n                                                  generic_args =\n                                                  [(Types.Type\n                                                      Types.Adt {\n                                                        def_id =\n                                                        { Types.index =\n                                                          (0, 1185);\n                                                          krate = \"bertie\";\n                                                          path =\n                                                          [{ Types.data =\n                                                             (Types.TypeNs\n                                                                \"tls13utils\");\n                                                             disambiguator =\n                                                             0 };\n                                                            { Types.data =\n                                                              (Types.TypeNs\n                                                                 \"U8\");\n                                                              disambiguator =\n                                                              0 }\n                                                            ]\n                                                          };\n                                                        generic_args = []});\n                                                    (Types.Type\n                                                       Types.Adt {\n                                                         def_id =\n                                                         { Types.index =\n                                                           (5, 7004);\n                                                           krate = \"alloc\";\n                                                           path =\n                                                           [{ Types.data =\n                                                              (Types.TypeNs\n                                                                 \"alloc\");\n                                                              disambiguator =\n                                                              0 };\n                                                             { Types.data =\n                                                               (Types.TypeNs\n                                                                  \"Global\");\n                                                               disambiguator =\n                                                               0 }\n                                                             ]\n                                                           };\n                                                         generic_args = []})\n                                                    ]})\n                                              ];\n                                            trait_def_id =\n                                            (Some ({ Types.index = (2, 2895);\n                                                     krate = \"core\";\n                                                     path =\n                                                     [{ Types.data =\n                                                        (Types.TypeNs \"ops\");\n                                                        disambiguator = 0 };\n                                                       { Types.data =\n                                                         (Types.TypeNs\n                                                            \"deref\");\n                                                         disambiguator = 0 };\n                                                       { Types.data =\n                                                         (Types.TypeNs\n                                                            \"Deref\");\n                                                         disambiguator = 0 }\n                                                       ]\n                                                     },\n                                                   { Types.args =\n                                                     [{ Types.args = [];\n                                                        impl =\n                                                        Types.Builtin {\n                                                          trait =\n                                                          { Types.def_id =\n                                                            { Types.index =\n                                                              (2, 2689);\n                                                              krate = \"core\";\n                                                              path =\n                                                              [{ Types.data =\n                                                                 (Types.TypeNs\n                                                                    \"marker\");\n                                                                 disambiguator =\n                                                                 0 };\n                                                                { Types.data =\n                                                                  (Types.TypeNs\n                                                                    \"Sized\");\n                                                                  disambiguator =\n                                                                  0 }\n                                                                ]\n                                                              };\n                                                            generic_args =\n                                                            [(Types.Type\n                                                                Types.Adt {\n                                                                  def_id =\n                                                                  { Types.index =\n                                                                    (\n                                                                    0, 1185);\n                                                                    krate =\n                                                                    \"bertie\";\n                                                                    path =\n                                                                    [{ Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"tls13utils\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"U8\");\n                                                                    disambiguator =\n                                                                    0 }] };\n                                                                  generic_args =\n                                                                  []})\n                                                              ]\n                                                            }}\n                                                        };\n                                                       { Types.args = [];\n                                                         impl =\n                                                         Types.Builtin {\n                                                           trait =\n                                                           { Types.def_id =\n                                                             { Types.index =\n                                                               (2, 2689);\n                                                               krate = \"core\";\n                                                               path =\n                                                               [{ Types.data =\n                                                                  (Types.TypeNs\n                                                                    \"marker\");\n                                                                  disambiguator =\n                                                                  0 };\n                                                                 { Types.data =\n                                                                   (Types.TypeNs\n                                                                    \"Sized\");\n                                                                   disambiguator =\n                                                                   0 }\n                                                                 ]\n                                                               };\n                                                             generic_args =\n                                                             [(Types.Type\n                                                                 Types.Adt {\n                                                                   def_id =\n                                                                   { Types.index =\n                                                                    (5, 7004);\n                                                                    krate =\n                                                                    \"alloc\";\n                                                                    path =\n                                                                    [{ Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"alloc\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"Global\");\n                                                                    disambiguator =\n                                                                    0 }] };\n                                                                   generic_args =\n                                                                   []})\n                                                               ]\n                                                             }}\n                                                         };\n                                                       { Types.args = [];\n                                                         impl =\n                                                         Types.Concrete {\n                                                           generics = [];\n                                                           id =\n                                                           { Types.index =\n                                                             (5, 116);\n                                                             krate = \"alloc\";\n                                                             path =\n                                                             [{ Types.data =\n                                                                (Types.TypeNs\n                                                                   \"alloc\");\n                                                                disambiguator =\n                                                                0 };\n                                                               { Types.data =\n                                                                 Types.Impl;\n                                                                 disambiguator =\n                                                                 1 }\n                                                               ]\n                                                             }}\n                                                         }\n                                                       ];\n                                                     impl =\n                                                     Types.Concrete {\n                                                       generics =\n                                                       [(Types.Type\n                                                           Types.Adt {\n                                                             def_id =\n                                                             { Types.index =\n                                                               (0, 1185);\n                                                               krate =\n                                                               \"bertie\";\n                                                               path =\n                                                               [{ Types.data =\n                                                                  (Types.TypeNs\n                                                                    \"tls13utils\");\n                                                                  disambiguator =\n                                                                  0 };\n                                                                 { Types.data =\n                                                                   (Types.TypeNs\n                                                                    \"U8\");\n                                                                   disambiguator =\n                                                                   0 }\n                                                                 ]\n                                                               };\n                                                             generic_args =\n                                                             []});\n                                                         (Types.Type\n                                                            Types.Adt {\n                                                              def_id =\n                                                              { Types.index =\n                                                                (5, 7004);\n                                                                krate =\n                                                                \"alloc\";\n                                                                path =\n                                                                [{ Types.data =\n                                                                   (Types.TypeNs\n                                                                    \"alloc\");\n                                                                   disambiguator =\n                                                                   0 };\n                                                                  { Types.data =\n                                                                    (\n                                                                    Types.TypeNs\n                                                                    \"Global\");\n                                                                    disambiguator =\n                                                                    0 }\n                                                                  ]\n                                                                };\n                                                              generic_args =\n                                                              []})\n                                                         ];\n                                                       id =\n                                                       { Types.index =\n                                                         (5, 6848);\n                                                         krate = \"alloc\";\n                                                         path =\n                                                         [{ Types.data =\n                                                            (Types.TypeNs\n                                                               \"vec\");\n                                                            disambiguator = 0\n                                                            };\n                                                           { Types.data =\n                                                             Types.Impl;\n                                                             disambiguator =\n                                                             9 }\n                                                           ]\n                                                         }}\n                                                     }))\n                                            })),\n                                      false));\n                                  unsafety = Types.Normal }\n                                })};\n                         hir_id = None;\n                         span =\n                         { Types.filename =\n                           (Types.Real (Types.LocalPath \"src/tls13utils.rs\"));\n                           hi = { Types.col = \"21\"; line = \"138\" };\n                           lo = { Types.col = \"8\"; line = \"138\" } };\n                         ty =\n                         (Types.Ref\n                            ({ Types.kind = Types.ReErased },\n                             (Types.Slice\n                                Types.Adt {\n                                  def_id =\n                                  { Types.index = (0, 1185);\n                                    krate = \"bertie\";\n                                    path =\n                                    [{ Types.data =\n                                       (Types.TypeNs \"tls13utils\");\n                                       disambiguator = 0 };\n                                      { Types.data = (Types.TypeNs \"U8\");\n                                        disambiguator = 0 }\n                                      ]\n                                    };\n                                  generic_args = []}),\n                             false))\n                         }};\n                     hir_id = None;\n                     span =\n                     { Types.filename =\n                       (Types.Real (Types.LocalPath \"src/tls13utils.rs\"));\n                       hi = { Types.col = \"21\"; line = \"138\" };\n                       lo = { Types.col = \"8\"; line = \"138\" } };\n                     ty =\n                     (Types.Slice\n                        Types.Adt {\n                          def_id =\n                          { Types.index = (0, 1185); krate = \"bertie\";\n                            path =\n                            [{ Types.data = (Types.TypeNs \"tls13utils\");\n                               disambiguator = 0 };\n                              { Types.data = (Types.TypeNs \"U8\");\n                                disambiguator = 0 }\n                              ]\n                            };\n                          generic_args = []})\n                     };\n                   borrow_kind = Types.Shared};\n                 hir_id = (Some (\"650\", \"9\"));\n                 span =\n                 { Types.filename =\n                   (Types.Real (Types.LocalPath \"src/tls13utils.rs\"));\n                   hi = { Types.col = \"21\"; line = \"138\" };\n                   lo = { Types.col = \"8\"; line = \"138\" } };\n                 ty =\n                 (Types.Ref\n                    ({ Types.kind = Types.ReErased },\n                     (Types.Slice\n                        Types.Adt {\n                          def_id =\n                          { Types.index = (0, 1185); krate = \"bertie\";\n                            path =\n                            [{ Types.data = (Types.TypeNs \"tls13utils\");\n                               disambiguator = 0 };\n                              { Types.data = (Types.TypeNs \"U8\");\n                                disambiguator = 0 }\n                              ]\n                            };\n                          generic_args = []}),\n                     false))\n                 }\n                ];\n              fn_span =\n              { Types.filename =\n                (Types.Real (Types.LocalPath \"src/tls13utils.rs\"));\n                hi = { Types.col = \"21\"; line = \"138\" };\n                lo = { Types.col = \"15\"; line = \"138\" } };\n              from_hir_call = true;\n              fun' =\n              { Types.attributes = [];\n                contents =\n                Types.GlobalName {\n                  id =\n                  { Types.index = (2, 11048); krate = \"core\";\n                    path =\n                    [{ Types.data = (Types.TypeNs \"slice\"); disambiguator = 0\n                       };\n                      { Types.data = Types.Impl; disambiguator = 0 };\n                      { Types.data = (Types.ValueNs \"iter\");\n                        disambiguator = 0 }\n                      ]\n                    }};\n                hir_id = None;\n                span =\n                { Types.filename =\n                  (Types.Real (Types.LocalPath \"src/tls13utils.rs\"));\n                  hi = { Types.col = \"19\"; line = \"138\" };\n                  lo = { Types.col = \"15\"; line = \"138\" } };\n                ty =\n                (Types.Arrow\n                   { Types.bound_vars =\n                     [(Types.Region\n                         (Types.BrNamed\n                            ({ Types.index = (2, 56478); krate = \"core\";\n                               path =\n                               [{ Types.data = (Types.TypeNs \"slice\");\n                                  disambiguator = 0 };\n                                 { Types.data = Types.Impl; disambiguator = 0\n                                   };\n                                 { Types.data = (Types.ValueNs \"iter\");\n                                   disambiguator = 0 };\n                                 { Types.data = (Types.LifetimeNs \"'_\");\n                                   disambiguator = 0 }\n                                 ]\n                               },\n                             \"'_\")))\n                       ];\n                     value =\n                     { Types.abi = Types.Abi {todo = \"Rust\"};\n                       c_variadic = false;\n                       inputs =\n                       [(Types.Ref\n                           ({ Types.kind =\n                              (Types.ReLateBound\n                                 (\"0\",\n                                  { Types.kind =\n                                    (Types.BrNamed\n                                       ({ Types.index = (2, 56478);\n                                          krate = \"core\";\n                                          path =\n                                          [{ Types.data =\n                                             (Types.TypeNs \"slice\");\n                                             disambiguator = 0 };\n                                            { Types.data = Types.Impl;\n                                              disambiguator = 0 };\n                                            { Types.data =\n                                              (Types.ValueNs \"iter\");\n                                              disambiguator = 0 };\n                                            { Types.data =\n                                              (Types.LifetimeNs \"'_\");\n                                              disambiguator = 0 }\n                                            ]\n                                          },\n                                        \"'_\"));\n                                    var = \"0\" }))\n                              },\n                            (Types.Slice\n                               Types.Adt {\n                                 def_id =\n                                 { Types.index = (0, 1185); krate = \"bertie\";\n                                   path =\n                                   [{ Types.data =\n                                      (Types.TypeNs \"tls13utils\");\n                                      disambiguator = 0 };\n                                     { Types.data = (Types.TypeNs \"U8\");\n                                       disambiguator = 0 }\n                                     ]\n                                   };\n                                 generic_args = []}),\n                            false))\n                         ];\n                       output =\n                       Types.Adt {\n                         def_id =\n                         { Types.index = (2, 9967); krate = \"core\";\n                           path =\n                           [{ Types.data = (Types.TypeNs \"slice\");\n                              disambiguator = 0 };\n                             { Types.data = (Types.TypeNs \"iter\");\n                               disambiguator = 0 };\n                             { Types.data = (Types.TypeNs \"Iter\");\n                               disambiguator = 0 }\n                             ]\n                           };\n                         generic_args =\n                         [(Types.Lifetime\n                             { Types.kind =\n                               (Types.ReLateBound\n                                  (\"0\",\n                                   { Types.kind =\n                                     (Types.BrNamed\n                                        ({ Types.index = (2, 56478);\n                                           krate = \"core\";\n                                           path =\n                                           [{ Types.data =\n                                              (Types.TypeNs \"slice\");\n                                              disambiguator = 0 };\n                                             { Types.data = Types.Impl;\n                                               disambiguator = 0 };\n                                             { Types.data =\n                                               (Types.ValueNs \"iter\");\n                                               disambiguator = 0 };\n                                             { Types.data =\n                                               (Types.LifetimeNs \"'_\");\n                                               disambiguator = 0 }\n                                             ]\n                                           },\n                                         \"'_\"));\n                                     var = \"0\" }))\n                               });\n                           (Types.Type\n                              Types.Adt {\n                                def_id =\n                                { Types.index = (0, 1185); krate = \"bertie\";\n                                  path =\n                                  [{ Types.data = (Types.TypeNs \"tls13utils\");\n                                     disambiguator = 0 };\n                                    { Types.data = (Types.TypeNs \"U8\");\n                                      disambiguator = 0 }\n                                    ]\n                                  };\n                                generic_args = []})\n                           ]};\n                       unsafety = Types.Normal }\n                     })\n                };\n              generic_args =\n              [(Types.Type\n                  Types.Adt {\n                    def_id =\n                    { Types.index = (0, 1185); krate = \"bertie\";\n                      path =\n                      [{ Types.data = (Types.TypeNs \"tls13utils\");\n                         disambiguator = 0 };\n                        { Types.data = (Types.TypeNs \"U8\"); disambiguator = 0\n                          }\n                        ]\n                      };\n                    generic_args = []})\n                ];\n              impl = None;\n              ty =\n              (Types.Arrow\n                 { Types.bound_vars =\n                   [(Types.Region\n                       (Types.BrNamed\n                          ({ Types.index = (2, 56478); krate = \"core\";\n                             path =\n                             [{ Types.data = (Types.TypeNs \"slice\");\n                                disambiguator = 0 };\n                               { Types.data = Types.Impl; disambiguator = 0 };\n                               { Types.data = (Types.ValueNs \"iter\");\n                                 disambiguator = 0 };\n                               { Types.data = (Types.LifetimeNs \"'_\");\n                                 disambiguator = 0 }\n                               ]\n                             },\n                           \"'_\")))\n                     ];\n                   value =\n                   { Types.abi = Types.Abi {todo = \"Rust\"};\n                     c_variadic = false;\n                     inputs =\n                     [(Types.Ref\n                         ({ Types.kind =\n                            (Types.ReLateBound\n                               (\"0\",\n                                { Types.kind =\n                                  (Types.BrNamed\n                                     ({ Types.index = (2, 56478);\n                                        krate = \"core\";\n                                        path =\n                                        [{ Types.data =\n                                           (Types.TypeNs \"slice\");\n                                           disambiguator = 0 };\n                                          { Types.data = Types.Impl;\n                                            disambiguator = 0 };\n                                          { Types.data =\n                                            (Types.ValueNs \"iter\");\n                                            disambiguator = 0 };\n                                          { Types.data =\n                                            (Types.LifetimeNs \"'_\");\n                                            disambiguator = 0 }\n                                          ]\n                                        },\n                                      \"'_\"));\n                                  var = \"0\" }))\n                            },\n                          (Types.Slice\n                             Types.Adt {\n                               def_id =\n                               { Types.index = (0, 1185); krate = \"bertie\";\n                                 path =\n                                 [{ Types.data = (Types.TypeNs \"tls13utils\");\n                                    disambiguator = 0 };\n                                   { Types.data = (Types.TypeNs \"U8\");\n                                     disambiguator = 0 }\n                                   ]\n                                 };\n                               generic_args = []}),\n                          false))\n                       ];\n                     output =\n                     Types.Adt {\n                       def_id =\n                       { Types.index = (2, 9967); krate = \"core\";\n                         path =\n                         [{ Types.data = (Types.TypeNs \"slice\");\n                            disambiguator = 0 };\n                           { Types.data = (Types.TypeNs \"iter\");\n                             disambiguator = 0 };\n                           { Types.data = (Types.TypeNs \"Iter\");\n                             disambiguator = 0 }\n                           ]\n                         };\n                       generic_args =\n                       [(Types.Lifetime\n                           { Types.kind =\n                             (Types.ReLateBound\n                                (\"0\",\n                                 { Types.kind =\n                                   (Types.BrNamed\n                                      ({ Types.index = (2, 56478);\n                                         krate = \"core\";\n                                         path =\n                                         [{ Types.data =\n                                            (Types.TypeNs \"slice\");\n                                            disambiguator = 0 };\n                                           { Types.data = Types.Impl;\n                                             disambiguator = 0 };\n                                           { Types.data =\n                                             (Types.ValueNs \"iter\");\n                                             disambiguator = 0 };\n                                           { Types.data =\n                                             (Types.LifetimeNs \"'_\");\n                                             disambiguator = 0 }\n                                           ]\n                                         },\n                                       \"'_\"));\n                                   var = \"0\" }))\n                             });\n                         (Types.Type\n                            Types.Adt {\n                              def_id =\n                              { Types.index = (0, 1185); krate = \"bertie\";\n                                path =\n                                [{ Types.data = (Types.TypeNs \"tls13utils\");\n                                   disambiguator = 0 };\n                                  { Types.data = (Types.TypeNs \"U8\");\n                                    disambiguator = 0 }\n                                  ]\n                                };\n                              generic_args = []})\n                         ]};\n                     unsafety = Types.Normal }\n                   })};\n            hir_id = (Some (\"650\", \"7\"));\n            span =\n            { Types.filename =\n              (Types.Real (Types.LocalPath \"src/tls13utils.rs\"));\n              hi = { Types.col = \"21\"; line = \"138\" };\n              lo = { Types.col = \"8\"; line = \"138\" } };\n            ty =\n            Types.Adt {\n              def_id =\n              { Types.index = (2, 9967); krate = \"core\";\n                path =\n                [{ Types.data = (Types.TypeNs \"slice\"); disambiguator = 0 };\n                  { Types.data = (Types.TypeNs \"iter\"); disambiguator = 0 };\n                  { Types.data = (Types.TypeNs \"Iter\"); disambiguator = 0 }]\n                };\n              generic_args =\n              [(Types.Lifetime { Types.kind = Types.ReErased });\n                (Types.Type\n                   Types.Adt {\n                     def_id =\n                     { Types.index = (0, 1185); krate = \"bertie\";\n                       path =\n                       [{ Types.data = (Types.TypeNs \"tls13utils\");\n                          disambiguator = 0 };\n                         { Types.data = (Types.TypeNs \"U8\");\n                           disambiguator = 0 }\n                         ]\n                       };\n                     generic_args = []})\n                ]}\n            };\n           { Types.attributes = [];\n             contents =\n             Types.Closure {\n               body =\n               { Types.attributes = [];\n                 contents =\n                 Types.Call {\n                   args =\n                   [{ Types.attributes = [];\n                      contents =\n                      Types.Borrow {\n                        arg =\n                        { Types.attributes = [];\n                          contents =\n                          Types.Deref {\n                            arg =\n                            { Types.attributes = [];\n                              contents =\n                              Types.VarRef {\n                                id =\n                                { Types.id =\n                                  { Types.local_id = \"14\";\n                                    owner =\n                                    { Types.index = (0, 650);\n                                      krate = \"bertie\";\n                                      path =\n                                      [{ Types.data =\n                                         (Types.TypeNs \"tls13utils\");\n                                         disambiguator = 0 };\n                                        { Types.data = Types.Impl;\n                                          disambiguator = 8 };\n                                        { Types.data =\n                                          (Types.ValueNs \"declassify\");\n                                          disambiguator = 0 }\n                                        ]\n                                      }\n                                    };\n                                  name = \"x\" }};\n                              hir_id = None;\n                              span =\n                              { Types.filename =\n                                (Types.Real\n                                   (Types.LocalPath \"src/tls13utils.rs\"));\n                                hi = { Types.col = \"31\"; line = \"138\" };\n                                lo = { Types.col = \"30\"; line = \"138\" } };\n                              ty =\n                              (Types.Ref\n                                 ({ Types.kind = Types.ReErased },\n                                  Types.Adt {\n                                    def_id =\n                                    { Types.index = (0, 1185);\n                                      krate = \"bertie\";\n                                      path =\n                                      [{ Types.data =\n                                         (Types.TypeNs \"tls13utils\");\n                                         disambiguator = 0 };\n                                        { Types.data = (Types.TypeNs \"U8\");\n                                          disambiguator = 0 }\n                                        ]\n                                      };\n                                    generic_args = []},\n                                  false))\n                              }};\n                          hir_id = None;\n                          span =\n                          { Types.filename =\n                            (Types.Real (Types.LocalPath \"src/tls13utils.rs\"));\n                            hi = { Types.col = \"44\"; line = \"138\" };\n                            lo = { Types.col = \"30\"; line = \"138\" } };\n                          ty =\n                          Types.Adt {\n                            def_id =\n                            { Types.index = (0, 1185); krate = \"bertie\";\n                              path =\n                              [{ Types.data = (Types.TypeNs \"tls13utils\");\n                                 disambiguator = 0 };\n                                { Types.data = (Types.TypeNs \"U8\");\n                                  disambiguator = 0 }\n                                ]\n                              };\n                            generic_args = []}\n                          };\n                        borrow_kind = Types.Shared};\n                      hir_id = (Some (\"650\", \"17\"));\n                      span =\n                      { Types.filename =\n                        (Types.Real (Types.LocalPath \"src/tls13utils.rs\"));\n                        hi = { Types.col = \"44\"; line = \"138\" };\n                        lo = { Types.col = \"30\"; line = \"138\" } };\n                      ty =\n                      (Types.Ref\n                         ({ Types.kind = Types.ReErased },\n                          Types.Adt {\n                            def_id =\n                            { Types.index = (0, 1185); krate = \"bertie\";\n                              path =\n                              [{ Types.data = (Types.TypeNs \"tls13utils\");\n                                 disambiguator = 0 };\n                                { Types.data = (Types.TypeNs \"U8\");\n                                  disambiguator = 0 }\n                                ]\n                              };\n                            generic_args = []},\n                          false))\n                      }\n                     ];\n                   fn_span =\n                   { Types.filename =\n                     (Types.Real (Types.LocalPath \"src/tls13utils.rs\"));\n                     hi = { Types.col = \"44\"; line = \"138\" };\n                     lo = { Types.col = \"32\"; line = \"138\" } };\n                   from_hir_call = true;\n                   fun' =\n                   { Types.attributes = [];\n                     contents =\n                     Types.GlobalName {\n                       id =\n                       { Types.index = (0, 636); krate = \"bertie\";\n                         path =\n                         [{ Types.data = (Types.TypeNs \"tls13utils\");\n                            disambiguator = 0 };\n                           { Types.data = Types.Impl; disambiguator = 2 };\n                           { Types.data = (Types.ValueNs \"declassify\");\n                             disambiguator = 0 }\n                           ]\n                         }};\n                     hir_id = None;\n                     span =\n                     { Types.filename =\n                       (Types.Real (Types.LocalPath \"src/tls13utils.rs\"));\n                       hi = { Types.col = \"42\"; line = \"138\" };\n                       lo = { Types.col = \"32\"; line = \"138\" } };\n                     ty =\n                     (Types.Arrow\n                        { Types.bound_vars =\n                          [(Types.Region\n                              (Types.BrNamed\n                                 ({ Types.index = (0, 1512);\n                                    krate = \"bertie\";\n                                    path =\n                                    [{ Types.data =\n                                       (Types.TypeNs \"tls13utils\");\n                                       disambiguator = 0 };\n                                      { Types.data = Types.Impl;\n                                        disambiguator = 2 };\n                                      { Types.data =\n                                        (Types.ValueNs \"declassify\");\n                                        disambiguator = 0 };\n                                      { Types.data = (Types.LifetimeNs \"'_\");\n                                        disambiguator = 0 }\n                                      ]\n                                    },\n                                  \"'_\")))\n                            ];\n                          value =\n                          { Types.abi = Types.Abi {todo = \"Rust\"};\n                            c_variadic = false;\n                            inputs =\n                            [(Types.Ref\n                                ({ Types.kind =\n                                   (Types.ReLateBound\n                                      (\"0\",\n                                       { Types.kind =\n                                         (Types.BrNamed\n                                            ({ Types.index = (0, 1512);\n                                               krate = \"bertie\";\n                                               path =\n                                               [{ Types.data =\n                                                  (Types.TypeNs \"tls13utils\");\n                                                  disambiguator = 0 };\n                                                 { Types.data = Types.Impl;\n                                                   disambiguator = 2 };\n                                                 { Types.data =\n                                                   (Types.ValueNs\n                                                      \"declassify\");\n                                                   disambiguator = 0 };\n                                                 { Types.data =\n                                                   (Types.LifetimeNs \"'_\");\n                                                   disambiguator = 0 }\n                                                 ]\n                                               },\n                                             \"'_\"));\n                                         var = \"0\" }))\n                                   },\n                                 Types.Adt {\n                                   def_id =\n                                   { Types.index = (0, 1185);\n                                     krate = \"bertie\";\n                                     path =\n                                     [{ Types.data =\n                                        (Types.TypeNs \"tls13utils\");\n                                        disambiguator = 0 };\n                                       { Types.data = (Types.TypeNs \"U8\");\n                                         disambiguator = 0 }\n                                       ]\n                                     };\n                                   generic_args = []},\n                                 false))\n                              ];\n                            output = (Types.Uint Types.U8);\n                            unsafety = Types.Normal }\n                          })\n                     };\n                   generic_args = []; impl = None;\n                   ty =\n                   (Types.Arrow\n                      { Types.bound_vars =\n                        [(Types.Region\n                            (Types.BrNamed\n                               ({ Types.index = (0, 1512); krate = \"bertie\";\n                                  path =\n                                  [{ Types.data = (Types.TypeNs \"tls13utils\");\n                                     disambiguator = 0 };\n                                    { Types.data = Types.Impl;\n                                      disambiguator = 2 };\n                                    { Types.data =\n                                      (Types.ValueNs \"declassify\");\n                                      disambiguator = 0 };\n                                    { Types.data = (Types.LifetimeNs \"'_\");\n                                      disambiguator = 0 }\n                                    ]\n                                  },\n                                \"'_\")))\n                          ];\n                        value =\n                        { Types.abi = Types.Abi {todo = \"Rust\"};\n                          c_variadic = false;\n                          inputs =\n                          [(Types.Ref\n                              ({ Types.kind =\n                                 (Types.ReLateBound\n                                    (\"0\",\n                                     { Types.kind =\n                                       (Types.BrNamed\n                                          ({ Types.index = (0, 1512);\n                                             krate = \"bertie\";\n                                             path =\n                                             [{ Types.data =\n                                                (Types.TypeNs \"tls13utils\");\n                                                disambiguator = 0 };\n                                               { Types.data = Types.Impl;\n                                                 disambiguator = 2 };\n                                               { Types.data =\n                                                 (Types.ValueNs \"declassify\");\n                                                 disambiguator = 0 };\n                                               { Types.data =\n                                                 (Types.LifetimeNs \"'_\");\n                                                 disambiguator = 0 }\n                                               ]\n                                             },\n                                           \"'_\"));\n                                       var = \"0\" }))\n                                 },\n                               Types.Adt {\n                                 def_id =\n                                 { Types.index = (0, 1185); krate = \"bertie\";\n                                   path =\n                                   [{ Types.data =\n                                      (Types.TypeNs \"tls13utils\");\n                                      disambiguator = 0 };\n                                     { Types.data = (Types.TypeNs \"U8\");\n                                       disambiguator = 0 }\n                                     ]\n                                   };\n                                 generic_args = []},\n                               false))\n                            ];\n                          output = (Types.Uint Types.U8);\n                          unsafety = Types.Normal }\n                        })};\n                 hir_id = (Some (\"650\", \"15\"));\n                 span =\n                 { Types.filename =\n                   (Types.Real (Types.LocalPath \"src/tls13utils.rs\"));\n                   hi = { Types.col = \"44\"; line = \"138\" };\n                   lo = { Types.col = \"30\"; line = \"138\" } };\n                 ty = (Types.Uint Types.U8) };\n               movability = None;\n               params =\n               [{ Types.attributes = []; hir_id = None; pat = None;\n                  self_kind = None;\n                  ty =\n                  (Types.Ref\n                     ({ Types.kind = Types.ReErased },\n                      (Types.Arrow\n                         { Types.bound_vars = [];\n                           value =\n                           { Types.abi = Types.Abi {todo = \"Rust\"};\n                             c_variadic = false;\n                             inputs =\n                             [(Types.Ref\n                                 ({ Types.kind = Types.ReErased },\n                                  Types.Adt {\n                                    def_id =\n                                    { Types.index = (0, 1185);\n                                      krate = \"bertie\";\n                                      path =\n                                      [{ Types.data =\n                                         (Types.TypeNs \"tls13utils\");\n                                         disambiguator = 0 };\n                                        { Types.data = (Types.TypeNs \"U8\");\n                                          disambiguator = 0 }\n                                        ]\n                                      };\n                                    generic_args = []},\n                                  false))\n                               ];\n                             output = (Types.Uint Types.U8);\n                             unsafety = Types.Normal }\n                           }),\n                      true));\n                  ty_span = None };\n                 { Types.attributes = [];\n                   hir_id =\n                   (Some { Types.local_id = \"13\";\n                           owner =\n                           { Types.index = (0, 650); krate = \"bertie\";\n                             path =\n                             [{ Types.data = (Types.TypeNs \"tls13utils\");\n                                disambiguator = 0 };\n                               { Types.data = Types.Impl; disambiguator = 8 };\n                               { Types.data = (Types.ValueNs \"declassify\");\n                                 disambiguator = 0 }\n                               ]\n                             }\n                           });\n                   pat =\n                   (Some { Types.attributes = [];\n                           contents =\n                           Types.Binding {is_primary = true;\n                             mode = Types.ByValue; mutability = false;\n                             subpattern = None;\n                             ty =\n                             (Types.Ref\n                                ({ Types.kind = Types.ReErased },\n                                 Types.Adt {\n                                   def_id =\n                                   { Types.index = (0, 1185);\n                                     krate = \"bertie\";\n                                     path =\n                                     [{ Types.data =\n                                        (Types.TypeNs \"tls13utils\");\n                                        disambiguator = 0 };\n                                       { Types.data = (Types.TypeNs \"U8\");\n                                         disambiguator = 0 }\n                                       ]\n                                     };\n                                   generic_args = []},\n                                 false));\n                             var =\n                             { Types.id =\n                               { Types.local_id = \"14\";\n                                 owner =\n                                 { Types.index = (0, 650); krate = \"bertie\";\n                                   path =\n                                   [{ Types.data =\n                                      (Types.TypeNs \"tls13utils\");\n                                      disambiguator = 0 };\n                                     { Types.data = Types.Impl;\n                                       disambiguator = 8 };\n                                     { Types.data =\n                                       (Types.ValueNs \"declassify\");\n                                       disambiguator = 0 }\n                                     ]\n                                   }\n                                 };\n                               name = \"x\" }};\n                           hir_id = None;\n                           span =\n                           { Types.filename =\n                             (Types.Real\n                                (Types.LocalPath \"src/tls13utils.rs\"));\n                             hi = { Types.col = \"28\"; line = \"138\" };\n                             lo = { Types.col = \"27\"; line = \"138\" } };\n                           ty =\n                           (Types.Ref\n                              ({ Types.kind = Types.ReErased },\n                               Types.Adt {\n                                 def_id =\n                                 { Types.index = (0, 1185); krate = \"bertie\";\n                                   path =\n                                   [{ Types.data =\n                                      (Types.TypeNs \"tls13utils\");\n                                      disambiguator = 0 };\n                                     { Types.data = (Types.TypeNs \"U8\");\n                                       disambiguator = 0 }\n                                     ]\n                                   };\n                                 generic_args = []},\n                               false))\n                           });\n                   self_kind = None;\n                   ty =\n                   (Types.Ref\n                      ({ Types.kind = Types.ReErased },\n                       Types.Adt {\n                         def_id =\n                         { Types.index = (0, 1185); krate = \"bertie\";\n                           path =\n                           [{ Types.data = (Types.TypeNs \"tls13utils\");\n                              disambiguator = 0 };\n                             { Types.data = (Types.TypeNs \"U8\");\n                               disambiguator = 0 }\n                             ]\n                           };\n                         generic_args = []},\n                       false));\n                   ty_span = None }\n                 ];\n               upvars = []};\n             hir_id = (Some (\"650\", \"12\"));\n             span =\n             { Types.filename =\n               (Types.Real (Types.LocalPath \"src/tls13utils.rs\"));\n               hi = { Types.col = \"44\"; line = \"138\" };\n               lo = { Types.col = \"26\"; line = \"138\" } };\n             ty =\n             (Types.Arrow\n                { Types.bound_vars = [];\n                  value =\n                  { Types.abi = Types.Abi {todo = \"Rust\"};\n                    c_variadic = false;\n                    inputs =\n                    [(Types.Ref\n                        ({ Types.kind = Types.ReErased },\n                         Types.Adt {\n                           def_id =\n                           { Types.index = (0, 1185); krate = \"bertie\";\n                             path =\n                             [{ Types.data = (Types.TypeNs \"tls13utils\");\n                                disambiguator = 0 };\n                               { Types.data = (Types.TypeNs \"U8\");\n                                 disambiguator = 0 }\n                               ]\n                             };\n                           generic_args = []},\n                         false))\n                      ];\n                    output = (Types.Uint Types.U8); unsafety = Types.Normal }\n                  })\n             }\n           ];\n         fn_span =\n         { Types.filename =\n           (Types.Real (Types.LocalPath \"src/tls13utils.rs\"));\n           hi = { Types.col = \"45\"; line = \"138\" };\n           lo = { Types.col = \"22\"; line = \"138\" } };\n         from_hir_call = true;\n         fun' =\n         { Types.attributes = [];\n           contents =\n           Types.GlobalName {\n             id =\n             { Types.index = (2, 7344); krate = \"core\";\n               path =\n               [{ Types.data = (Types.TypeNs \"iter\"); disambiguator = 0 };\n                 { Types.data = (Types.TypeNs \"traits\"); disambiguator = 0 };\n                 { Types.data = (Types.TypeNs \"iterator\"); disambiguator = 0\n                   };\n                 { Types.data = (Types.TypeNs \"Iterator\"); disambiguator = 0\n                   };\n                 { Types.data = (Types.ValueNs \"map\"); disambiguator = 0 }]\n               }};\n           hir_id = None;\n           span =\n           { Types.filename =\n             (Types.Real (Types.LocalPath \"src/tls13utils.rs\"));\n             hi = { Types.col = \"25\"; line = \"138\" };\n             lo = { Types.col = \"22\"; line = \"138\" } };\n           ty =\n           (Types.Arrow\n              { Types.bound_vars = [];\n                value =\n                { Types.abi = Types.Abi {todo = \"Rust\"}; c_variadic = false;\n                  inputs =\n                  [Types.Adt {\n                     def_id =\n                     { Types.index = (2, 9967); krate = \"core\";\n                       path =\n                       [{ Types.data = (Types.TypeNs \"slice\");\n                          disambiguator = 0 };\n                         { Types.data = (Types.TypeNs \"iter\");\n                           disambiguator = 0 };\n                         { Types.data = (Types.TypeNs \"Iter\");\n                           disambiguator = 0 }\n                         ]\n                       };\n                     generic_args =\n                     [(Types.Lifetime { Types.kind = Types.ReErased });\n                       (Types.Type\n                          Types.Adt {\n                            def_id =\n                            { Types.index = (0, 1185); krate = \"bertie\";\n                              path =\n                              [{ Types.data = (Types.TypeNs \"tls13utils\");\n                                 disambiguator = 0 };\n                                { Types.data = (Types.TypeNs \"U8\");\n                                  disambiguator = 0 }\n                                ]\n                              };\n                            generic_args = []})\n                       ]};\n                    (Types.Arrow\n                       { Types.bound_vars = [];\n                         value =\n                         { Types.abi = Types.Abi {todo = \"Rust\"};\n                           c_variadic = false;\n                           inputs =\n                           [(Types.Ref\n                               ({ Types.kind = Types.ReErased },\n                                Types.Adt {\n                                  def_id =\n                                  { Types.index = (0, 1185);\n                                    krate = \"bertie\";\n                                    path =\n                                    [{ Types.data =\n                                       (Types.TypeNs \"tls13utils\");\n                                       disambiguator = 0 };\n                                      { Types.data = (Types.TypeNs \"U8\");\n                                        disambiguator = 0 }\n                                      ]\n                                    };\n                                  generic_args = []},\n                                false))\n                             ];\n                           output = (Types.Uint Types.U8);\n                           unsafety = Types.Normal }\n                         })\n                    ];\n                  output =\n                  Types.Adt {\n                    def_id =\n                    { Types.index = (2, 33976); krate = \"core\";\n                      path =\n                      [{ Types.data = (Types.TypeNs \"iter\");\n                         disambiguator = 0 };\n                        { Types.data = (Types.TypeNs \"adapters\");\n                          disambiguator = 0 };\n                        { Types.data = (Types.TypeNs \"map\");\n                          disambiguator = 0 };\n                        { Types.data = (Types.TypeNs \"Map\");\n                          disambiguator = 0 }\n                        ]\n                      };\n                    generic_args =\n                    [(Types.Type\n                        Types.Adt {\n                          def_id =\n                          { Types.index = (2, 9967); krate = \"core\";\n                            path =\n                            [{ Types.data = (Types.TypeNs \"slice\");\n                               disambiguator = 0 };\n                              { Types.data = (Types.TypeNs \"iter\");\n                                disambiguator = 0 };\n                              { Types.data = (Types.TypeNs \"Iter\");\n                                disambiguator = 0 }\n                              ]\n                            };\n                          generic_args =\n                          [(Types.Lifetime { Types.kind = Types.ReErased });\n                            (Types.Type\n                               Types.Adt {\n                                 def_id =\n                                 { Types.index = (0, 1185); krate = \"bertie\";\n                                   path =\n                                   [{ Types.data =\n                                      (Types.TypeNs \"tls13utils\");\n                                      disambiguator = 0 };\n                                     { Types.data = (Types.TypeNs \"U8\");\n                                       disambiguator = 0 }\n                                     ]\n                                   };\n                                 generic_args = []})\n                            ]});\n                      (Types.Type\n                         (Types.Arrow\n                            { Types.bound_vars = [];\n                              value =\n                              { Types.abi = Types.Abi {todo = \"Rust\"};\n                                c_variadic = false;\n                                inputs =\n                                [(Types.Ref\n                                    ({ Types.kind = Types.ReErased },\n                                     Types.Adt {\n                                       def_id =\n                                       { Types.index = (0, 1185);\n                                         krate = \"bertie\";\n                                         path =\n                                         [{ Types.data =\n                                            (Types.TypeNs \"tls13utils\");\n                                            disambiguator = 0 };\n                                           { Types.data = (Types.TypeNs \"U8\");\n                                             disambiguator = 0 }\n                                           ]\n                                         };\n                                       generic_args = []},\n                                     false))\n                                  ];\n                                output = (Types.Uint Types.U8);\n                                unsafety = Types.Normal }\n                              }))\n                      ]};\n                  unsafety = Types.Normal }\n                })\n           };\n         generic_args =\n         [(Types.Type\n             Types.Adt {\n               def_id =\n               { Types.index = (2, 9967); krate = \"core\";\n                 path =\n                 [{ Types.data = (Types.TypeNs \"slice\"); disambiguator = 0 };\n                   { Types.data = (Types.TypeNs \"iter\"); disambiguator = 0 };\n                   { Types.data = (Types.TypeNs \"Iter\"); disambiguator = 0 }]\n                 };\n               generic_args =\n               [(Types.Lifetime { Types.kind = Types.ReErased });\n                 (Types.Type\n                    Types.Adt {\n                      def_id =\n                      { Types.index = (0, 1185); krate = \"bertie\";\n                        path =\n                        [{ Types.data = (Types.TypeNs \"tls13utils\");\n                           disambiguator = 0 };\n                          { Types.data = (Types.TypeNs \"U8\");\n                            disambiguator = 0 }\n                          ]\n                        };\n                      generic_args = []})\n                 ]});\n           (Types.Type (Types.Uint Types.U8));\n           (Types.Type\n              (Types.Arrow\n                 { Types.bound_vars = [];\n                   value =\n                   { Types.abi = Types.Abi {todo = \"Rust\"};\n                     c_variadic = false;\n                     inputs =\n                     [(Types.Ref\n                         ({ Types.kind = Types.ReErased },\n                          Types.Adt {\n                            def_id =\n                            { Types.index = (0, 1185); krate = \"bertie\";\n                              path =\n                              [{ Types.data = (Types.TypeNs \"tls13utils\");\n                                 disambiguator = 0 };\n                                { Types.data = (Types.TypeNs \"U8\");\n                                  disambiguator = 0 }\n                                ]\n                              };\n                            generic_args = []},\n                          false))\n                       ];\n                     output = (Types.Uint Types.U8); unsafety = Types.Normal\n                     }\n                   }))\n           ];\n         impl =\n         (Some { Types.args =\n                 [{ Types.args = [];\n                    impl =\n                    Types.Builtin {\n                      trait =\n                      { Types.def_id =\n                        { Types.index = (2, 2689); krate = \"core\";\n                          path =\n                          [{ Types.data = (Types.TypeNs \"marker\");\n                             disambiguator = 0 };\n                            { Types.data = (Types.TypeNs \"Sized\");\n                              disambiguator = 0 }\n                            ]\n                          };\n                        generic_args =\n                        [(Types.Type\n                            Types.Adt {\n                              def_id =\n                              { Types.index = (0, 1185); krate = \"bertie\";\n                                path =\n                                [{ Types.data = (Types.TypeNs \"tls13utils\");\n                                   disambiguator = 0 };\n                                  { Types.data = (Types.TypeNs \"U8\");\n                                    disambiguator = 0 }\n                                  ]\n                                };\n                              generic_args = []})\n                          ]\n                        }}\n                    }\n                   ];\n                 impl =\n                 Types.Concrete {\n                   generics =\n                   [(Types.Lifetime\n                       { Types.kind = (Types.ReVar { Types.index = 0 }) });\n                     (Types.Type\n                        Types.Adt {\n                          def_id =\n                          { Types.index = (0, 1185); krate = \"bertie\";\n                            path =\n                            [{ Types.data = (Types.TypeNs \"tls13utils\");\n                               disambiguator = 0 };\n                              { Types.data = (Types.TypeNs \"U8\");\n                                disambiguator = 0 }\n                              ]\n                            };\n                          generic_args = []})\n                     ];\n                   id =\n                   { Types.index = (2, 36672); krate = \"core\";\n                     path =\n                     [{ Types.data = (Types.TypeNs \"slice\");\n                        disambiguator = 0 };\n                       { Types.data = (Types.TypeNs \"iter\");\n                         disambiguator = 0 };\n                       { Types.data = Types.Impl; disambiguator = 181 }]\n                     }}\n                 });\n         ty =\n         (Types.Arrow\n            { Types.bound_vars = [];\n              value =\n              { Types.abi = Types.Abi {todo = \"Rust\"}; c_variadic = false;\n                inputs =\n                [Types.Adt {\n                   def_id =\n                   { Types.index = (2, 9967); krate = \"core\";\n                     path =\n                     [{ Types.data = (Types.TypeNs \"slice\");\n                        disambiguator = 0 };\n                       { Types.data = (Types.TypeNs \"iter\");\n                         disambiguator = 0 };\n                       { Types.data = (Types.TypeNs \"Iter\");\n                         disambiguator = 0 }\n                       ]\n                     };\n                   generic_args =\n                   [(Types.Lifetime { Types.kind = Types.ReErased });\n                     (Types.Type\n                        Types.Adt {\n                          def_id =\n                          { Types.index = (0, 1185); krate = \"bertie\";\n                            path =\n                            [{ Types.data = (Types.TypeNs \"tls13utils\");\n                               disambiguator = 0 };\n                              { Types.data = (Types.TypeNs \"U8\");\n                                disambiguator = 0 }\n                              ]\n                            };\n                          generic_args = []})\n                     ]};\n                  (Types.Arrow\n                     { Types.bound_vars = [];\n                       value =\n                       { Types.abi = Types.Abi {todo = \"Rust\"};\n                         c_variadic = false;\n                         inputs =\n                         [(Types.Ref\n                             ({ Types.kind = Types.ReErased },\n                              Types.Adt {\n                                def_id =\n                                { Types.index = (0, 1185); krate = \"bertie\";\n                                  path =\n                                  [{ Types.data = (Types.TypeNs \"tls13utils\");\n                                     disambiguator = 0 };\n                                    { Types.data = (Types.TypeNs \"U8\");\n                                      disambiguator = 0 }\n                                    ]\n                                  };\n                                generic_args = []},\n                              false))\n                           ];\n                         output = (Types.Uint Types.U8);\n                         unsafety = Types.Normal }\n                       })\n                  ];\n                output =\n                Types.Adt {\n                  def_id =\n                  { Types.index = (2, 33976); krate = \"core\";\n                    path =\n                    [{ Types.data = (Types.TypeNs \"iter\"); disambiguator = 0\n                       };\n                      { Types.data = (Types.TypeNs \"adapters\");\n                        disambiguator = 0 };\n                      { Types.data = (Types.TypeNs \"map\"); disambiguator = 0\n                        };\n                      { Types.data = (Types.TypeNs \"Map\"); disambiguator = 0\n                        }\n                      ]\n                    };\n                  generic_args =\n                  [(Types.Type\n                      Types.Adt {\n                        def_id =\n                        { Types.index = (2, 9967); krate = \"core\";\n                          path =\n                          [{ Types.data = (Types.TypeNs \"slice\");\n                             disambiguator = 0 };\n                            { Types.data = (Types.TypeNs \"iter\");\n                              disambiguator = 0 };\n                            { Types.data = (Types.TypeNs \"Iter\");\n                              disambiguator = 0 }\n                            ]\n                          };\n                        generic_args =\n                        [(Types.Lifetime { Types.kind = Types.ReErased });\n                          (Types.Type\n                             Types.Adt {\n                               def_id =\n                               { Types.index = (0, 1185); krate = \"bertie\";\n                                 path =\n                                 [{ Types.data = (Types.TypeNs \"tls13utils\");\n                                    disambiguator = 0 };\n                                   { Types.data = (Types.TypeNs \"U8\");\n                                     disambiguator = 0 }\n                                   ]\n                                 };\n                               generic_args = []})\n                          ]});\n                    (Types.Type\n                       (Types.Arrow\n                          { Types.bound_vars = [];\n                            value =\n                            { Types.abi = Types.Abi {todo = \"Rust\"};\n                              c_variadic = false;\n                              inputs =\n                              [(Types.Ref\n                                  ({ Types.kind = Types.ReErased },\n                                   Types.Adt {\n                                     def_id =\n                                     { Types.index = (0, 1185);\n                                       krate = \"bertie\";\n                                       path =\n                                       [{ Types.data =\n                                          (Types.TypeNs \"tls13utils\");\n                                          disambiguator = 0 };\n                                         { Types.data = (Types.TypeNs \"U8\");\n                                           disambiguator = 0 }\n                                         ]\n                                       };\n                                     generic_args = []},\n                                   false))\n                                ];\n                              output = (Types.Uint Types.U8);\n                              unsafety = Types.Normal }\n                            }))\n                    ]};\n                unsafety = Types.Normal }\n              })};\n       hir_id = (Some (\"650\", \"5\"));\n       span =\n       { Types.filename = (Types.Real (Types.LocalPath \"src/tls13utils.rs\"));\n         hi = { Types.col = \"45\"; line = \"138\" };\n         lo = { Types.col = \"8\"; line = \"138\" } };\n       ty =\n       Types.Adt {\n         def_id =\n         { Types.index = (2, 33976); krate = \"core\";\n           path =\n           [{ Types.data = (Types.TypeNs \"iter\"); disambiguator = 0 };\n             { Types.data = (Types.TypeNs \"adapters\"); disambiguator = 0 };\n             { Types.data = (Types.TypeNs \"map\"); disambiguator = 0 };\n             { Types.data = (Types.TypeNs \"Map\"); disambiguator = 0 }]\n           };\n         generic_args =\n         [(Types.Type\n             Types.Adt {\n               def_id =\n               { Types.index = (2, 9967); krate = \"core\";\n                 path =\n                 [{ Types.data = (Types.TypeNs \"slice\"); disambiguator = 0 };\n                   { Types.data = (Types.TypeNs \"iter\"); disambiguator = 0 };\n                   { Types.data = (Types.TypeNs \"Iter\"); disambiguator = 0 }]\n                 };\n               generic_args =\n               [(Types.Lifetime { Types.kind = Types.ReErased });\n                 (Types.Type\n                    Types.Adt {\n                      def_id =\n                      { Types.index = (0, 1185); krate = \"bertie\";\n                        path =\n                        [{ Types.data = (Types.TypeNs \"tls13utils\");\n                           disambiguator = 0 };\n                          { Types.data = (Types.TypeNs \"U8\");\n                            disambiguator = 0 }\n                          ]\n                        };\n                      generic_args = []})\n                 ]});\n           (Types.Type\n              (Types.Arrow\n                 { Types.bound_vars = [];\n                   value =\n                   { Types.abi = Types.Abi {todo = \"Rust\"};\n                     c_variadic = false;\n                     inputs =\n                     [(Types.Ref\n                         ({ Types.kind = Types.ReErased },\n                          Types.Adt {\n                            def_id =\n                            { Types.index = (0, 1185); krate = \"bertie\";\n                              path =\n                              [{ Types.data = (Types.TypeNs \"tls13utils\");\n                                 disambiguator = 0 };\n                                { Types.data = (Types.TypeNs \"U8\");\n                                  disambiguator = 0 }\n                                ]\n                              };\n                            generic_args = []},\n                          false))\n                       ];\n                     output = (Types.Uint Types.U8); unsafety = Types.Normal\n                     }\n                   }))\n           ]}\n       }\n      ];\n    fn_span =\n    { Types.filename = (Types.Real (Types.LocalPath \"src/tls13utils.rs\"));\n      hi = { Types.col = \"55\"; line = \"138\" };\n      lo = { Types.col = \"46\"; line = \"138\" } };\n    from_hir_call = true;\n    fun' =\n    { Types.attributes = [];\n      contents =\n      Types.GlobalName {\n        id =\n        { Types.index = (2, 7380); krate = \"core\";\n          path =\n          [{ Types.data = (Types.TypeNs \"iter\"); disambiguator = 0 };\n            { Types.data = (Types.TypeNs \"traits\"); disambiguator = 0 };\n            { Types.data = (Types.TypeNs \"iterator\"); disambiguator = 0 };\n            { Types.data = (Types.TypeNs \"Iterator\"); disambiguator = 0 };\n            { Types.data = (Types.ValueNs \"collect\"); disambiguator = 0 }]\n          }};\n      hir_id = None;\n      span =\n      { Types.filename = (Types.Real (Types.LocalPath \"src/tls13utils.rs\"));\n        hi = { Types.col = \"53\"; line = \"138\" };\n        lo = { Types.col = \"46\"; line = \"138\" } };\n      ty =\n      (Types.Arrow\n         { Types.bound_vars = [];\n           value =\n           { Types.abi = Types.Abi {todo = \"Rust\"}; c_variadic = false;\n             inputs =\n             [Types.Adt {\n                def_id =\n                { Types.index = (2, 33976); krate = \"core\";\n                  path =\n                  [{ Types.data = (Types.TypeNs \"iter\"); disambiguator = 0 };\n                    { Types.data = (Types.TypeNs \"adapters\");\n                      disambiguator = 0 };\n                    { Types.data = (Types.TypeNs \"map\"); disambiguator = 0 };\n                    { Types.data = (Types.TypeNs \"Map\"); disambiguator = 0 }]\n                  };\n                generic_args =\n                [(Types.Type\n                    Types.Adt {\n                      def_id =\n                      { Types.index = (2, 9967); krate = \"core\";\n                        path =\n                        [{ Types.data = (Types.TypeNs \"slice\");\n                           disambiguator = 0 };\n                          { Types.data = (Types.TypeNs \"iter\");\n                            disambiguator = 0 };\n                          { Types.data = (Types.TypeNs \"Iter\");\n                            disambiguator = 0 }\n                          ]\n                        };\n                      generic_args =\n                      [(Types.Lifetime { Types.kind = Types.ReErased });\n                        (Types.Type\n                           Types.Adt {\n                             def_id =\n                             { Types.index = (0, 1185); krate = \"bertie\";\n                               path =\n                               [{ Types.data = (Types.TypeNs \"tls13utils\");\n                                  disambiguator = 0 };\n                                 { Types.data = (Types.TypeNs \"U8\");\n                                   disambiguator = 0 }\n                                 ]\n                               };\n                             generic_args = []})\n                        ]});\n                  (Types.Type\n                     (Types.Arrow\n                        { Types.bound_vars = [];\n                          value =\n                          { Types.abi = Types.Abi {todo = \"Rust\"};\n                            c_variadic = false;\n                            inputs =\n                            [(Types.Ref\n                                ({ Types.kind = Types.ReErased },\n                                 Types.Adt {\n                                   def_id =\n                                   { Types.index = (0, 1185);\n                                     krate = \"bertie\";\n                                     path =\n                                     [{ Types.data =\n                                        (Types.TypeNs \"tls13utils\");\n                                        disambiguator = 0 };\n                                       { Types.data = (Types.TypeNs \"U8\");\n                                         disambiguator = 0 }\n                                       ]\n                                     };\n                                   generic_args = []},\n                                 false))\n                              ];\n                            output = (Types.Uint Types.U8);\n                            unsafety = Types.Normal }\n                          }))\n                  ]}\n               ];\n             output =\n             Types.Adt {\n               def_id =\n               { Types.index = (5, 6696); krate = \"alloc\";\n                 path =\n                 [{ Types.data = (Types.TypeNs \"vec\"); disambiguator = 0 };\n                   { Types.data = (Types.TypeNs \"Vec\"); disambiguator = 0 }]\n                 };\n               generic_args =\n               [(Types.Type (Types.Uint Types.U8));\n                 (Types.Type\n                    Types.Adt {\n                      def_id =\n                      { Types.index = (5, 7004); krate = \"alloc\";\n                        path =\n                        [{ Types.data = (Types.TypeNs \"alloc\");\n                           disambiguator = 0 };\n                          { Types.data = (Types.TypeNs \"Global\");\n                            disambiguator = 0 }\n                          ]\n                        };\n                      generic_args = []})\n                 ]};\n             unsafety = Types.Normal }\n           })\n      };\n    generic_args =\n    [(Types.Type\n        Types.Adt {\n          def_id =\n          { Types.index = (2, 33976); krate = \"core\";\n            path =\n            [{ Types.data = (Types.TypeNs \"iter\"); disambiguator = 0 };\n              { Types.data = (Types.TypeNs \"adapters\"); disambiguator = 0 };\n              { Types.data = (Types.TypeNs \"map\"); disambiguator = 0 };\n              { Types.data = (Types.TypeNs \"Map\"); disambiguator = 0 }]\n            };\n          generic_args =\n          [(Types.Type\n              Types.Adt {\n                def_id =\n                { Types.index = (2, 9967); krate = \"core\";\n                  path =\n                  [{ Types.data = (Types.TypeNs \"slice\"); disambiguator = 0 };\n                    { Types.data = (Types.TypeNs \"iter\"); disambiguator = 0 };\n                    { Types.data = (Types.TypeNs \"Iter\"); disambiguator = 0 }\n                    ]\n                  };\n                generic_args =\n                [(Types.Lifetime { Types.kind = Types.ReErased });\n                  (Types.Type\n                     Types.Adt {\n                       def_id =\n                       { Types.index = (0, 1185); krate = \"bertie\";\n                         path =\n                         [{ Types.data = (Types.TypeNs \"tls13utils\");\n                            disambiguator = 0 };\n                           { Types.data = (Types.TypeNs \"U8\");\n                             disambiguator = 0 }\n                           ]\n                         };\n                       generic_args = []})\n                  ]});\n            (Types.Type\n               (Types.Arrow\n                  { Types.bound_vars = [];\n                    value =\n                    { Types.abi = Types.Abi {todo = \"Rust\"};\n                      c_variadic = false;\n                      inputs =\n                      [(Types.Ref\n                          ({ Types.kind = Types.ReErased },\n                           Types.Adt {\n                             def_id =\n                             { Types.index = (0, 1185); krate = \"bertie\";\n                               path =\n                               [{ Types.data = (Types.TypeNs \"tls13utils\");\n                                  disambiguator = 0 };\n                                 { Types.data = (Types.TypeNs \"U8\");\n                                   disambiguator = 0 }\n                                 ]\n                               };\n                             generic_args = []},\n                           false))\n                        ];\n                      output = (Types.Uint Types.U8); unsafety = Types.Normal\n                      }\n                    }))\n            ]});\n      (Types.Type\n         Types.Adt {\n           def_id =\n           { Types.index = (5, 6696); krate = \"alloc\";\n             path =\n             [{ Types.data = (Types.TypeNs \"vec\"); disambiguator = 0 };\n               { Types.data = (Types.TypeNs \"Vec\"); disambiguator = 0 }]\n             };\n           generic_args =\n           [(Types.Type (Types.Uint Types.U8));\n             (Types.Type\n                Types.Adt {\n                  def_id =\n                  { Types.index = (5, 7004); krate = \"alloc\";\n                    path =\n                    [{ Types.data = (Types.TypeNs \"alloc\"); disambiguator = 0\n                       };\n                      { Types.data = (Types.TypeNs \"Global\");\n                        disambiguator = 0 }\n                      ]\n                    };\n                  generic_args = []})\n             ]})\n      ];\n    impl =\n    (Some { Types.args =\n            [{ Types.args = [];\n               impl =\n               Types.Builtin {\n                 trait =\n                 { Types.def_id =\n                   { Types.index = (2, 2689); krate = \"core\";\n                     path =\n                     [{ Types.data = (Types.TypeNs \"marker\");\n                        disambiguator = 0 };\n                       { Types.data = (Types.TypeNs \"Sized\");\n                         disambiguator = 0 }\n                       ]\n                     };\n                   generic_args =\n                   [(Types.Type\n                       Types.Adt {\n                         def_id =\n                         { Types.index = (0, 1185); krate = \"bertie\";\n                           path =\n                           [{ Types.data = (Types.TypeNs \"tls13utils\");\n                              disambiguator = 0 };\n                             { Types.data = (Types.TypeNs \"U8\");\n                               disambiguator = 0 }\n                             ]\n                           };\n                         generic_args = []})\n                     ]\n                   }}\n               };\n              { Types.args = [];\n                impl =\n                Types.Builtin {\n                  trait =\n                  { Types.def_id =\n                    { Types.index = (2, 2689); krate = \"core\";\n                      path =\n                      [{ Types.data = (Types.TypeNs \"marker\");\n                         disambiguator = 0 };\n                        { Types.data = (Types.TypeNs \"Sized\");\n                          disambiguator = 0 }\n                        ]\n                      };\n                    generic_args =\n                    [(Types.Type\n                        Types.Adt {\n                          def_id =\n                          { Types.index = (2, 9967); krate = \"core\";\n                            path =\n                            [{ Types.data = (Types.TypeNs \"slice\");\n                               disambiguator = 0 };\n                              { Types.data = (Types.TypeNs \"iter\");\n                                disambiguator = 0 };\n                              { Types.data = (Types.TypeNs \"Iter\");\n                                disambiguator = 0 }\n                              ]\n                            };\n                          generic_args =\n                          [(Types.Lifetime { Types.kind = Types.ReErased });\n                            (Types.Type\n                               Types.Adt {\n                                 def_id =\n                                 { Types.index = (0, 1185); krate = \"bertie\";\n                                   path =\n                                   [{ Types.data =\n                                      (Types.TypeNs \"tls13utils\");\n                                      disambiguator = 0 };\n                                     { Types.data = (Types.TypeNs \"U8\");\n                                       disambiguator = 0 }\n                                     ]\n                                   };\n                                 generic_args = []})\n                            ]})\n                      ]\n                    }}\n                };\n              { Types.args = [];\n                impl =\n                Types.Builtin {\n                  trait =\n                  { Types.def_id =\n                    { Types.index = (2, 2689); krate = \"core\";\n                      path =\n                      [{ Types.data = (Types.TypeNs \"marker\");\n                         disambiguator = 0 };\n                        { Types.data = (Types.TypeNs \"Sized\");\n                          disambiguator = 0 }\n                        ]\n                      };\n                    generic_args =\n                    [(Types.Type\n                        (Types.Arrow\n                           { Types.bound_vars = [];\n                             value =\n                             { Types.abi = Types.Abi {todo = \"Rust\"};\n                               c_variadic = false;\n                               inputs =\n                               [(Types.Ref\n                                   ({ Types.kind = Types.ReErased },\n                                    Types.Adt {\n                                      def_id =\n                                      { Types.index = (0, 1185);\n                                        krate = \"bertie\";\n                                        path =\n                                        [{ Types.data =\n                                           (Types.TypeNs \"tls13utils\");\n                                           disambiguator = 0 };\n                                          { Types.data = (Types.TypeNs \"U8\");\n                                            disambiguator = 0 }\n                                          ]\n                                        };\n                                      generic_args = []},\n                                    false))\n                                 ];\n                               output = (Types.Uint Types.U8);\n                               unsafety = Types.Normal }\n                             }))\n                      ]\n                    }}\n                };\n              { Types.args =\n                [{ Types.args = [];\n                   impl =\n                   Types.Builtin {\n                     trait =\n                     { Types.def_id =\n                       { Types.index = (2, 2689); krate = \"core\";\n                         path =\n                         [{ Types.data = (Types.TypeNs \"marker\");\n                            disambiguator = 0 };\n                           { Types.data = (Types.TypeNs \"Sized\");\n                             disambiguator = 0 }\n                           ]\n                         };\n                       generic_args =\n                       [(Types.Type\n                           Types.Adt {\n                             def_id =\n                             { Types.index = (0, 1185); krate = \"bertie\";\n                               path =\n                               [{ Types.data = (Types.TypeNs \"tls13utils\");\n                                  disambiguator = 0 };\n                                 { Types.data = (Types.TypeNs \"U8\");\n                                   disambiguator = 0 }\n                                 ]\n                               };\n                             generic_args = []})\n                         ]\n                       }}\n                   }\n                  ];\n                impl =\n                Types.Concrete {\n                  generics =\n                  [(Types.Lifetime\n                      { Types.kind = (Types.ReVar { Types.index = 0 }) });\n                    (Types.Type\n                       Types.Adt {\n                         def_id =\n                         { Types.index = (0, 1185); krate = \"bertie\";\n                           path =\n                           [{ Types.data = (Types.TypeNs \"tls13utils\");\n                              disambiguator = 0 };\n                             { Types.data = (Types.TypeNs \"U8\");\n                               disambiguator = 0 }\n                             ]\n                           };\n                         generic_args = []})\n                    ];\n                  id =\n                  { Types.index = (2, 36672); krate = \"core\";\n                    path =\n                    [{ Types.data = (Types.TypeNs \"slice\"); disambiguator = 0\n                       };\n                      { Types.data = (Types.TypeNs \"iter\"); disambiguator = 0\n                        };\n                      { Types.data = Types.Impl; disambiguator = 181 }]\n                    }}\n                };\n              { Types.args = [];\n                impl =\n                Types.Builtin {\n                  trait =\n                  { Types.def_id =\n                    { Types.index = (2, 2689); krate = \"core\";\n                      path =\n                      [{ Types.data = (Types.TypeNs \"marker\");\n                         disambiguator = 0 };\n                        { Types.data = (Types.TypeNs \"Sized\");\n                          disambiguator = 0 }\n                        ]\n                      };\n                    generic_args =\n                    [(Types.Type\n                        Types.Adt {\n                          def_id =\n                          { Types.index = (0, 1185); krate = \"bertie\";\n                            path =\n                            [{ Types.data = (Types.TypeNs \"tls13utils\");\n                               disambiguator = 0 };\n                              { Types.data = (Types.TypeNs \"U8\");\n                                disambiguator = 0 }\n                              ]\n                            };\n                          generic_args = []})\n                      ]\n                    }}\n                };\n              { Types.args = [];\n                impl =\n                (Types.Todo\n                   \"ImplExprAtom::Todo(see https://github.com/hacspec/hax/issues/381) ImplSourceClosureData(closure_def_id=DefId(0:651 ~ bertie[6a41]::tls13utils::{impl#8}::declassify::{closure#0}), substs=[i16, extern \\\"rust-call\\\" fn((&tls13utils::U8,)) -> u8, ()], nested=[Obligation(predicate=Binder(ClosureKind(DefId(0:651 ~ bertie[6a41]::tls13utils::{impl#8}::declassify::{closure#0}), [i16, extern \\\"rust-call\\\" fn((&tls13utils::U8,)) -> u8, ()], FnMut), []), depth=1)])\\n\\nBinder(\\n    <[closure@src/tls13utils.rs:138:27: 138:30] as std::ops::FnMut<(&tls13utils::U8,)>>,\\n    [],\\n)\")\n                };\n              { Types.args = [];\n                impl =\n                (Types.Todo\n                   \"impl_expr failed on Binder(\\n    <_ as std::marker::Sized>,\\n    [],\\n)\")\n                }\n              ];\n            impl =\n            Types.Concrete {\n              generics =\n              [(Types.Type (Types.Infer Types.TyVar));\n                (Types.Type\n                   Types.Adt {\n                     def_id =\n                     { Types.index = (2, 9967); krate = \"core\";\n                       path =\n                       [{ Types.data = (Types.TypeNs \"slice\");\n                          disambiguator = 0 };\n                         { Types.data = (Types.TypeNs \"iter\");\n                           disambiguator = 0 };\n                         { Types.data = (Types.TypeNs \"Iter\");\n                           disambiguator = 0 }\n                         ]\n                       };\n                     generic_args =\n                     [(Types.Lifetime { Types.kind = Types.ReErased });\n                       (Types.Type\n                          Types.Adt {\n                            def_id =\n                            { Types.index = (0, 1185); krate = \"bertie\";\n                              path =\n                              [{ Types.data = (Types.TypeNs \"tls13utils\");\n                                 disambiguator = 0 };\n                                { Types.data = (Types.TypeNs \"U8\");\n                                  disambiguator = 0 }\n                                ]\n                              };\n                            generic_args = []})\n                       ]});\n                (Types.Type\n                   (Types.Arrow\n                      { Types.bound_vars = [];\n                        value =\n                        { Types.abi = Types.Abi {todo = \"Rust\"};\n                          c_variadic = false;\n                          inputs =\n                          [(Types.Ref\n                              ({ Types.kind = Types.ReErased },\n                               Types.Adt {\n                                 def_id =\n                                 { Types.index = (0, 1185); krate = \"bertie\";\n                                   path =\n                                   [{ Types.data =\n                                      (Types.TypeNs \"tls13utils\");\n                                      disambiguator = 0 };\n                                     { Types.data = (Types.TypeNs \"U8\");\n                                       disambiguator = 0 }\n                                     ]\n                                   };\n                                 generic_args = []},\n                               false))\n                            ];\n                          output = (Types.Uint Types.U8);\n                          unsafety = Types.Normal }\n                        }))\n                ];\n              id =\n              { Types.index = (2, 6060); krate = \"core\";\n                path =\n                [{ Types.data = (Types.TypeNs \"iter\"); disambiguator = 0 };\n                  { Types.data = (Types.TypeNs \"adapters\"); disambiguator = 0\n                    };\n                  { Types.data = (Types.TypeNs \"map\"); disambiguator = 0 };\n                  { Types.data = Types.Impl; disambiguator = 2 }]\n                }}\n            });\n    ty =\n    (Types.Arrow\n       { Types.bound_vars = [];\n         value =\n         { Types.abi = Types.Abi {todo = \"Rust\"}; c_variadic = false;\n           inputs =\n           [Types.Adt {\n              def_id =\n              { Types.index = (2, 33976); krate = \"core\";\n                path =\n                [{ Types.data = (Types.TypeNs \"iter\"); disambiguator = 0 };\n                  { Types.data = (Types.TypeNs \"adapters\"); disambiguator = 0\n                    };\n                  { Types.data = (Types.TypeNs \"map\"); disambiguator = 0 };\n                  { Types.data = (Types.TypeNs \"Map\"); disambiguator = 0 }]\n                };\n              generic_args =\n              [(Types.Type\n                  Types.Adt {\n                    def_id =\n                    { Types.index = (2, 9967); krate = \"core\";\n                      path =\n                      [{ Types.data = (Types.TypeNs \"slice\");\n                         disambiguator = 0 };\n                        { Types.data = (Types.TypeNs \"iter\");\n                          disambiguator = 0 };\n                        { Types.data = (Types.TypeNs \"Iter\");\n                          disambiguator = 0 }\n                        ]\n                      };\n                    generic_args =\n                    [(Types.Lifetime { Types.kind = Types.ReErased });\n                      (Types.Type\n                         Types.Adt {\n                           def_id =\n                           { Types.index = (0, 1185); krate = \"bertie\";\n                             path =\n                             [{ Types.data = (Types.TypeNs \"tls13utils\");\n                                disambiguator = 0 };\n                               { Types.data = (Types.TypeNs \"U8\");\n                                 disambiguator = 0 }\n                               ]\n                             };\n                           generic_args = []})\n                      ]});\n                (Types.Type\n                   (Types.Arrow\n                      { Types.bound_vars = [];\n                        value =\n                        { Types.abi = Types.Abi {todo = \"Rust\"};\n                          c_variadic = false;\n                          inputs =\n                          [(Types.Ref\n                              ({ Types.kind = Types.ReErased },\n                               Types.Adt {\n                                 def_id =\n                                 { Types.index = (0, 1185); krate = \"bertie\";\n                                   path =\n                                   [{ Types.data =\n                                      (Types.TypeNs \"tls13utils\");\n                                      disambiguator = 0 };\n                                     { Types.data = (Types.TypeNs \"U8\");\n                                       disambiguator = 0 }\n                                     ]\n                                   };\n                                 generic_args = []},\n                               false))\n                            ];\n                          output = (Types.Uint Types.U8);\n                          unsafety = Types.Normal }\n                        }))\n                ]}\n             ];\n           output =\n           Types.Adt {\n             def_id =\n             { Types.index = (5, 6696); krate = \"alloc\";\n               path =\n               [{ Types.data = (Types.TypeNs \"vec\"); disambiguator = 0 };\n                 { Types.data = (Types.TypeNs \"Vec\"); disambiguator = 0 }]\n               };\n             generic_args =\n             [(Types.Type (Types.Uint Types.U8));\n               (Types.Type\n                  Types.Adt {\n                    def_id =\n                    { Types.index = (5, 7004); krate = \"alloc\";\n                      path =\n                      [{ Types.data = (Types.TypeNs \"alloc\");\n                         disambiguator = 0 };\n                        { Types.data = (Types.TypeNs \"Global\");\n                          disambiguator = 0 }\n                        ]\n                      };\n                    generic_args = []})\n               ]};\n           unsafety = Types.Normal }\n         })};\n  hir_id = (Some (\"650\", \"3\"));\n  span =\n  { Types.filename = (Types.Real (Types.LocalPath \"src/tls13utils.rs\"));\n    hi = { Types.col = \"55\"; line = \"138\" };\n    lo = { Types.col = \"8\"; line = \"138\" } };\n  ty =\n  Types.Adt {\n    def_id =\n    { Types.index = (5, 6696); krate = \"alloc\";\n      path =\n      [{ Types.data = (Types.TypeNs \"vec\"); disambiguator = 0 };\n        { Types.data = (Types.TypeNs \"Vec\"); disambiguator = 0 }]\n      };\n    generic_args =\n    [(Types.Type (Types.Uint Types.U8));\n      (Types.Type\n         Types.Adt {\n           def_id =\n           { Types.index = (5, 7004); krate = \"alloc\";\n             path =\n             [{ Types.data = (Types.TypeNs \"alloc\"); disambiguator = 0 };\n               { Types.data = (Types.TypeNs \"Global\"); disambiguator = 0 }]\n             };\n           generic_args = []})\n      ]}\n  }"

let impl__Bytes__into_raw (self: t_Bytes) : Alloc.Vec.t_Vec t_U8 Alloc.Alloc.t_Global = self._0

let impl__Bytes__declassify_array (self: t_Bytes) : Core.Result.t_Result (t_Array u8 v_C) u8 =
  Core.Result.impl__map_err (Core.Convert.f_try_into (impl__Bytes__declassify self
          <:
          Alloc.Vec.t_Vec u8 Alloc.Alloc.t_Global)
      <:
      Core.Result.t_Result (t_Array u8 v_C) (Alloc.Vec.t_Vec u8 Alloc.Alloc.t_Global))
    (fun temp_0_ ->
        let _:Alloc.Vec.t_Vec u8 Alloc.Alloc.t_Global = temp_0_ in
        v_INCORRECT_ARRAY_LENGTH)

[@@ FStar.Tactics.Typeclasses.tcinstance]
let impl_10: Core.Convert.t_From t_Bytes (t_Slice u8) =
  {
    f_from
    =
    fun (x: t_Slice u8) ->
      Core.Convert.f_into (Alloc.Slice.impl__to_vec x <: Alloc.Vec.t_Vec u8 Alloc.Alloc.t_Global)
  }

[@@ FStar.Tactics.Typeclasses.tcinstance]
let impl_11: Core.Convert.t_From t_Bytes (t_Slice t_U8) =
  { f_from = fun (x: t_Slice t_U8) -> Bytes (Alloc.Slice.impl__to_vec x) <: t_Bytes }

[@@ FStar.Tactics.Typeclasses.tcinstance]
let impl_12 (v_C: usize) : Core.Convert.t_From t_Bytes (t_Array u8 v_C) =
  {
    f_from
    =
    fun (x: t_Array u8 v_C) ->
      Core.Convert.f_into (Alloc.Slice.impl__to_vec (Rust_primitives.unsize x <: t_Slice u8)
          <:
          Alloc.Vec.t_Vec u8 Alloc.Alloc.t_Global)
  }

[@@ FStar.Tactics.Typeclasses.tcinstance]
let impl_13 (v_C: usize) : Core.Convert.t_From t_Bytes (t_Array u8 v_C) =
  {
    f_from
    =
    fun (x: t_Array u8 v_C) ->
      Core.Convert.f_into (Alloc.Slice.impl__to_vec (Rust_primitives.unsize x <: t_Slice u8)
          <:
          Alloc.Vec.t_Vec u8 Alloc.Alloc.t_Global)
  }

let impl__U32__as_be_bytes (self: t_U32) : t_Bytes =
  Core.Convert.f_into (Alloc.Slice.impl__to_vec (Rust_primitives.unsize (Core.Num.impl__u32__to_be_bytes
                self._0
              <:
              t_Array u8 (sz 4))
          <:
          t_Slice u8)
      <:
      Alloc.Vec.t_Vec u8 Alloc.Alloc.t_Global)

let impl__U32__from_be_bytes (x: t_Bytes) : Core.Result.t_Result t_U32 u8 =
  Rust_primitives.Hax.Control_flow_monad.Mexception.run (let* hoist17:t_Array u8 (sz 4) =
        match
          Core.Ops.Try_trait.f_branch (impl__Bytes__declassify_array (sz 4) x
              <:
              Core.Result.t_Result (t_Array u8 (sz 4)) u8)
        with
        | Core.Ops.Control_flow.ControlFlow_Break residual ->
          let* hoist16:Rust_primitives.Hax.t_Never =
            Core.Ops.Control_flow.ControlFlow.v_Break (Core.Ops.Try_trait.f_from_residual residual
                <:
                Core.Result.t_Result t_U32 u8)
          in
          Core.Ops.Control_flow.ControlFlow_Continue (Rust_primitives.Hax.never_to_any hoist16)
          <:
          Core.Ops.Control_flow.t_ControlFlow (Core.Result.t_Result t_U32 u8) (t_Array u8 (sz 4))
        | Core.Ops.Control_flow.ControlFlow_Continue v_val ->
          Core.Ops.Control_flow.ControlFlow_Continue v_val
          <:
          Core.Ops.Control_flow.t_ControlFlow (Core.Result.t_Result t_U32 u8) (t_Array u8 (sz 4))
      in
      Core.Ops.Control_flow.ControlFlow_Continue
      (let hoist18:u32 = Core.Num.impl__u32__from_be_bytes hoist17 in
        let hoist19:t_U32 = U32 hoist18 <: t_U32 in
        Core.Result.Result_Ok hoist19 <: Core.Result.t_Result t_U32 u8)
      <:
      Core.Ops.Control_flow.t_ControlFlow (Core.Result.t_Result t_U32 u8)
        (Core.Result.t_Result t_U32 u8))

let impl__U16__as_be_bytes (self: t_U16) : t_Bytes =
  Core.Convert.f_into (Alloc.Slice.impl__to_vec (Rust_primitives.unsize (Core.Num.impl__u16__to_be_bytes
                self._0
              <:
              t_Array u8 (sz 2))
          <:
          t_Slice u8)
      <:
      Alloc.Vec.t_Vec u8 Alloc.Alloc.t_Global)

let impl__U16__from_be_bytes (x: t_Bytes) : Core.Result.t_Result t_U16 u8 =
  Rust_primitives.Hax.Control_flow_monad.Mexception.run (let* hoist21:t_Array u8 (sz 2) =
        match
          Core.Ops.Try_trait.f_branch (impl__Bytes__declassify_array (sz 2) x
              <:
              Core.Result.t_Result (t_Array u8 (sz 2)) u8)
        with
        | Core.Ops.Control_flow.ControlFlow_Break residual ->
          let* hoist20:Rust_primitives.Hax.t_Never =
            Core.Ops.Control_flow.ControlFlow.v_Break (Core.Ops.Try_trait.f_from_residual residual
                <:
                Core.Result.t_Result t_U16 u8)
          in
          Core.Ops.Control_flow.ControlFlow_Continue (Rust_primitives.Hax.never_to_any hoist20)
          <:
          Core.Ops.Control_flow.t_ControlFlow (Core.Result.t_Result t_U16 u8) (t_Array u8 (sz 2))
        | Core.Ops.Control_flow.ControlFlow_Continue v_val ->
          Core.Ops.Control_flow.ControlFlow_Continue v_val
          <:
          Core.Ops.Control_flow.t_ControlFlow (Core.Result.t_Result t_U16 u8) (t_Array u8 (sz 2))
      in
      Core.Ops.Control_flow.ControlFlow_Continue
      (let hoist22:u16 = Core.Num.impl__u16__from_be_bytes hoist21 in
        let hoist23:t_U16 = U16 hoist22 <: t_U16 in
        Core.Result.Result_Ok hoist23 <: Core.Result.t_Result t_U16 u8)
      <:
      Core.Ops.Control_flow.t_ControlFlow (Core.Result.t_Result t_U16 u8)
        (Core.Result.t_Result t_U16 u8))

[@@ FStar.Tactics.Typeclasses.tcinstance]
let impl_16: Core.Ops.Index.t_Index t_Bytes usize =
  { f_Output = t_U8; f_index = fun (self: t_Bytes) (x: usize) -> self._0.[ x ] }

[@@ FStar.Tactics.Typeclasses.tcinstance]
let impl_17: Core.Ops.Index.t_Index t_Bytes (Core.Ops.Range.t_Range usize) =
  {
    f_Output = t_Slice t_U8;
    f_index = fun (self: t_Bytes) (x: Core.Ops.Range.t_Range usize) -> self._0.[ x ]
  }

let impl__Bytes__concat (self other: t_Bytes) : t_Bytes =
  let res:Alloc.Vec.t_Vec t_U8 Alloc.Alloc.t_Global = Alloc.Vec.impl__new () in
  let res:Alloc.Vec.t_Vec t_U8 Alloc.Alloc.t_Global =
    Alloc.Vec.impl_2__extend_from_slice res (Core.Ops.Deref.f_deref self._0 <: t_Slice t_U8)
  in
  let res:Alloc.Vec.t_Vec t_U8 Alloc.Alloc.t_Global =
    Alloc.Vec.impl_2__extend_from_slice res (Core.Ops.Deref.f_deref other._0 <: t_Slice t_U8)
  in
  Bytes res <: t_Bytes

let impl__Bytes__extend_from_slice (self x: t_Bytes) : t_Bytes =
  let hax_temp_output, self:(Prims.unit & t_Bytes) =
    (),
    ({
        self with
        _0
        =
        Alloc.Vec.impl_2__extend_from_slice self._0 (Core.Ops.Deref.f_deref x._0 <: t_Slice t_U8)
      }
      <:
      t_Bytes)
    <:
    (Prims.unit & t_Bytes)
  in
  self

let impl__Bytes__from_hex (s: string) : t_Bytes =
  let (s: Alloc.String.t_String):Alloc.String.t_String =
    Core.Iter.Traits.Iterator.f_collect (Core.Str.impl__str__split_whitespace s
        <:
        Core.Str.Iter.t_SplitWhitespace)
  in
  if ((Alloc.String.impl__String__len s <: usize) %! sz 2 <: usize) =. sz 0
  then
    Bytes
    (Core.Option.impl__expect (Rust_primitives.Hax.failure ""
            "{ Types.attributes = [];\n  contents =\n  Types.Call {\n    args =\n    [{ Types.attributes = [];\n       contents =\n       Types.Call {\n         args =\n         [{ Types.attributes = [];\n            contents =\n            Types.Call {\n              args =\n              [{ Types.attributes = [];\n                 contents =\n                 (Types.Adt\n                    { Types.base = None;\n                      fields =\n                      [{ Types.field =\n                         { Types.index = (2, 32813); krate = \"core\";\n                           path =\n                           [{ Types.data = (Types.TypeNs \"ops\");\n                              disambiguator = 0 };\n                             { Types.data = (Types.TypeNs \"range\");\n                               disambiguator = 0 };\n                             { Types.data = (Types.TypeNs \"Range\");\n                               disambiguator = 0 };\n                             { Types.data = (Types.ValueNs \"start\");\n                               disambiguator = 0 }\n                             ]\n                           };\n                         value =\n                         { Types.attributes = [];\n                           contents =\n                           Types.Literal {\n                             lit =\n                             { Types.node =\n                               (Types.Int (\"0\", Types.Unsuffixed));\n                               span =\n                               { Types.filename =\n                                 (Types.Real\n                                    (Types.LocalPath \"src/tls13utils.rs\"));\n                                 hi = { Types.col = \"18\"; line = \"295\" };\n                                 lo = { Types.col = \"17\"; line = \"295\" } }\n                               };\n                             neg = false};\n                           hir_id = (Some (\"706\", \"42\"));\n                           span =\n                           { Types.filename =\n                             (Types.Real\n                                (Types.LocalPath \"src/tls13utils.rs\"));\n                             hi = { Types.col = \"18\"; line = \"295\" };\n                             lo = { Types.col = \"17\"; line = \"295\" } };\n                           ty = (Types.Uint Types.Usize) }\n                         };\n                        { Types.field =\n                          { Types.index = (2, 32814); krate = \"core\";\n                            path =\n                            [{ Types.data = (Types.TypeNs \"ops\");\n                               disambiguator = 0 };\n                              { Types.data = (Types.TypeNs \"range\");\n                                disambiguator = 0 };\n                              { Types.data = (Types.TypeNs \"Range\");\n                                disambiguator = 0 };\n                              { Types.data = (Types.ValueNs \"end\");\n                                disambiguator = 0 }\n                              ]\n                            };\n                          value =\n                          { Types.attributes = [];\n                            contents =\n                            Types.Call {\n                              args =\n                              [{ Types.attributes = [];\n                                 contents =\n                                 Types.Borrow {\n                                   arg =\n                                   { Types.attributes = [];\n                                     contents =\n                                     Types.VarRef {\n                                       id =\n                                       { Types.id =\n                                         { Types.local_id = \"13\";\n                                           owner =\n                                           { Types.index = (0, 706);\n                                             krate = \"bertie\";\n                                             path =\n                                             [{ Types.data =\n                                                (Types.TypeNs \"tls13utils\");\n                                                disambiguator = 0 };\n                                               { Types.data = Types.Impl;\n                                                 disambiguator = 18 };\n                                               { Types.data =\n                                                 (Types.ValueNs \"from_hex\");\n                                                 disambiguator = 0 }\n                                               ]\n                                             }\n                                           };\n                                         name = \"s\" }};\n                                     hir_id = None;\n                                     span =\n                                     { Types.filename =\n                                       (Types.Real\n                                          (Types.LocalPath\n                                             \"src/tls13utils.rs\"));\n                                       hi =\n                                       { Types.col = \"21\"; line = \"295\" };\n                                       lo =\n                                       { Types.col = \"20\"; line = \"295\" } };\n                                     ty =\n                                     Types.Adt {\n                                       def_id =\n                                       { Types.index = (5, 7255);\n                                         krate = \"alloc\";\n                                         path =\n                                         [{ Types.data =\n                                            (Types.TypeNs \"string\");\n                                            disambiguator = 0 };\n                                           { Types.data =\n                                             (Types.TypeNs \"String\");\n                                             disambiguator = 0 }\n                                           ]\n                                         };\n                                       generic_args = []}\n                                     };\n                                   borrow_kind = Types.Shared};\n                                 hir_id = (Some (\"706\", \"46\"));\n                                 span =\n                                 { Types.filename =\n                                   (Types.Real\n                                      (Types.LocalPath \"src/tls13utils.rs\"));\n                                   hi = { Types.col = \"27\"; line = \"295\" };\n                                   lo = { Types.col = \"20\"; line = \"295\" } };\n                                 ty =\n                                 (Types.Ref\n                                    ({ Types.kind = Types.ReErased },\n                                     Types.Adt {\n                                       def_id =\n                                       { Types.index = (5, 7255);\n                                         krate = \"alloc\";\n                                         path =\n                                         [{ Types.data =\n                                            (Types.TypeNs \"string\");\n                                            disambiguator = 0 };\n                                           { Types.data =\n                                             (Types.TypeNs \"String\");\n                                             disambiguator = 0 }\n                                           ]\n                                         };\n                                       generic_args = []},\n                                     false))\n                                 }\n                                ];\n                              fn_span =\n                              { Types.filename =\n                                (Types.Real\n                                   (Types.LocalPath \"src/tls13utils.rs\"));\n                                hi = { Types.col = \"27\"; line = \"295\" };\n                                lo = { Types.col = \"22\"; line = \"295\" } };\n                              from_hir_call = true;\n                              fun' =\n                              { Types.attributes = [];\n                                contents =\n                                Types.GlobalName {\n                                  id =\n                                  { Types.index = (5, 5498); krate = \"alloc\";\n                                    path =\n                                    [{ Types.data = (Types.TypeNs \"string\");\n                                       disambiguator = 0 };\n                                      { Types.data = Types.Impl;\n                                        disambiguator = 0 };\n                                      { Types.data = (Types.ValueNs \"len\");\n                                        disambiguator = 0 }\n                                      ]\n                                    }};\n                                hir_id = None;\n                                span =\n                                { Types.filename =\n                                  (Types.Real\n                                     (Types.LocalPath \"src/tls13utils.rs\"));\n                                  hi = { Types.col = \"25\"; line = \"295\" };\n                                  lo = { Types.col = \"22\"; line = \"295\" } };\n                                ty =\n                                (Types.Arrow\n                                   { Types.bound_vars =\n                                     [(Types.Region\n                                         (Types.BrNamed\n                                            ({ Types.index = (5, 9012);\n                                               krate = \"alloc\";\n                                               path =\n                                               [{ Types.data =\n                                                  (Types.TypeNs \"string\");\n                                                  disambiguator = 0 };\n                                                 { Types.data = Types.Impl;\n                                                   disambiguator = 0 };\n                                                 { Types.data =\n                                                   (Types.ValueNs \"len\");\n                                                   disambiguator = 0 };\n                                                 { Types.data =\n                                                   (Types.LifetimeNs \"'_\");\n                                                   disambiguator = 0 }\n                                                 ]\n                                               },\n                                             \"'_\")))\n                                       ];\n                                     value =\n                                     { Types.abi = Types.Abi {todo = \"Rust\"};\n                                       c_variadic = false;\n                                       inputs =\n                                       [(Types.Ref\n                                           ({ Types.kind =\n                                              (Types.ReLateBound\n                                                 (\"0\",\n                                                  { Types.kind =\n                                                    (Types.BrNamed\n                                                       ({ Types.index =\n                                                          (5, 9012);\n                                                          krate = \"alloc\";\n                                                          path =\n                                                          [{ Types.data =\n                                                             (Types.TypeNs\n                                                                \"string\");\n                                                             disambiguator =\n                                                             0 };\n                                                            { Types.data =\n                                                              Types.Impl;\n                                                              disambiguator =\n                                                              0 };\n                                                            { Types.data =\n                                                              (Types.ValueNs\n                                                                 \"len\");\n                                                              disambiguator =\n                                                              0 };\n                                                            { Types.data =\n                                                              (Types.LifetimeNs\n                                                                 \"'_\");\n                                                              disambiguator =\n                                                              0 }\n                                                            ]\n                                                          },\n                                                        \"'_\"));\n                                                    var = \"0\" }))\n                                              },\n                                            Types.Adt {\n                                              def_id =\n                                              { Types.index = (5, 7255);\n                                                krate = \"alloc\";\n                                                path =\n                                                [{ Types.data =\n                                                   (Types.TypeNs \"string\");\n                                                   disambiguator = 0 };\n                                                  { Types.data =\n                                                    (Types.TypeNs \"String\");\n                                                    disambiguator = 0 }\n                                                  ]\n                                                };\n                                              generic_args = []},\n                                            false))\n                                         ];\n                                       output = (Types.Uint Types.Usize);\n                                       unsafety = Types.Normal }\n                                     })\n                                };\n                              generic_args = []; impl = None;\n                              ty =\n                              (Types.Arrow\n                                 { Types.bound_vars =\n                                   [(Types.Region\n                                       (Types.BrNamed\n                                          ({ Types.index = (5, 9012);\n                                             krate = \"alloc\";\n                                             path =\n                                             [{ Types.data =\n                                                (Types.TypeNs \"string\");\n                                                disambiguator = 0 };\n                                               { Types.data = Types.Impl;\n                                                 disambiguator = 0 };\n                                               { Types.data =\n                                                 (Types.ValueNs \"len\");\n                                                 disambiguator = 0 };\n                                               { Types.data =\n                                                 (Types.LifetimeNs \"'_\");\n                                                 disambiguator = 0 }\n                                               ]\n                                             },\n                                           \"'_\")))\n                                     ];\n                                   value =\n                                   { Types.abi = Types.Abi {todo = \"Rust\"};\n                                     c_variadic = false;\n                                     inputs =\n                                     [(Types.Ref\n                                         ({ Types.kind =\n                                            (Types.ReLateBound\n                                               (\"0\",\n                                                { Types.kind =\n                                                  (Types.BrNamed\n                                                     ({ Types.index =\n                                                        (5, 9012);\n                                                        krate = \"alloc\";\n                                                        path =\n                                                        [{ Types.data =\n                                                           (Types.TypeNs\n                                                              \"string\");\n                                                           disambiguator = 0\n                                                           };\n                                                          { Types.data =\n                                                            Types.Impl;\n                                                            disambiguator = 0\n                                                            };\n                                                          { Types.data =\n                                                            (Types.ValueNs\n                                                               \"len\");\n                                                            disambiguator = 0\n                                                            };\n                                                          { Types.data =\n                                                            (Types.LifetimeNs\n                                                               \"'_\");\n                                                            disambiguator = 0\n                                                            }\n                                                          ]\n                                                        },\n                                                      \"'_\"));\n                                                  var = \"0\" }))\n                                            },\n                                          Types.Adt {\n                                            def_id =\n                                            { Types.index = (5, 7255);\n                                              krate = \"alloc\";\n                                              path =\n                                              [{ Types.data =\n                                                 (Types.TypeNs \"string\");\n                                                 disambiguator = 0 };\n                                                { Types.data =\n                                                  (Types.TypeNs \"String\");\n                                                  disambiguator = 0 }\n                                                ]\n                                              };\n                                            generic_args = []},\n                                          false))\n                                       ];\n                                     output = (Types.Uint Types.Usize);\n                                     unsafety = Types.Normal }\n                                   })};\n                            hir_id = (Some (\"706\", \"44\"));\n                            span =\n                            { Types.filename =\n                              (Types.Real\n                                 (Types.LocalPath \"src/tls13utils.rs\"));\n                              hi = { Types.col = \"27\"; line = \"295\" };\n                              lo = { Types.col = \"20\"; line = \"295\" } };\n                            ty = (Types.Uint Types.Usize) }\n                          }\n                        ];\n                      info =\n                      { Types.typ =\n                        { Types.index = (2, 32811); krate = \"core\";\n                          path =\n                          [{ Types.data = (Types.TypeNs \"ops\");\n                             disambiguator = 0 };\n                            { Types.data = (Types.TypeNs \"range\");\n                              disambiguator = 0 };\n                            { Types.data = (Types.TypeNs \"Range\");\n                              disambiguator = 0 }\n                            ]\n                          };\n                        typ_is_record = true; typ_is_struct = true;\n                        type_namespace =\n                        { Types.index = (2, 32811); krate = \"core\";\n                          path =\n                          [{ Types.data = (Types.TypeNs \"ops\");\n                             disambiguator = 0 };\n                            { Types.data = (Types.TypeNs \"range\");\n                              disambiguator = 0 }\n                            ]\n                          };\n                        variant =\n                        { Types.index = (2, 32811); krate = \"core\";\n                          path =\n                          [{ Types.data = (Types.TypeNs \"ops\");\n                             disambiguator = 0 };\n                            { Types.data = (Types.TypeNs \"range\");\n                              disambiguator = 0 };\n                            { Types.data = (Types.TypeNs \"Range\");\n                              disambiguator = 0 }\n                            ]\n                          };\n                        variant_index = \"0\"; variant_is_record = true };\n                      user_ty = None });\n                 hir_id = (Some (\"706\", \"41\"));\n                 span =\n                 { Types.filename =\n                   (Types.Real (Types.LocalPath \"src/tls13utils.rs\"));\n                   hi = { Types.col = \"28\"; line = \"295\" };\n                   lo = { Types.col = \"16\"; line = \"295\" } };\n                 ty =\n                 Types.Adt {\n                   def_id =\n                   { Types.index = (2, 32811); krate = \"core\";\n                     path =\n                     [{ Types.data = (Types.TypeNs \"ops\"); disambiguator = 0\n                        };\n                       { Types.data = (Types.TypeNs \"range\");\n                         disambiguator = 0 };\n                       { Types.data = (Types.TypeNs \"Range\");\n                         disambiguator = 0 }\n                       ]\n                     };\n                   generic_args = [(Types.Type (Types.Uint Types.Usize))]}\n                 };\n                { Types.attributes = [];\n                  contents =\n                  Types.Literal {\n                    lit =\n                    { Types.node = (Types.Int (\"2\", Types.Unsuffixed));\n                      span =\n                      { Types.filename =\n                        (Types.Real (Types.LocalPath \"src/tls13utils.rs\"));\n                        hi = { Types.col = \"30\"; line = \"296\" };\n                        lo = { Types.col = \"29\"; line = \"296\" } }\n                      };\n                    neg = false};\n                  hir_id = (Some (\"706\", \"49\"));\n                  span =\n                  { Types.filename =\n                    (Types.Real (Types.LocalPath \"src/tls13utils.rs\"));\n                    hi = { Types.col = \"30\"; line = \"296\" };\n                    lo = { Types.col = \"29\"; line = \"296\" } };\n                  ty = (Types.Uint Types.Usize) }\n                ];\n              fn_span =\n              { Types.filename =\n                (Types.Real (Types.LocalPath \"src/tls13utils.rs\"));\n                hi = { Types.col = \"31\"; line = \"296\" };\n                lo = { Types.col = \"21\"; line = \"296\" } };\n              from_hir_call = true;\n              fun' =\n              { Types.attributes = [];\n                contents =\n                Types.GlobalName {\n                  id =\n                  { Types.index = (2, 7336); krate = \"core\";\n                    path =\n                    [{ Types.data = (Types.TypeNs \"iter\"); disambiguator = 0\n                       };\n                      { Types.data = (Types.TypeNs \"traits\");\n                        disambiguator = 0 };\n                      { Types.data = (Types.TypeNs \"iterator\");\n                        disambiguator = 0 };\n                      { Types.data = (Types.TypeNs \"Iterator\");\n                        disambiguator = 0 };\n                      { Types.data = (Types.ValueNs \"step_by\");\n                        disambiguator = 0 }\n                      ]\n                    }};\n                hir_id = None;\n                span =\n                { Types.filename =\n                  (Types.Real (Types.LocalPath \"src/tls13utils.rs\"));\n                  hi = { Types.col = \"28\"; line = \"296\" };\n                  lo = { Types.col = \"21\"; line = \"296\" } };\n                ty =\n                (Types.Arrow\n                   { Types.bound_vars = [];\n                     value =\n                     { Types.abi = Types.Abi {todo = \"Rust\"};\n                       c_variadic = false;\n                       inputs =\n                       [Types.Adt {\n                          def_id =\n                          { Types.index = (2, 32811); krate = \"core\";\n                            path =\n                            [{ Types.data = (Types.TypeNs \"ops\");\n                               disambiguator = 0 };\n                              { Types.data = (Types.TypeNs \"range\");\n                                disambiguator = 0 };\n                              { Types.data = (Types.TypeNs \"Range\");\n                                disambiguator = 0 }\n                              ]\n                            };\n                          generic_args =\n                          [(Types.Type (Types.Uint Types.Usize))]};\n                         (Types.Uint Types.Usize)];\n                       output =\n                       Types.Adt {\n                         def_id =\n                         { Types.index = (2, 34057); krate = \"core\";\n                           path =\n                           [{ Types.data = (Types.TypeNs \"iter\");\n                              disambiguator = 0 };\n                             { Types.data = (Types.TypeNs \"adapters\");\n                               disambiguator = 0 };\n                             { Types.data = (Types.TypeNs \"step_by\");\n                               disambiguator = 0 };\n                             { Types.data = (Types.TypeNs \"StepBy\");\n                               disambiguator = 0 }\n                             ]\n                           };\n                         generic_args =\n                         [(Types.Type\n                             Types.Adt {\n                               def_id =\n                               { Types.index = (2, 32811); krate = \"core\";\n                                 path =\n                                 [{ Types.data = (Types.TypeNs \"ops\");\n                                    disambiguator = 0 };\n                                   { Types.data = (Types.TypeNs \"range\");\n                                     disambiguator = 0 };\n                                   { Types.data = (Types.TypeNs \"Range\");\n                                     disambiguator = 0 }\n                                   ]\n                                 };\n                               generic_args =\n                               [(Types.Type (Types.Uint Types.Usize))]})\n                           ]};\n                       unsafety = Types.Normal }\n                     })\n                };\n              generic_args =\n              [(Types.Type\n                  Types.Adt {\n                    def_id =\n                    { Types.index = (2, 32811); krate = \"core\";\n                      path =\n                      [{ Types.data = (Types.TypeNs \"ops\"); disambiguator = 0\n                         };\n                        { Types.data = (Types.TypeNs \"range\");\n                          disambiguator = 0 };\n                        { Types.data = (Types.TypeNs \"Range\");\n                          disambiguator = 0 }\n                        ]\n                      };\n                    generic_args = [(Types.Type (Types.Uint Types.Usize))]})\n                ];\n              impl =\n              (Some { Types.args =\n                      [{ Types.args = [];\n                         impl =\n                         Types.Builtin {\n                           trait =\n                           { Types.def_id =\n                             { Types.index = (2, 2689); krate = \"core\";\n                               path =\n                               [{ Types.data = (Types.TypeNs \"marker\");\n                                  disambiguator = 0 };\n                                 { Types.data = (Types.TypeNs \"Sized\");\n                                   disambiguator = 0 }\n                                 ]\n                               };\n                             generic_args =\n                             [(Types.Type (Types.Uint Types.Usize))] }}\n                         };\n                        { Types.args = [];\n                          impl =\n                          Types.Concrete {generics = [];\n                            id =\n                            { Types.index = (2, 34165); krate = \"core\";\n                              path =\n                              [{ Types.data = (Types.TypeNs \"iter\");\n                                 disambiguator = 0 };\n                                { Types.data = (Types.TypeNs \"range\");\n                                  disambiguator = 0 };\n                                { Types.data = Types.Impl; disambiguator = 37\n                                  }\n                                ]\n                              }}\n                          }\n                        ];\n                      impl =\n                      Types.Concrete {\n                        generics = [(Types.Type (Types.Uint Types.Usize))];\n                        id =\n                        { Types.index = (2, 6816); krate = \"core\";\n                          path =\n                          [{ Types.data = (Types.TypeNs \"iter\");\n                             disambiguator = 0 };\n                            { Types.data = (Types.TypeNs \"range\");\n                              disambiguator = 0 };\n                            { Types.data = Types.Impl; disambiguator = 3 }]\n                          }}\n                      });\n              ty =\n              (Types.Arrow\n                 { Types.bound_vars = [];\n                   value =\n                   { Types.abi = Types.Abi {todo = \"Rust\"};\n                     c_variadic = false;\n                     inputs =\n                     [Types.Adt {\n                        def_id =\n                        { Types.index = (2, 32811); krate = \"core\";\n                          path =\n                          [{ Types.data = (Types.TypeNs \"ops\");\n                             disambiguator = 0 };\n                            { Types.data = (Types.TypeNs \"range\");\n                              disambiguator = 0 };\n                            { Types.data = (Types.TypeNs \"Range\");\n                              disambiguator = 0 }\n                            ]\n                          };\n                        generic_args =\n                        [(Types.Type (Types.Uint Types.Usize))]};\n                       (Types.Uint Types.Usize)];\n                     output =\n                     Types.Adt {\n                       def_id =\n                       { Types.index = (2, 34057); krate = \"core\";\n                         path =\n                         [{ Types.data = (Types.TypeNs \"iter\");\n                            disambiguator = 0 };\n                           { Types.data = (Types.TypeNs \"adapters\");\n                             disambiguator = 0 };\n                           { Types.data = (Types.TypeNs \"step_by\");\n                             disambiguator = 0 };\n                           { Types.data = (Types.TypeNs \"StepBy\");\n                             disambiguator = 0 }\n                           ]\n                         };\n                       generic_args =\n                       [(Types.Type\n                           Types.Adt {\n                             def_id =\n                             { Types.index = (2, 32811); krate = \"core\";\n                               path =\n                               [{ Types.data = (Types.TypeNs \"ops\");\n                                  disambiguator = 0 };\n                                 { Types.data = (Types.TypeNs \"range\");\n                                   disambiguator = 0 };\n                                 { Types.data = (Types.TypeNs \"Range\");\n                                   disambiguator = 0 }\n                                 ]\n                               };\n                             generic_args =\n                             [(Types.Type (Types.Uint Types.Usize))]})\n                         ]};\n                     unsafety = Types.Normal }\n                   })};\n            hir_id = (Some (\"706\", \"39\"));\n            span =\n            { Types.filename =\n              (Types.Real (Types.LocalPath \"src/tls13utils.rs\"));\n              hi = { Types.col = \"31\"; line = \"296\" };\n              lo = { Types.col = \"16\"; line = \"295\" } };\n            ty =\n            Types.Adt {\n              def_id =\n              { Types.index = (2, 34057); krate = \"core\";\n                path =\n                [{ Types.data = (Types.TypeNs \"iter\"); disambiguator = 0 };\n                  { Types.data = (Types.TypeNs \"adapters\"); disambiguator = 0\n                    };\n                  { Types.data = (Types.TypeNs \"step_by\"); disambiguator = 0\n                    };\n                  { Types.data = (Types.TypeNs \"StepBy\"); disambiguator = 0 }\n                  ]\n                };\n              generic_args =\n              [(Types.Type\n                  Types.Adt {\n                    def_id =\n                    { Types.index = (2, 32811); krate = \"core\";\n                      path =\n                      [{ Types.data = (Types.TypeNs \"ops\"); disambiguator = 0\n                         };\n                        { Types.data = (Types.TypeNs \"range\");\n                          disambiguator = 0 };\n                        { Types.data = (Types.TypeNs \"Range\");\n                          disambiguator = 0 }\n                        ]\n                      };\n                    generic_args = [(Types.Type (Types.Uint Types.Usize))]})\n                ]}\n            };\n           { Types.attributes = [];\n             contents =\n             Types.Closure {\n               body =\n               { Types.attributes = [];\n                 contents =\n                 Types.Block {\n                   expr =\n                   (Some { Types.attributes = [];\n                           contents =\n                           Types.Call {\n                             args =\n                             [{ Types.attributes = [];\n                                contents =\n                                Types.Call {\n                                  args =\n                                  [{ Types.attributes = [];\n                                     contents =\n                                     Types.Borrow {\n                                       arg =\n                                       { Types.attributes = [];\n                                         contents =\n                                         Types.Deref {\n                                           arg =\n                                           { Types.attributes = [];\n                                             contents =\n                                             Types.Call {\n                                               args =\n                                               [{ Types.attributes = [];\n                                                  contents =\n                                                  Types.Borrow {\n                                                    arg =\n                                                    { Types.attributes = [];\n                                                      contents =\n                                                      Types.UpvarRef {\n                                                        closure_def_id =\n                                                        { Types.index =\n                                                          (0, 707);\n                                                          krate = \"bertie\";\n                                                          path =\n                                                          [{ Types.data =\n                                                             (Types.TypeNs\n                                                                \"tls13utils\");\n                                                             disambiguator =\n                                                             0 };\n                                                            { Types.data =\n                                                              Types.Impl;\n                                                              disambiguator =\n                                                              18 };\n                                                            { Types.data =\n                                                              (Types.ValueNs\n                                                                 \"from_hex\");\n                                                              disambiguator =\n                                                              0 };\n                                                            { Types.data =\n                                                              Types.ClosureExpr;\n                                                              disambiguator =\n                                                              0 }\n                                                            ]\n                                                          };\n                                                        var_hir_id =\n                                                        { Types.id =\n                                                          { Types.local_id =\n                                                            \"13\";\n                                                            owner =\n                                                            { Types.index =\n                                                              (0, 706);\n                                                              krate =\n                                                              \"bertie\";\n                                                              path =\n                                                              [{ Types.data =\n                                                                 (Types.TypeNs\n                                                                    \"tls13utils\");\n                                                                 disambiguator =\n                                                                 0 };\n                                                                { Types.data =\n                                                                  Types.Impl;\n                                                                  disambiguator =\n                                                                  18 };\n                                                                { Types.data =\n                                                                  (Types.ValueNs\n                                                                    \"from_hex\");\n                                                                  disambiguator =\n                                                                  0 }\n                                                                ]\n                                                              }\n                                                            };\n                                                          name = \"s\" }};\n                                                      hir_id = None;\n                                                      span =\n                                                      { Types.filename =\n                                                        (Types.Real\n                                                           (Types.LocalPath\n                                                              \"src/tls13utils.rs\"));\n                                                        hi =\n                                                        { Types.col = \"25\";\n                                                          line = \"298\" };\n                                                        lo =\n                                                        { Types.col = \"24\";\n                                                          line = \"298\" }\n                                                        };\n                                                      ty =\n                                                      Types.Adt {\n                                                        def_id =\n                                                        { Types.index =\n                                                          (5, 7255);\n                                                          krate = \"alloc\";\n                                                          path =\n                                                          [{ Types.data =\n                                                             (Types.TypeNs\n                                                                \"string\");\n                                                             disambiguator =\n                                                             0 };\n                                                            { Types.data =\n                                                              (Types.TypeNs\n                                                                 \"String\");\n                                                              disambiguator =\n                                                              0 }\n                                                            ]\n                                                          };\n                                                        generic_args = []}\n                                                      };\n                                                    borrow_kind =\n                                                    Types.Shared};\n                                                  hir_id = None;\n                                                  span =\n                                                  { Types.filename =\n                                                    (Types.Real\n                                                       (Types.LocalPath\n                                                          \"src/tls13utils.rs\"));\n                                                    hi =\n                                                    { Types.col = \"39\";\n                                                      line = \"298\" };\n                                                    lo =\n                                                    { Types.col = \"24\";\n                                                      line = \"298\" }\n                                                    };\n                                                  ty =\n                                                  (Types.Ref\n                                                     ({ Types.kind =\n                                                        Types.ReErased },\n                                                      Types.Adt {\n                                                        def_id =\n                                                        { Types.index =\n                                                          (5, 7255);\n                                                          krate = \"alloc\";\n                                                          path =\n                                                          [{ Types.data =\n                                                             (Types.TypeNs\n                                                                \"string\");\n                                                             disambiguator =\n                                                             0 };\n                                                            { Types.data =\n                                                              (Types.TypeNs\n                                                                 \"String\");\n                                                              disambiguator =\n                                                              0 }\n                                                            ]\n                                                          };\n                                                        generic_args = []},\n                                                      false))\n                                                  }\n                                                 ];\n                                               fn_span =\n                                               { Types.filename =\n                                                 (Types.Real\n                                                    (Types.LocalPath\n                                                       \"src/tls13utils.rs\"));\n                                                 hi =\n                                                 { Types.col = \"39\";\n                                                   line = \"298\" };\n                                                 lo =\n                                                 { Types.col = \"24\";\n                                                   line = \"298\" }\n                                                 };\n                                               from_hir_call = false;\n                                               fun' =\n                                               { Types.attributes = [];\n                                                 contents =\n                                                 Types.GlobalName {\n                                                   id =\n                                                   { Types.index = (2, 2897);\n                                                     krate = \"core\";\n                                                     path =\n                                                     [{ Types.data =\n                                                        (Types.TypeNs \"ops\");\n                                                        disambiguator = 0 };\n                                                       { Types.data =\n                                                         (Types.TypeNs\n                                                            \"deref\");\n                                                         disambiguator = 0 };\n                                                       { Types.data =\n                                                         (Types.TypeNs\n                                                            \"Deref\");\n                                                         disambiguator = 0 };\n                                                       { Types.data =\n                                                         (Types.ValueNs\n                                                            \"deref\");\n                                                         disambiguator = 0 }\n                                                       ]\n                                                     }};\n                                                 hir_id = None;\n                                                 span =\n                                                 { Types.filename =\n                                                   (Types.Real\n                                                      (Types.LocalPath\n                                                         \"src/tls13utils.rs\"));\n                                                   hi =\n                                                   { Types.col = \"39\";\n                                                     line = \"298\" };\n                                                   lo =\n                                                   { Types.col = \"24\";\n                                                     line = \"298\" }\n                                                   };\n                                                 ty =\n                                                 (Types.Arrow\n                                                    { Types.bound_vars =\n                                                      [(Types.Region\n                                                          (Types.BrNamed\n                                                             ({ Types.index =\n                                                                (2, 53660);\n                                                                krate =\n                                                                \"core\";\n                                                                path =\n                                                                [{ Types.data =\n                                                                   (Types.TypeNs\n                                                                    \"ops\");\n                                                                   disambiguator =\n                                                                   0 };\n                                                                  { Types.data =\n                                                                    (\n                                                                    Types.TypeNs\n                                                                    \"deref\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                  { Types.data =\n                                                                    (\n                                                                    Types.TypeNs\n                                                                    \"Deref\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                  { Types.data =\n                                                                    (\n                                                                    Types.ValueNs\n                                                                    \"deref\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                  { Types.data =\n                                                                    (\n                                                                    Types.LifetimeNs\n                                                                    \"'_\");\n                                                                    disambiguator =\n                                                                    0 }\n                                                                  ]\n                                                                },\n                                                              \"'_\")))\n                                                        ];\n                                                      value =\n                                                      { Types.abi =\n                                                        Types.Abi {\n                                                          todo = \"Rust\"};\n                                                        c_variadic = false;\n                                                        inputs =\n                                                        [(Types.Ref\n                                                            ({ Types.kind =\n                                                               (Types.ReLateBound\n                                                                  (\"0\",\n                                                                   { Types.kind =\n                                                                    (Types.BrNamed\n                                                                    ({ Types.index =\n                                                                    (2, 53660);\n                                                                    krate =\n                                                                    \"core\";\n                                                                    path =\n                                                                    [{ Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"ops\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"deref\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"Deref\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.ValueNs\n                                                                    \"deref\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.LifetimeNs\n                                                                    \"'_\");\n                                                                    disambiguator =\n                                                                    0 }] },\n                                                                    \"'_\"));\n                                                                    var = \"0\"\n                                                                    }))\n                                                               },\n                                                             Types.Adt {\n                                                               def_id =\n                                                               { Types.index =\n                                                                 (5, 7255);\n                                                                 krate =\n                                                                 \"alloc\";\n                                                                 path =\n                                                                 [{ Types.data =\n                                                                    (\n                                                                    Types.TypeNs\n                                                                    \"string\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                   { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"String\");\n                                                                    disambiguator =\n                                                                    0 }\n                                                                   ]\n                                                                 };\n                                                               generic_args =\n                                                               []},\n                                                             false))\n                                                          ];\n                                                        output =\n                                                        (Types.Ref\n                                                           ({ Types.kind =\n                                                              (Types.ReLateBound\n                                                                 (\"0\",\n                                                                  { Types.kind =\n                                                                    (\n                                                                    Types.BrNamed\n                                                                    ({ Types.index =\n                                                                    (2, 53660);\n                                                                    krate =\n                                                                    \"core\";\n                                                                    path =\n                                                                    [{ Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"ops\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"deref\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"Deref\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.ValueNs\n                                                                    \"deref\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.LifetimeNs\n                                                                    \"'_\");\n                                                                    disambiguator =\n                                                                    0 }] },\n                                                                    \"'_\"));\n                                                                    var = \"0\"\n                                                                    }))\n                                                              },\n                                                            (Types.Alias\n                                                               (Types.Projection,\n                                                                { Types.def_id =\n                                                                  { Types.index =\n                                                                    (\n                                                                    2, 2896);\n                                                                    krate =\n                                                                    \"core\";\n                                                                    path =\n                                                                    [{ Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"ops\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"deref\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"Deref\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"Target\");\n                                                                    disambiguator =\n                                                                    0 }] };\n                                                                  substs =\n                                                                  [(Types.Type\n                                                                    Types.Adt {\n                                                                    def_id =\n                                                                    { Types.index =\n                                                                    (5, 7255);\n                                                                    krate =\n                                                                    \"alloc\";\n                                                                    path =\n                                                                    [{ Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"string\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"String\");\n                                                                    disambiguator =\n                                                                    0 }] };\n                                                                    generic_args =\n                                                                    []})];\n                                                                  trait_def_id =\n                                                                  (Some (\n                                                                  { Types.index =\n                                                                    (\n                                                                    2, 2895);\n                                                                    krate =\n                                                                    \"core\";\n                                                                    path =\n                                                                    [{ Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"ops\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"deref\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"Deref\");\n                                                                    disambiguator =\n                                                                    0 }] },\n                                                                  { Types.args =\n                                                                    [];\n                                                                    impl =\n                                                                    Types.Concrete {\n                                                                    generics =\n                                                                    [];\n                                                                    id =\n                                                                    { Types.index =\n                                                                    (5, 5633);\n                                                                    krate =\n                                                                    \"alloc\";\n                                                                    path =\n                                                                    [{ Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"string\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    Types.Impl;\n                                                                    disambiguator =\n                                                                    38 }] }}\n                                                                    }))\n                                                                  })),\n                                                            false));\n                                                        unsafety =\n                                                        Types.Normal }\n                                                      })\n                                                 };\n                                               generic_args =\n                                               [(Types.Type\n                                                   Types.Adt {\n                                                     def_id =\n                                                     { Types.index =\n                                                       (5, 7255);\n                                                       krate = \"alloc\";\n                                                       path =\n                                                       [{ Types.data =\n                                                          (Types.TypeNs\n                                                             \"string\");\n                                                          disambiguator = 0 };\n                                                         { Types.data =\n                                                           (Types.TypeNs\n                                                              \"String\");\n                                                           disambiguator = 0\n                                                           }\n                                                         ]\n                                                       };\n                                                     generic_args = []})\n                                                 ];\n                                               impl =\n                                               (Some { Types.args = [];\n                                                       impl =\n                                                       Types.Concrete {\n                                                         generics = [];\n                                                         id =\n                                                         { Types.index =\n                                                           (5, 5633);\n                                                           krate = \"alloc\";\n                                                           path =\n                                                           [{ Types.data =\n                                                              (Types.TypeNs\n                                                                 \"string\");\n                                                              disambiguator =\n                                                              0 };\n                                                             { Types.data =\n                                                               Types.Impl;\n                                                               disambiguator =\n                                                               38 }\n                                                             ]\n                                                           }}\n                                                       });\n                                               ty =\n                                               (Types.Arrow\n                                                  { Types.bound_vars =\n                                                    [(Types.Region\n                                                        (Types.BrNamed\n                                                           ({ Types.index =\n                                                              (2, 53660);\n                                                              krate = \"core\";\n                                                              path =\n                                                              [{ Types.data =\n                                                                 (Types.TypeNs\n                                                                    \"ops\");\n                                                                 disambiguator =\n                                                                 0 };\n                                                                { Types.data =\n                                                                  (Types.TypeNs\n                                                                    \"deref\");\n                                                                  disambiguator =\n                                                                  0 };\n                                                                { Types.data =\n                                                                  (Types.TypeNs\n                                                                    \"Deref\");\n                                                                  disambiguator =\n                                                                  0 };\n                                                                { Types.data =\n                                                                  (Types.ValueNs\n                                                                    \"deref\");\n                                                                  disambiguator =\n                                                                  0 };\n                                                                { Types.data =\n                                                                  (Types.LifetimeNs\n                                                                    \"'_\");\n                                                                  disambiguator =\n                                                                  0 }\n                                                                ]\n                                                              },\n                                                            \"'_\")))\n                                                      ];\n                                                    value =\n                                                    { Types.abi =\n                                                      Types.Abi {\n                                                        todo = \"Rust\"};\n                                                      c_variadic = false;\n                                                      inputs =\n                                                      [(Types.Ref\n                                                          ({ Types.kind =\n                                                             (Types.ReLateBound\n                                                                (\"0\",\n                                                                 { Types.kind =\n                                                                   (Types.BrNamed\n                                                                    ({ Types.index =\n                                                                    (2, 53660);\n                                                                    krate =\n                                                                    \"core\";\n                                                                    path =\n                                                                    [{ Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"ops\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"deref\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"Deref\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.ValueNs\n                                                                    \"deref\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.LifetimeNs\n                                                                    \"'_\");\n                                                                    disambiguator =\n                                                                    0 }] },\n                                                                    \"'_\"));\n                                                                   var = \"0\"\n                                                                   }))\n                                                             },\n                                                           Types.Adt {\n                                                             def_id =\n                                                             { Types.index =\n                                                               (5, 7255);\n                                                               krate =\n                                                               \"alloc\";\n                                                               path =\n                                                               [{ Types.data =\n                                                                  (Types.TypeNs\n                                                                    \"string\");\n                                                                  disambiguator =\n                                                                  0 };\n                                                                 { Types.data =\n                                                                   (Types.TypeNs\n                                                                    \"String\");\n                                                                   disambiguator =\n                                                                   0 }\n                                                                 ]\n                                                               };\n                                                             generic_args =\n                                                             []},\n                                                           false))\n                                                        ];\n                                                      output =\n                                                      (Types.Ref\n                                                         ({ Types.kind =\n                                                            (Types.ReLateBound\n                                                               (\"0\",\n                                                                { Types.kind =\n                                                                  (Types.BrNamed\n                                                                    ({ Types.index =\n                                                                    (2, 53660);\n                                                                    krate =\n                                                                    \"core\";\n                                                                    path =\n                                                                    [{ Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"ops\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"deref\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"Deref\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.ValueNs\n                                                                    \"deref\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.LifetimeNs\n                                                                    \"'_\");\n                                                                    disambiguator =\n                                                                    0 }] },\n                                                                    \"'_\"));\n                                                                  var = \"0\" }))\n                                                            },\n                                                          (Types.Alias\n                                                             (Types.Projection,\n                                                              { Types.def_id =\n                                                                { Types.index =\n                                                                  (2, 2896);\n                                                                  krate =\n                                                                  \"core\";\n                                                                  path =\n                                                                  [{ Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"ops\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"deref\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"Deref\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"Target\");\n                                                                    disambiguator =\n                                                                    0 }]\n                                                                  };\n                                                                substs =\n                                                                [(Types.Type\n                                                                    Types.Adt {\n                                                                    def_id =\n                                                                    { Types.index =\n                                                                    (5, 7255);\n                                                                    krate =\n                                                                    \"alloc\";\n                                                                    path =\n                                                                    [{ Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"string\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"String\");\n                                                                    disambiguator =\n                                                                    0 }] };\n                                                                    generic_args =\n                                                                    []})\n                                                                  ];\n                                                                trait_def_id =\n                                                                (Some (\n                                                                { Types.index =\n                                                                  (2, 2895);\n                                                                  krate =\n                                                                  \"core\";\n                                                                  path =\n                                                                  [{ Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"ops\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"deref\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"Deref\");\n                                                                    disambiguator =\n                                                                    0 }]\n                                                                  },\n                                                                { Types.args =\n                                                                  [];\n                                                                  impl =\n                                                                  Types.Concrete {\n                                                                    generics =\n                                                                    [];\n                                                                    id =\n                                                                    { Types.index =\n                                                                    (5, 5633);\n                                                                    krate =\n                                                                    \"alloc\";\n                                                                    path =\n                                                                    [{ Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"string\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    Types.Impl;\n                                                                    disambiguator =\n                                                                    38 }] }}\n                                                                  }))\n                                                                })),\n                                                          false));\n                                                      unsafety = Types.Normal\n                                                      }\n                                                    })};\n                                             hir_id = None;\n                                             span =\n                                             { Types.filename =\n                                               (Types.Real\n                                                  (Types.LocalPath\n                                                     \"src/tls13utils.rs\"));\n                                               hi =\n                                               { Types.col = \"39\";\n                                                 line = \"298\" };\n                                               lo =\n                                               { Types.col = \"24\";\n                                                 line = \"298\" }\n                                               };\n                                             ty =\n                                             (Types.Ref\n                                                ({ Types.kind =\n                                                   Types.ReErased },\n                                                 Types.Str, false))\n                                             }};\n                                         hir_id = None;\n                                         span =\n                                         { Types.filename =\n                                           (Types.Real\n                                              (Types.LocalPath\n                                                 \"src/tls13utils.rs\"));\n                                           hi =\n                                           { Types.col = \"39\"; line = \"298\" };\n                                           lo =\n                                           { Types.col = \"24\"; line = \"298\" }\n                                           };\n                                         ty = Types.Str };\n                                       borrow_kind = Types.Shared};\n                                     hir_id = (Some (\"706\", \"58\"));\n                                     span =\n                                     { Types.filename =\n                                       (Types.Real\n                                          (Types.LocalPath\n                                             \"src/tls13utils.rs\"));\n                                       hi =\n                                       { Types.col = \"39\"; line = \"298\" };\n                                       lo =\n                                       { Types.col = \"24\"; line = \"298\" } };\n                                     ty =\n                                     (Types.Ref\n                                        ({ Types.kind = Types.ReErased },\n                                         Types.Str, false))\n                                     };\n                                    { Types.attributes = [];\n                                      contents =\n                                      (Types.Adt\n                                         { Types.base = None;\n                                           fields =\n                                           [{ Types.field =\n                                              { Types.index = (2, 32813);\n                                                krate = \"core\";\n                                                path =\n                                                [{ Types.data =\n                                                   (Types.TypeNs \"ops\");\n                                                   disambiguator = 0 };\n                                                  { Types.data =\n                                                    (Types.TypeNs \"range\");\n                                                    disambiguator = 0 };\n                                                  { Types.data =\n                                                    (Types.TypeNs \"Range\");\n                                                    disambiguator = 0 };\n                                                  { Types.data =\n                                                    (Types.ValueNs \"start\");\n                                                    disambiguator = 0 }\n                                                  ]\n                                                };\n                                              value =\n                                              { Types.attributes = [];\n                                                contents =\n                                                Types.VarRef {\n                                                  id =\n                                                  { Types.id =\n                                                    { Types.local_id = \"52\";\n                                                      owner =\n                                                      { Types.index =\n                                                        (0, 706);\n                                                        krate = \"bertie\";\n                                                        path =\n                                                        [{ Types.data =\n                                                           (Types.TypeNs\n                                                              \"tls13utils\");\n                                                           disambiguator = 0\n                                                           };\n                                                          { Types.data =\n                                                            Types.Impl;\n                                                            disambiguator =\n                                                            18 };\n                                                          { Types.data =\n                                                            (Types.ValueNs\n                                                               \"from_hex\");\n                                                            disambiguator = 0\n                                                            }\n                                                          ]\n                                                        }\n                                                      };\n                                                    name = \"i\" }};\n                                                hir_id = (Some (\"706\", \"61\"));\n                                                span =\n                                                { Types.filename =\n                                                  (Types.Real\n                                                     (Types.LocalPath\n                                                        \"src/tls13utils.rs\"));\n                                                  hi =\n                                                  { Types.col = \"31\";\n                                                    line = \"298\" };\n                                                  lo =\n                                                  { Types.col = \"30\";\n                                                    line = \"298\" }\n                                                  };\n                                                ty = (Types.Uint Types.Usize)\n                                                }\n                                              };\n                                             { Types.field =\n                                               { Types.index = (2, 32814);\n                                                 krate = \"core\";\n                                                 path =\n                                                 [{ Types.data =\n                                                    (Types.TypeNs \"ops\");\n                                                    disambiguator = 0 };\n                                                   { Types.data =\n                                                     (Types.TypeNs \"range\");\n                                                     disambiguator = 0 };\n                                                   { Types.data =\n                                                     (Types.TypeNs \"Range\");\n                                                     disambiguator = 0 };\n                                                   { Types.data =\n                                                     (Types.ValueNs \"end\");\n                                                     disambiguator = 0 }\n                                                   ]\n                                                 };\n                                               value =\n                                               { Types.attributes = [];\n                                                 contents =\n                                                 Types.Binary {\n                                                   lhs =\n                                                   { Types.attributes = [];\n                                                     contents =\n                                                     Types.VarRef {\n                                                       id =\n                                                       { Types.id =\n                                                         { Types.local_id =\n                                                           \"52\";\n                                                           owner =\n                                                           { Types.index =\n                                                             (0, 706);\n                                                             krate = \"bertie\";\n                                                             path =\n                                                             [{ Types.data =\n                                                                (Types.TypeNs\n                                                                   \"tls13utils\");\n                                                                disambiguator =\n                                                                0 };\n                                                               { Types.data =\n                                                                 Types.Impl;\n                                                                 disambiguator =\n                                                                 18 };\n                                                               { Types.data =\n                                                                 (Types.ValueNs\n                                                                    \"from_hex\");\n                                                                 disambiguator =\n                                                                 0 }\n                                                               ]\n                                                             }\n                                                           };\n                                                         name = \"i\" }};\n                                                     hir_id =\n                                                     (Some (\"706\", \"65\"));\n                                                     span =\n                                                     { Types.filename =\n                                                       (Types.Real\n                                                          (Types.LocalPath\n                                                             \"src/tls13utils.rs\"));\n                                                       hi =\n                                                       { Types.col = \"34\";\n                                                         line = \"298\" };\n                                                       lo =\n                                                       { Types.col = \"33\";\n                                                         line = \"298\" }\n                                                       };\n                                                     ty =\n                                                     (Types.Uint Types.Usize)\n                                                     };\n                                                   op = Types.Add;\n                                                   rhs =\n                                                   { Types.attributes = [];\n                                                     contents =\n                                                     Types.Literal {\n                                                       lit =\n                                                       { Types.node =\n                                                         (Types.Int\n                                                            (\"2\",\n                                                             Types.Unsuffixed));\n                                                         span =\n                                                         { Types.filename =\n                                                           (Types.Real\n                                                              (Types.LocalPath\n                                                                 \"src/tls13utils.rs\"));\n                                                           hi =\n                                                           { Types.col = \"38\";\n                                                             line = \"298\" };\n                                                           lo =\n                                                           { Types.col = \"37\";\n                                                             line = \"298\" }\n                                                           }\n                                                         };\n                                                       neg = false};\n                                                     hir_id =\n                                                     (Some (\"706\", \"67\"));\n                                                     span =\n                                                     { Types.filename =\n                                                       (Types.Real\n                                                          (Types.LocalPath\n                                                             \"src/tls13utils.rs\"));\n                                                       hi =\n                                                       { Types.col = \"38\";\n                                                         line = \"298\" };\n                                                       lo =\n                                                       { Types.col = \"37\";\n                                                         line = \"298\" }\n                                                       };\n                                                     ty =\n                                                     (Types.Uint Types.Usize)\n                                                     }};\n                                                 hir_id =\n                                                 (Some (\"706\", \"64\"));\n                                                 span =\n                                                 { Types.filename =\n                                                   (Types.Real\n                                                      (Types.LocalPath\n                                                         \"src/tls13utils.rs\"));\n                                                   hi =\n                                                   { Types.col = \"38\";\n                                                     line = \"298\" };\n                                                   lo =\n                                                   { Types.col = \"33\";\n                                                     line = \"298\" }\n                                                   };\n                                                 ty =\n                                                 (Types.Uint Types.Usize) }\n                                               }\n                                             ];\n                                           info =\n                                           { Types.typ =\n                                             { Types.index = (2, 32811);\n                                               krate = \"core\";\n                                               path =\n                                               [{ Types.data =\n                                                  (Types.TypeNs \"ops\");\n                                                  disambiguator = 0 };\n                                                 { Types.data =\n                                                   (Types.TypeNs \"range\");\n                                                   disambiguator = 0 };\n                                                 { Types.data =\n                                                   (Types.TypeNs \"Range\");\n                                                   disambiguator = 0 }\n                                                 ]\n                                               };\n                                             typ_is_record = true;\n                                             typ_is_struct = true;\n                                             type_namespace =\n                                             { Types.index = (2, 32811);\n                                               krate = \"core\";\n                                               path =\n                                               [{ Types.data =\n                                                  (Types.TypeNs \"ops\");\n                                                  disambiguator = 0 };\n                                                 { Types.data =\n                                                   (Types.TypeNs \"range\");\n                                                   disambiguator = 0 }\n                                                 ]\n                                               };\n                                             variant =\n                                             { Types.index = (2, 32811);\n                                               krate = \"core\";\n                                               path =\n                                               [{ Types.data =\n                                                  (Types.TypeNs \"ops\");\n                                                  disambiguator = 0 };\n                                                 { Types.data =\n                                                   (Types.TypeNs \"range\");\n                                                   disambiguator = 0 };\n                                                 { Types.data =\n                                                   (Types.TypeNs \"Range\");\n                                                   disambiguator = 0 }\n                                                 ]\n                                               };\n                                             variant_index = \"0\";\n                                             variant_is_record = true };\n                                           user_ty = None });\n                                      hir_id = (Some (\"706\", \"60\"));\n                                      span =\n                                      { Types.filename =\n                                        (Types.Real\n                                           (Types.LocalPath\n                                              \"src/tls13utils.rs\"));\n                                        hi =\n                                        { Types.col = \"38\"; line = \"298\" };\n                                        lo =\n                                        { Types.col = \"30\"; line = \"298\" } };\n                                      ty =\n                                      Types.Adt {\n                                        def_id =\n                                        { Types.index = (2, 32811);\n                                          krate = \"core\";\n                                          path =\n                                          [{ Types.data =\n                                             (Types.TypeNs \"ops\");\n                                             disambiguator = 0 };\n                                            { Types.data =\n                                              (Types.TypeNs \"range\");\n                                              disambiguator = 0 };\n                                            { Types.data =\n                                              (Types.TypeNs \"Range\");\n                                              disambiguator = 0 }\n                                            ]\n                                          };\n                                        generic_args =\n                                        [(Types.Type (Types.Uint Types.Usize))\n                                          ]}\n                                      }\n                                    ];\n                                  fn_span =\n                                  { Types.filename =\n                                    (Types.Real\n                                       (Types.LocalPath \"src/tls13utils.rs\"));\n                                    hi = { Types.col = \"39\"; line = \"298\" };\n                                    lo = { Types.col = \"26\"; line = \"298\" } };\n                                  from_hir_call = true;\n                                  fun' =\n                                  { Types.attributes = [];\n                                    contents =\n                                    Types.GlobalName {\n                                      id =\n                                      { Types.index = (2, 12015);\n                                        krate = \"core\";\n                                        path =\n                                        [{ Types.data = (Types.TypeNs \"str\");\n                                           disambiguator = 0 };\n                                          { Types.data = Types.Impl;\n                                            disambiguator = 0 };\n                                          { Types.data =\n                                            (Types.ValueNs \"get\");\n                                            disambiguator = 0 }\n                                          ]\n                                        }};\n                                    hir_id = None;\n                                    span =\n                                    { Types.filename =\n                                      (Types.Real\n                                         (Types.LocalPath \"src/tls13utils.rs\"));\n                                      hi = { Types.col = \"29\"; line = \"298\" };\n                                      lo = { Types.col = \"26\"; line = \"298\" }\n                                      };\n                                    ty =\n                                    (Types.Arrow\n                                       { Types.bound_vars =\n                                         [(Types.Region\n                                             (Types.BrNamed\n                                                ({ Types.index = (2, 56858);\n                                                   krate = \"core\";\n                                                   path =\n                                                   [{ Types.data =\n                                                      (Types.TypeNs \"str\");\n                                                      disambiguator = 0 };\n                                                     { Types.data =\n                                                       Types.Impl;\n                                                       disambiguator = 0 };\n                                                     { Types.data =\n                                                       (Types.ValueNs \"get\");\n                                                       disambiguator = 0 };\n                                                     { Types.data =\n                                                       (Types.LifetimeNs \"'_\");\n                                                       disambiguator = 0 }\n                                                     ]\n                                                   },\n                                                 \"'_\")))\n                                           ];\n                                         value =\n                                         { Types.abi =\n                                           Types.Abi {todo = \"Rust\"};\n                                           c_variadic = false;\n                                           inputs =\n                                           [(Types.Ref\n                                               ({ Types.kind =\n                                                  (Types.ReLateBound\n                                                     (\"0\",\n                                                      { Types.kind =\n                                                        (Types.BrNamed\n                                                           ({ Types.index =\n                                                              (2, 56858);\n                                                              krate = \"core\";\n                                                              path =\n                                                              [{ Types.data =\n                                                                 (Types.TypeNs\n                                                                    \"str\");\n                                                                 disambiguator =\n                                                                 0 };\n                                                                { Types.data =\n                                                                  Types.Impl;\n                                                                  disambiguator =\n                                                                  0 };\n                                                                { Types.data =\n                                                                  (Types.ValueNs\n                                                                    \"get\");\n                                                                  disambiguator =\n                                                                  0 };\n                                                                { Types.data =\n                                                                  (Types.LifetimeNs\n                                                                    \"'_\");\n                                                                  disambiguator =\n                                                                  0 }\n                                                                ]\n                                                              },\n                                                            \"'_\"));\n                                                        var = \"0\" }))\n                                                  },\n                                                Types.Str, false));\n                                             Types.Adt {\n                                               def_id =\n                                               { Types.index = (2, 32811);\n                                                 krate = \"core\";\n                                                 path =\n                                                 [{ Types.data =\n                                                    (Types.TypeNs \"ops\");\n                                                    disambiguator = 0 };\n                                                   { Types.data =\n                                                     (Types.TypeNs \"range\");\n                                                     disambiguator = 0 };\n                                                   { Types.data =\n                                                     (Types.TypeNs \"Range\");\n                                                     disambiguator = 0 }\n                                                   ]\n                                                 };\n                                               generic_args =\n                                               [(Types.Type\n                                                   (Types.Uint Types.Usize))\n                                                 ]}\n                                             ];\n                                           output =\n                                           Types.Adt {\n                                             def_id =\n                                             { Types.index = (2, 35003);\n                                               krate = \"core\";\n                                               path =\n                                               [{ Types.data =\n                                                  (Types.TypeNs \"option\");\n                                                  disambiguator = 0 };\n                                                 { Types.data =\n                                                   (Types.TypeNs \"Option\");\n                                                   disambiguator = 0 }\n                                                 ]\n                                               };\n                                             generic_args =\n                                             [(Types.Type\n                                                 (Types.Ref\n                                                    ({ Types.kind =\n                                                       (Types.ReLateBound\n                                                          (\"0\",\n                                                           { Types.kind =\n                                                             (Types.BrNamed\n                                                                ({ Types.index =\n                                                                   (2, 56858);\n                                                                   krate =\n                                                                   \"core\";\n                                                                   path =\n                                                                   [{ Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"str\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    Types.Impl;\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.ValueNs\n                                                                    \"get\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.LifetimeNs\n                                                                    \"'_\");\n                                                                    disambiguator =\n                                                                    0 }]\n                                                                   },\n                                                                 \"'_\"));\n                                                             var = \"0\" }))\n                                                       },\n                                                     (Types.Alias\n                                                        (Types.Projection,\n                                                         { Types.def_id =\n                                                           { Types.index =\n                                                             (2, 9821);\n                                                             krate = \"core\";\n                                                             path =\n                                                             [{ Types.data =\n                                                                (Types.TypeNs\n                                                                   \"slice\");\n                                                                disambiguator =\n                                                                0 };\n                                                               { Types.data =\n                                                                 (Types.TypeNs\n                                                                    \"index\");\n                                                                 disambiguator =\n                                                                 0 };\n                                                               { Types.data =\n                                                                 (Types.TypeNs\n                                                                    \"SliceIndex\");\n                                                                 disambiguator =\n                                                                 0 };\n                                                               { Types.data =\n                                                                 (Types.TypeNs\n                                                                    \"Output\");\n                                                                 disambiguator =\n                                                                 0 }\n                                                               ]\n                                                             };\n                                                           substs =\n                                                           [(Types.Type\n                                                               Types.Adt {\n                                                                 def_id =\n                                                                 { Types.index =\n                                                                   (2, 32811);\n                                                                   krate =\n                                                                   \"core\";\n                                                                   path =\n                                                                   [{ Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"ops\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"range\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"Range\");\n                                                                    disambiguator =\n                                                                    0 }]\n                                                                   };\n                                                                 generic_args =\n                                                                 [(Types.Type\n                                                                    (Types.Uint\n                                                                    Types.Usize))\n                                                                   ]});\n                                                             (Types.Type\n                                                                Types.Str)\n                                                             ];\n                                                           trait_def_id =\n                                                           (Some ({ Types.index =\n                                                                    (\n                                                                    2, 9819);\n                                                                    krate =\n                                                                    \"core\";\n                                                                    path =\n                                                                    [{ Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"slice\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"index\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"SliceIndex\");\n                                                                    disambiguator =\n                                                                    0 }] },\n                                                                  { Types.args =\n                                                                    [];\n                                                                    impl =\n                                                                    Types.Concrete {\n                                                                    generics =\n                                                                    [];\n                                                                    id =\n                                                                    { Types.index =\n                                                                    (2, 11638);\n                                                                    krate =\n                                                                    \"core\";\n                                                                    path =\n                                                                    [{ Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"str\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"traits\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    Types.Impl;\n                                                                    disambiguator =\n                                                                    7 }] }} }))\n                                                           })),\n                                                     false)))\n                                               ]};\n                                           unsafety = Types.Normal }\n                                         })\n                                    };\n                                  generic_args =\n                                  [(Types.Type\n                                      Types.Adt {\n                                        def_id =\n                                        { Types.index = (2, 32811);\n                                          krate = \"core\";\n                                          path =\n                                          [{ Types.data =\n                                             (Types.TypeNs \"ops\");\n                                             disambiguator = 0 };\n                                            { Types.data =\n                                              (Types.TypeNs \"range\");\n                                              disambiguator = 0 };\n                                            { Types.data =\n                                              (Types.TypeNs \"Range\");\n                                              disambiguator = 0 }\n                                            ]\n                                          };\n                                        generic_args =\n                                        [(Types.Type (Types.Uint Types.Usize))\n                                          ]})\n                                    ];\n                                  impl = None;\n                                  ty =\n                                  (Types.Arrow\n                                     { Types.bound_vars =\n                                       [(Types.Region\n                                           (Types.BrNamed\n                                              ({ Types.index = (2, 56858);\n                                                 krate = \"core\";\n                                                 path =\n                                                 [{ Types.data =\n                                                    (Types.TypeNs \"str\");\n                                                    disambiguator = 0 };\n                                                   { Types.data = Types.Impl;\n                                                     disambiguator = 0 };\n                                                   { Types.data =\n                                                     (Types.ValueNs \"get\");\n                                                     disambiguator = 0 };\n                                                   { Types.data =\n                                                     (Types.LifetimeNs \"'_\");\n                                                     disambiguator = 0 }\n                                                   ]\n                                                 },\n                                               \"'_\")))\n                                         ];\n                                       value =\n                                       { Types.abi =\n                                         Types.Abi {todo = \"Rust\"};\n                                         c_variadic = false;\n                                         inputs =\n                                         [(Types.Ref\n                                             ({ Types.kind =\n                                                (Types.ReLateBound\n                                                   (\"0\",\n                                                    { Types.kind =\n                                                      (Types.BrNamed\n                                                         ({ Types.index =\n                                                            (2, 56858);\n                                                            krate = \"core\";\n                                                            path =\n                                                            [{ Types.data =\n                                                               (Types.TypeNs\n                                                                  \"str\");\n                                                               disambiguator =\n                                                               0 };\n                                                              { Types.data =\n                                                                Types.Impl;\n                                                                disambiguator =\n                                                                0 };\n                                                              { Types.data =\n                                                                (Types.ValueNs\n                                                                   \"get\");\n                                                                disambiguator =\n                                                                0 };\n                                                              { Types.data =\n                                                                (Types.LifetimeNs\n                                                                   \"'_\");\n                                                                disambiguator =\n                                                                0 }\n                                                              ]\n                                                            },\n                                                          \"'_\"));\n                                                      var = \"0\" }))\n                                                },\n                                              Types.Str, false));\n                                           Types.Adt {\n                                             def_id =\n                                             { Types.index = (2, 32811);\n                                               krate = \"core\";\n                                               path =\n                                               [{ Types.data =\n                                                  (Types.TypeNs \"ops\");\n                                                  disambiguator = 0 };\n                                                 { Types.data =\n                                                   (Types.TypeNs \"range\");\n                                                   disambiguator = 0 };\n                                                 { Types.data =\n                                                   (Types.TypeNs \"Range\");\n                                                   disambiguator = 0 }\n                                                 ]\n                                               };\n                                             generic_args =\n                                             [(Types.Type\n                                                 (Types.Uint Types.Usize))\n                                               ]}\n                                           ];\n                                         output =\n                                         Types.Adt {\n                                           def_id =\n                                           { Types.index = (2, 35003);\n                                             krate = \"core\";\n                                             path =\n                                             [{ Types.data =\n                                                (Types.TypeNs \"option\");\n                                                disambiguator = 0 };\n                                               { Types.data =\n                                                 (Types.TypeNs \"Option\");\n                                                 disambiguator = 0 }\n                                               ]\n                                             };\n                                           generic_args =\n                                           [(Types.Type\n                                               (Types.Ref\n                                                  ({ Types.kind =\n                                                     (Types.ReLateBound\n                                                        (\"0\",\n                                                         { Types.kind =\n                                                           (Types.BrNamed\n                                                              ({ Types.index =\n                                                                 (2, 56858);\n                                                                 krate =\n                                                                 \"core\";\n                                                                 path =\n                                                                 [{ Types.data =\n                                                                    (\n                                                                    Types.TypeNs\n                                                                    \"str\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                   { Types.data =\n                                                                    Types.Impl;\n                                                                    disambiguator =\n                                                                    0 };\n                                                                   { Types.data =\n                                                                    (Types.ValueNs\n                                                                    \"get\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                   { Types.data =\n                                                                    (Types.LifetimeNs\n                                                                    \"'_\");\n                                                                    disambiguator =\n                                                                    0 }\n                                                                   ]\n                                                                 },\n                                                               \"'_\"));\n                                                           var = \"0\" }))\n                                                     },\n                                                   (Types.Alias\n                                                      (Types.Projection,\n                                                       { Types.def_id =\n                                                         { Types.index =\n                                                           (2, 9821);\n                                                           krate = \"core\";\n                                                           path =\n                                                           [{ Types.data =\n                                                              (Types.TypeNs\n                                                                 \"slice\");\n                                                              disambiguator =\n                                                              0 };\n                                                             { Types.data =\n                                                               (Types.TypeNs\n                                                                  \"index\");\n                                                               disambiguator =\n                                                               0 };\n                                                             { Types.data =\n                                                               (Types.TypeNs\n                                                                  \"SliceIndex\");\n                                                               disambiguator =\n                                                               0 };\n                                                             { Types.data =\n                                                               (Types.TypeNs\n                                                                  \"Output\");\n                                                               disambiguator =\n                                                               0 }\n                                                             ]\n                                                           };\n                                                         substs =\n                                                         [(Types.Type\n                                                             Types.Adt {\n                                                               def_id =\n                                                               { Types.index =\n                                                                 (2, 32811);\n                                                                 krate =\n                                                                 \"core\";\n                                                                 path =\n                                                                 [{ Types.data =\n                                                                    (\n                                                                    Types.TypeNs\n                                                                    \"ops\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                   { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"range\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                   { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"Range\");\n                                                                    disambiguator =\n                                                                    0 }\n                                                                   ]\n                                                                 };\n                                                               generic_args =\n                                                               [(Types.Type\n                                                                   (Types.Uint\n                                                                    Types.Usize))\n                                                                 ]});\n                                                           (Types.Type\n                                                              Types.Str)\n                                                           ];\n                                                         trait_def_id =\n                                                         (Some ({ Types.index =\n                                                                  (2, 9819);\n                                                                  krate =\n                                                                  \"core\";\n                                                                  path =\n                                                                  [{ Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"slice\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"index\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"SliceIndex\");\n                                                                    disambiguator =\n                                                                    0 }]\n                                                                  },\n                                                                { Types.args =\n                                                                  [];\n                                                                  impl =\n                                                                  Types.Concrete {\n                                                                    generics =\n                                                                    [];\n                                                                    id =\n                                                                    { Types.index =\n                                                                    (2, 11638);\n                                                                    krate =\n                                                                    \"core\";\n                                                                    path =\n                                                                    [{ Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"str\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"traits\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    Types.Impl;\n                                                                    disambiguator =\n                                                                    7 }] }}\n                                                                  }))\n                                                         })),\n                                                   false)))\n                                             ]};\n                                         unsafety = Types.Normal }\n                                       })};\n                                hir_id = (Some (\"706\", \"56\"));\n                                span =\n                                { Types.filename =\n                                  (Types.Real\n                                     (Types.LocalPath \"src/tls13utils.rs\"));\n                                  hi = { Types.col = \"39\"; line = \"298\" };\n                                  lo = { Types.col = \"24\"; line = \"298\" } };\n                                ty =\n                                Types.Adt {\n                                  def_id =\n                                  { Types.index = (2, 35003); krate = \"core\";\n                                    path =\n                                    [{ Types.data = (Types.TypeNs \"option\");\n                                       disambiguator = 0 };\n                                      { Types.data = (Types.TypeNs \"Option\");\n                                        disambiguator = 0 }\n                                      ]\n                                    };\n                                  generic_args =\n                                  [(Types.Type\n                                      (Types.Ref\n                                         ({ Types.kind = Types.ReErased },\n                                          Types.Str, false)))\n                                    ]}\n                                };\n                               { Types.attributes = [];\n                                 contents =\n                                 Types.Closure {\n                                   body =\n                                   { Types.attributes = [];\n                                     contents =\n                                     Types.Call {\n                                       args =\n                                       [{ Types.attributes = [];\n                                          contents =\n                                          Types.Call {\n                                            args =\n                                            [{ Types.attributes = [];\n                                               contents =\n                                               Types.Call {\n                                                 args =\n                                                 [{ Types.attributes = [];\n                                                    contents =\n                                                    Types.Borrow {\n                                                      arg =\n                                                      { Types.attributes = [];\n                                                        contents =\n                                                        Types.Deref {\n                                                          arg =\n                                                          { Types.attributes =\n                                                            [];\n                                                            contents =\n                                                            Types.VarRef {\n                                                              id =\n                                                              { Types.id =\n                                                                { Types.local_id =\n                                                                  \"71\";\n                                                                  owner =\n                                                                  { Types.index =\n                                                                    (\n                                                                    0, 706);\n                                                                    krate =\n                                                                    \"bertie\";\n                                                                    path =\n                                                                    [{ Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"tls13utils\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    Types.Impl;\n                                                                    disambiguator =\n                                                                    18 };\n                                                                    { Types.data =\n                                                                    (Types.ValueNs\n                                                                    \"from_hex\");\n                                                                    disambiguator =\n                                                                    0 }] }\n                                                                  };\n                                                                name = \"sub\"\n                                                                }};\n                                                            hir_id = None;\n                                                            span =\n                                                            { Types.filename =\n                                                              (Types.Real\n                                                                 (Types.LocalPath\n                                                                    \"src/tls13utils.rs\"));\n                                                              hi =\n                                                              { Types.col =\n                                                                \"67\";\n                                                                line = \"299\"\n                                                                };\n                                                              lo =\n                                                              { Types.col =\n                                                                \"64\";\n                                                                line = \"299\"\n                                                                }\n                                                              };\n                                                            ty =\n                                                            (Types.Ref\n                                                               ({ Types.kind =\n                                                                  Types.ReErased\n                                                                  },\n                                                                Types.Str,\n                                                                false))\n                                                            }};\n                                                        hir_id = None;\n                                                        span =\n                                                        { Types.filename =\n                                                          (Types.Real\n                                                             (Types.LocalPath\n                                                                \"src/tls13utils.rs\"));\n                                                          hi =\n                                                          { Types.col = \"67\";\n                                                            line = \"299\" };\n                                                          lo =\n                                                          { Types.col = \"64\";\n                                                            line = \"299\" }\n                                                          };\n                                                        ty = Types.Str };\n                                                      borrow_kind =\n                                                      Types.Shared};\n                                                    hir_id =\n                                                    (Some (\"706\", \"81\"));\n                                                    span =\n                                                    { Types.filename =\n                                                      (Types.Real\n                                                         (Types.LocalPath\n                                                            \"src/tls13utils.rs\"));\n                                                      hi =\n                                                      { Types.col = \"67\";\n                                                        line = \"299\" };\n                                                      lo =\n                                                      { Types.col = \"64\";\n                                                        line = \"299\" }\n                                                      };\n                                                    ty =\n                                                    (Types.Ref\n                                                       ({ Types.kind =\n                                                          Types.ReErased },\n                                                        Types.Str, false))\n                                                    };\n                                                   { Types.attributes = [];\n                                                     contents =\n                                                     Types.Literal {\n                                                       lit =\n                                                       { Types.node =\n                                                         (Types.Int\n                                                            (\"16\",\n                                                             Types.Unsuffixed));\n                                                         span =\n                                                         { Types.filename =\n                                                           (Types.Real\n                                                              (Types.LocalPath\n                                                                 \"src/tls13utils.rs\"));\n                                                           hi =\n                                                           { Types.col = \"71\";\n                                                             line = \"299\" };\n                                                           lo =\n                                                           { Types.col = \"69\";\n                                                             line = \"299\" }\n                                                           }\n                                                         };\n                                                       neg = false};\n                                                     hir_id =\n                                                     (Some (\"706\", \"83\"));\n                                                     span =\n                                                     { Types.filename =\n                                                       (Types.Real\n                                                          (Types.LocalPath\n                                                             \"src/tls13utils.rs\"));\n                                                       hi =\n                                                       { Types.col = \"71\";\n                                                         line = \"299\" };\n                                                       lo =\n                                                       { Types.col = \"69\";\n                                                         line = \"299\" }\n                                                       };\n                                                     ty =\n                                                     (Types.Uint Types.U32) }\n                                                   ];\n                                                 fn_span =\n                                                 { Types.filename =\n                                                   (Types.Real\n                                                      (Types.LocalPath\n                                                         \"src/tls13utils.rs\"));\n                                                   hi =\n                                                   { Types.col = \"72\";\n                                                     line = \"299\" };\n                                                   lo =\n                                                   { Types.col = \"45\";\n                                                     line = \"299\" }\n                                                   };\n                                                 from_hir_call = true;\n                                                 fun' =\n                                                 { Types.attributes = [];\n                                                   contents =\n                                                   Types.GlobalName {\n                                                     id =\n                                                     { Types.index =\n                                                       (2, 23048);\n                                                       krate = \"core\";\n                                                       path =\n                                                       [{ Types.data =\n                                                          (Types.TypeNs \"num\");\n                                                          disambiguator = 0 };\n                                                         { Types.data =\n                                                           Types.Impl;\n                                                           disambiguator = 6\n                                                           };\n                                                         { Types.data =\n                                                           (Types.ValueNs\n                                                              \"from_str_radix\");\n                                                           disambiguator = 0\n                                                           }\n                                                         ]\n                                                       }};\n                                                   hir_id = None;\n                                                   span =\n                                                   { Types.filename =\n                                                     (Types.Real\n                                                        (Types.LocalPath\n                                                           \"src/tls13utils.rs\"));\n                                                     hi =\n                                                     { Types.col = \"63\";\n                                                       line = \"299\" };\n                                                     lo =\n                                                     { Types.col = \"45\";\n                                                       line = \"299\" }\n                                                     };\n                                                   ty =\n                                                   (Types.Arrow\n                                                      { Types.bound_vars =\n                                                        [(Types.Region\n                                                            (Types.BrNamed\n                                                               ({ Types.index =\n                                                                  (2, 60889);\n                                                                  krate =\n                                                                  \"core\";\n                                                                  path =\n                                                                  [{ Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"num\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    Types.Impl;\n                                                                    disambiguator =\n                                                                    6 };\n                                                                    { Types.data =\n                                                                    (Types.ValueNs\n                                                                    \"from_str_radix\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.LifetimeNs\n                                                                    \"'_\");\n                                                                    disambiguator =\n                                                                    0 }]\n                                                                  },\n                                                                \"'_\")))\n                                                          ];\n                                                        value =\n                                                        { Types.abi =\n                                                          Types.Abi {\n                                                            todo = \"Rust\"};\n                                                          c_variadic = false;\n                                                          inputs =\n                                                          [(Types.Ref\n                                                              ({ Types.kind =\n                                                                 (Types.ReLateBound\n                                                                    (\n                                                                    \"0\",\n                                                                    { Types.kind =\n                                                                    (Types.BrNamed\n                                                                    ({ Types.index =\n                                                                    (2, 60889);\n                                                                    krate =\n                                                                    \"core\";\n                                                                    path =\n                                                                    [{ Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"num\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    Types.Impl;\n                                                                    disambiguator =\n                                                                    6 };\n                                                                    { Types.data =\n                                                                    (Types.ValueNs\n                                                                    \"from_str_radix\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.LifetimeNs\n                                                                    \"'_\");\n                                                                    disambiguator =\n                                                                    0 }] },\n                                                                    \"'_\"));\n                                                                    var = \"0\"\n                                                                    }))\n                                                                 },\n                                                               Types.Str,\n                                                               false));\n                                                            (Types.Uint\n                                                               Types.U32)\n                                                            ];\n                                                          output =\n                                                          Types.Adt {\n                                                            def_id =\n                                                            { Types.index =\n                                                              (2, 35147);\n                                                              krate = \"core\";\n                                                              path =\n                                                              [{ Types.data =\n                                                                 (Types.TypeNs\n                                                                    \"result\");\n                                                                 disambiguator =\n                                                                 0 };\n                                                                { Types.data =\n                                                                  (Types.TypeNs\n                                                                    \"Result\");\n                                                                  disambiguator =\n                                                                  0 }\n                                                                ]\n                                                              };\n                                                            generic_args =\n                                                            [(Types.Type\n                                                                (Types.Uint\n                                                                   Types.U8));\n                                                              (Types.Type\n                                                                 Types.Adt {\n                                                                   def_id =\n                                                                   { Types.index =\n                                                                    (2, 15610);\n                                                                    krate =\n                                                                    \"core\";\n                                                                    path =\n                                                                    [{ Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"num\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"error\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"ParseIntError\");\n                                                                    disambiguator =\n                                                                    0 }] };\n                                                                   generic_args =\n                                                                   []})\n                                                              ]};\n                                                          unsafety =\n                                                          Types.Normal }\n                                                        })\n                                                   };\n                                                 generic_args = [];\n                                                 impl = None;\n                                                 ty =\n                                                 (Types.Arrow\n                                                    { Types.bound_vars =\n                                                      [(Types.Region\n                                                          (Types.BrNamed\n                                                             ({ Types.index =\n                                                                (2, 60889);\n                                                                krate =\n                                                                \"core\";\n                                                                path =\n                                                                [{ Types.data =\n                                                                   (Types.TypeNs\n                                                                    \"num\");\n                                                                   disambiguator =\n                                                                   0 };\n                                                                  { Types.data =\n                                                                    Types.Impl;\n                                                                    disambiguator =\n                                                                    6 };\n                                                                  { Types.data =\n                                                                    (\n                                                                    Types.ValueNs\n                                                                    \"from_str_radix\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                  { Types.data =\n                                                                    (\n                                                                    Types.LifetimeNs\n                                                                    \"'_\");\n                                                                    disambiguator =\n                                                                    0 }\n                                                                  ]\n                                                                },\n                                                              \"'_\")))\n                                                        ];\n                                                      value =\n                                                      { Types.abi =\n                                                        Types.Abi {\n                                                          todo = \"Rust\"};\n                                                        c_variadic = false;\n                                                        inputs =\n                                                        [(Types.Ref\n                                                            ({ Types.kind =\n                                                               (Types.ReLateBound\n                                                                  (\"0\",\n                                                                   { Types.kind =\n                                                                    (Types.BrNamed\n                                                                    ({ Types.index =\n                                                                    (2, 60889);\n                                                                    krate =\n                                                                    \"core\";\n                                                                    path =\n                                                                    [{ Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"num\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    Types.Impl;\n                                                                    disambiguator =\n                                                                    6 };\n                                                                    { Types.data =\n                                                                    (Types.ValueNs\n                                                                    \"from_str_radix\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.LifetimeNs\n                                                                    \"'_\");\n                                                                    disambiguator =\n                                                                    0 }] },\n                                                                    \"'_\"));\n                                                                    var = \"0\"\n                                                                    }))\n                                                               },\n                                                             Types.Str, false));\n                                                          (Types.Uint\n                                                             Types.U32)\n                                                          ];\n                                                        output =\n                                                        Types.Adt {\n                                                          def_id =\n                                                          { Types.index =\n                                                            (2, 35147);\n                                                            krate = \"core\";\n                                                            path =\n                                                            [{ Types.data =\n                                                               (Types.TypeNs\n                                                                  \"result\");\n                                                               disambiguator =\n                                                               0 };\n                                                              { Types.data =\n                                                                (Types.TypeNs\n                                                                   \"Result\");\n                                                                disambiguator =\n                                                                0 }\n                                                              ]\n                                                            };\n                                                          generic_args =\n                                                          [(Types.Type\n                                                              (Types.Uint\n                                                                 Types.U8));\n                                                            (Types.Type\n                                                               Types.Adt {\n                                                                 def_id =\n                                                                 { Types.index =\n                                                                   (2, 15610);\n                                                                   krate =\n                                                                   \"core\";\n                                                                   path =\n                                                                   [{ Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"num\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"error\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"ParseIntError\");\n                                                                    disambiguator =\n                                                                    0 }]\n                                                                   };\n                                                                 generic_args =\n                                                                 []})\n                                                            ]};\n                                                        unsafety =\n                                                        Types.Normal }\n                                                      })};\n                                               hir_id = (Some (\"706\", \"76\"));\n                                               span =\n                                               { Types.filename =\n                                                 (Types.Real\n                                                    (Types.LocalPath\n                                                       \"src/tls13utils.rs\"));\n                                                 hi =\n                                                 { Types.col = \"72\";\n                                                   line = \"299\" };\n                                                 lo =\n                                                 { Types.col = \"45\";\n                                                   line = \"299\" }\n                                                 };\n                                               ty =\n                                               Types.Adt {\n                                                 def_id =\n                                                 { Types.index = (2, 35147);\n                                                   krate = \"core\";\n                                                   path =\n                                                   [{ Types.data =\n                                                      (Types.TypeNs \"result\");\n                                                      disambiguator = 0 };\n                                                     { Types.data =\n                                                       (Types.TypeNs \"Result\");\n                                                       disambiguator = 0 }\n                                                     ]\n                                                   };\n                                                 generic_args =\n                                                 [(Types.Type\n                                                     (Types.Uint Types.U8));\n                                                   (Types.Type\n                                                      Types.Adt {\n                                                        def_id =\n                                                        { Types.index =\n                                                          (2, 15610);\n                                                          krate = \"core\";\n                                                          path =\n                                                          [{ Types.data =\n                                                             (Types.TypeNs\n                                                                \"num\");\n                                                             disambiguator =\n                                                             0 };\n                                                            { Types.data =\n                                                              (Types.TypeNs\n                                                                 \"error\");\n                                                              disambiguator =\n                                                              0 };\n                                                            { Types.data =\n                                                              (Types.TypeNs\n                                                                 \"ParseIntError\");\n                                                              disambiguator =\n                                                              0 }\n                                                            ]\n                                                          };\n                                                        generic_args = []})\n                                                   ]}\n                                               }\n                                              ];\n                                            fn_span =\n                                            { Types.filename =\n                                              (Types.Real\n                                                 (Types.LocalPath\n                                                    \"src/tls13utils.rs\"));\n                                              hi =\n                                              { Types.col = \"77\";\n                                                line = \"299\" };\n                                              lo =\n                                              { Types.col = \"73\";\n                                                line = \"299\" }\n                                              };\n                                            from_hir_call = true;\n                                            fun' =\n                                            { Types.attributes = [];\n                                              contents =\n                                              Types.GlobalName {\n                                                id =\n                                                { Types.index = (2, 8495);\n                                                  krate = \"core\";\n                                                  path =\n                                                  [{ Types.data =\n                                                     (Types.TypeNs \"result\");\n                                                     disambiguator = 0 };\n                                                    { Types.data = Types.Impl;\n                                                      disambiguator = 0 };\n                                                    { Types.data =\n                                                      (Types.ValueNs \"ok\");\n                                                      disambiguator = 0 }\n                                                    ]\n                                                  }};\n                                              hir_id = None;\n                                              span =\n                                              { Types.filename =\n                                                (Types.Real\n                                                   (Types.LocalPath\n                                                      \"src/tls13utils.rs\"));\n                                                hi =\n                                                { Types.col = \"75\";\n                                                  line = \"299\" };\n                                                lo =\n                                                { Types.col = \"73\";\n                                                  line = \"299\" }\n                                                };\n                                              ty =\n                                              (Types.Arrow\n                                                 { Types.bound_vars = [];\n                                                   value =\n                                                   { Types.abi =\n                                                     Types.Abi {todo = \"Rust\"};\n                                                     c_variadic = false;\n                                                     inputs =\n                                                     [Types.Adt {\n                                                        def_id =\n                                                        { Types.index =\n                                                          (2, 35147);\n                                                          krate = \"core\";\n                                                          path =\n                                                          [{ Types.data =\n                                                             (Types.TypeNs\n                                                                \"result\");\n                                                             disambiguator =\n                                                             0 };\n                                                            { Types.data =\n                                                              (Types.TypeNs\n                                                                 \"Result\");\n                                                              disambiguator =\n                                                              0 }\n                                                            ]\n                                                          };\n                                                        generic_args =\n                                                        [(Types.Type\n                                                            (Types.Uint\n                                                               Types.U8));\n                                                          (Types.Type\n                                                             Types.Adt {\n                                                               def_id =\n                                                               { Types.index =\n                                                                 (2, 15610);\n                                                                 krate =\n                                                                 \"core\";\n                                                                 path =\n                                                                 [{ Types.data =\n                                                                    (\n                                                                    Types.TypeNs\n                                                                    \"num\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                   { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"error\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                   { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"ParseIntError\");\n                                                                    disambiguator =\n                                                                    0 }\n                                                                   ]\n                                                                 };\n                                                               generic_args =\n                                                               []})\n                                                          ]}\n                                                       ];\n                                                     output =\n                                                     Types.Adt {\n                                                       def_id =\n                                                       { Types.index =\n                                                         (2, 35003);\n                                                         krate = \"core\";\n                                                         path =\n                                                         [{ Types.data =\n                                                            (Types.TypeNs\n                                                               \"option\");\n                                                            disambiguator = 0\n                                                            };\n                                                           { Types.data =\n                                                             (Types.TypeNs\n                                                                \"Option\");\n                                                             disambiguator =\n                                                             0 }\n                                                           ]\n                                                         };\n                                                       generic_args =\n                                                       [(Types.Type\n                                                           (Types.Uint\n                                                              Types.U8))\n                                                         ]};\n                                                     unsafety = Types.Normal\n                                                     }\n                                                   })\n                                              };\n                                            generic_args =\n                                            [(Types.Type\n                                                (Types.Uint Types.U8));\n                                              (Types.Type\n                                                 Types.Adt {\n                                                   def_id =\n                                                   { Types.index = (2, 15610);\n                                                     krate = \"core\";\n                                                     path =\n                                                     [{ Types.data =\n                                                        (Types.TypeNs \"num\");\n                                                        disambiguator = 0 };\n                                                       { Types.data =\n                                                         (Types.TypeNs\n                                                            \"error\");\n                                                         disambiguator = 0 };\n                                                       { Types.data =\n                                                         (Types.TypeNs\n                                                            \"ParseIntError\");\n                                                         disambiguator = 0 }\n                                                       ]\n                                                     };\n                                                   generic_args = []})\n                                              ];\n                                            impl = None;\n                                            ty =\n                                            (Types.Arrow\n                                               { Types.bound_vars = [];\n                                                 value =\n                                                 { Types.abi =\n                                                   Types.Abi {todo = \"Rust\"};\n                                                   c_variadic = false;\n                                                   inputs =\n                                                   [Types.Adt {\n                                                      def_id =\n                                                      { Types.index =\n                                                        (2, 35147);\n                                                        krate = \"core\";\n                                                        path =\n                                                        [{ Types.data =\n                                                           (Types.TypeNs\n                                                              \"result\");\n                                                           disambiguator = 0\n                                                           };\n                                                          { Types.data =\n                                                            (Types.TypeNs\n                                                               \"Result\");\n                                                            disambiguator = 0\n                                                            }\n                                                          ]\n                                                        };\n                                                      generic_args =\n                                                      [(Types.Type\n                                                          (Types.Uint\n                                                             Types.U8));\n                                                        (Types.Type\n                                                           Types.Adt {\n                                                             def_id =\n                                                             { Types.index =\n                                                               (2, 15610);\n                                                               krate = \"core\";\n                                                               path =\n                                                               [{ Types.data =\n                                                                  (Types.TypeNs\n                                                                    \"num\");\n                                                                  disambiguator =\n                                                                  0 };\n                                                                 { Types.data =\n                                                                   (Types.TypeNs\n                                                                    \"error\");\n                                                                   disambiguator =\n                                                                   0 };\n                                                                 { Types.data =\n                                                                   (Types.TypeNs\n                                                                    \"ParseIntError\");\n                                                                   disambiguator =\n                                                                   0 }\n                                                                 ]\n                                                               };\n                                                             generic_args =\n                                                             []})\n                                                        ]}\n                                                     ];\n                                                   output =\n                                                   Types.Adt {\n                                                     def_id =\n                                                     { Types.index =\n                                                       (2, 35003);\n                                                       krate = \"core\";\n                                                       path =\n                                                       [{ Types.data =\n                                                          (Types.TypeNs\n                                                             \"option\");\n                                                          disambiguator = 0 };\n                                                         { Types.data =\n                                                           (Types.TypeNs\n                                                              \"Option\");\n                                                           disambiguator = 0\n                                                           }\n                                                         ]\n                                                       };\n                                                     generic_args =\n                                                     [(Types.Type\n                                                         (Types.Uint Types.U8))\n                                                       ]};\n                                                   unsafety = Types.Normal }\n                                                 })};\n                                          hir_id = (Some (\"706\", \"74\"));\n                                          span =\n                                          { Types.filename =\n                                            (Types.Real\n                                               (Types.LocalPath\n                                                  \"src/tls13utils.rs\"));\n                                            hi =\n                                            { Types.col = \"78\"; line = \"299\"\n                                              };\n                                            lo =\n                                            { Types.col = \"44\"; line = \"299\"\n                                              }\n                                            };\n                                          ty =\n                                          Types.Adt {\n                                            def_id =\n                                            { Types.index = (2, 35003);\n                                              krate = \"core\";\n                                              path =\n                                              [{ Types.data =\n                                                 (Types.TypeNs \"option\");\n                                                 disambiguator = 0 };\n                                                { Types.data =\n                                                  (Types.TypeNs \"Option\");\n                                                  disambiguator = 0 }\n                                                ]\n                                              };\n                                            generic_args =\n                                            [(Types.Type\n                                                (Types.Uint Types.U8))\n                                              ]}\n                                          };\n                                         { Types.attributes = [];\n                                           contents =\n                                           Types.GlobalName {\n                                             id =\n                                             { Types.index = (0, 1186);\n                                               krate = \"bertie\";\n                                               path =\n                                               [{ Types.data =\n                                                  (Types.TypeNs \"tls13utils\");\n                                                  disambiguator = 0 };\n                                                 { Types.data =\n                                                   (Types.TypeNs \"U8\");\n                                                   disambiguator = 0 };\n                                                 { Types.data = Types.Ctor;\n                                                   disambiguator = 0 }\n                                                 ]\n                                               }};\n                                           hir_id = (Some (\"706\", \"84\"));\n                                           span =\n                                           { Types.filename =\n                                             (Types.Real\n                                                (Types.LocalPath\n                                                   \"src/tls13utils.rs\"));\n                                             hi =\n                                             { Types.col = \"85\"; line = \"299\"\n                                               };\n                                             lo =\n                                             { Types.col = \"83\"; line = \"299\"\n                                               }\n                                             };\n                                           ty =\n                                           (Types.Arrow\n                                              { Types.bound_vars = [];\n                                                value =\n                                                { Types.abi =\n                                                  Types.Abi {todo = \"Rust\"};\n                                                  c_variadic = false;\n                                                  inputs =\n                                                  [(Types.Uint Types.U8)];\n                                                  output =\n                                                  Types.Adt {\n                                                    def_id =\n                                                    { Types.index = (0, 1185);\n                                                      krate = \"bertie\";\n                                                      path =\n                                                      [{ Types.data =\n                                                         (Types.TypeNs\n                                                            \"tls13utils\");\n                                                         disambiguator = 0 };\n                                                        { Types.data =\n                                                          (Types.TypeNs \"U8\");\n                                                          disambiguator = 0 }\n                                                        ]\n                                                      };\n                                                    generic_args = []};\n                                                  unsafety = Types.Normal }\n                                                })\n                                           }\n                                         ];\n                                       fn_span =\n                                       { Types.filename =\n                                         (Types.Real\n                                            (Types.LocalPath\n                                               \"src/tls13utils.rs\"));\n                                         hi =\n                                         { Types.col = \"86\"; line = \"299\" };\n                                         lo =\n                                         { Types.col = \"79\"; line = \"299\" } };\n                                       from_hir_call = true;\n                                       fun' =\n                                       { Types.attributes = [];\n                                         contents =\n                                         Types.GlobalName {\n                                           id =\n                                           { Types.index = (2, 8004);\n                                             krate = \"core\";\n                                             path =\n                                             [{ Types.data =\n                                                (Types.TypeNs \"option\");\n                                                disambiguator = 0 };\n                                               { Types.data = Types.Impl;\n                                                 disambiguator = 0 };\n                                               { Types.data =\n                                                 (Types.ValueNs \"map\");\n                                                 disambiguator = 0 }\n                                               ]\n                                             }};\n                                         hir_id = None;\n                                         span =\n                                         { Types.filename =\n                                           (Types.Real\n                                              (Types.LocalPath\n                                                 \"src/tls13utils.rs\"));\n                                           hi =\n                                           { Types.col = \"82\"; line = \"299\" };\n                                           lo =\n                                           { Types.col = \"79\"; line = \"299\" }\n                                           };\n                                         ty =\n                                         (Types.Arrow\n                                            { Types.bound_vars = [];\n                                              value =\n                                              { Types.abi =\n                                                Types.Abi {todo = \"Rust\"};\n                                                c_variadic = false;\n                                                inputs =\n                                                [Types.Adt {\n                                                   def_id =\n                                                   { Types.index = (2, 35003);\n                                                     krate = \"core\";\n                                                     path =\n                                                     [{ Types.data =\n                                                        (Types.TypeNs\n                                                           \"option\");\n                                                        disambiguator = 0 };\n                                                       { Types.data =\n                                                         (Types.TypeNs\n                                                            \"Option\");\n                                                         disambiguator = 0 }\n                                                       ]\n                                                     };\n                                                   generic_args =\n                                                   [(Types.Type\n                                                       (Types.Uint Types.U8))\n                                                     ]};\n                                                  (Types.Arrow\n                                                     { Types.bound_vars = [];\n                                                       value =\n                                                       { Types.abi =\n                                                         Types.Abi {\n                                                           todo = \"Rust\"};\n                                                         c_variadic = false;\n                                                         inputs =\n                                                         [(Types.Uint\n                                                             Types.U8)\n                                                           ];\n                                                         output =\n                                                         Types.Adt {\n                                                           def_id =\n                                                           { Types.index =\n                                                             (0, 1185);\n                                                             krate = \"bertie\";\n                                                             path =\n                                                             [{ Types.data =\n                                                                (Types.TypeNs\n                                                                   \"tls13utils\");\n                                                                disambiguator =\n                                                                0 };\n                                                               { Types.data =\n                                                                 (Types.TypeNs\n                                                                    \"U8\");\n                                                                 disambiguator =\n                                                                 0 }\n                                                               ]\n                                                             };\n                                                           generic_args = []};\n                                                         unsafety =\n                                                         Types.Normal }\n                                                       })\n                                                  ];\n                                                output =\n                                                Types.Adt {\n                                                  def_id =\n                                                  { Types.index = (2, 35003);\n                                                    krate = \"core\";\n                                                    path =\n                                                    [{ Types.data =\n                                                       (Types.TypeNs \"option\");\n                                                       disambiguator = 0 };\n                                                      { Types.data =\n                                                        (Types.TypeNs\n                                                           \"Option\");\n                                                        disambiguator = 0 }\n                                                      ]\n                                                    };\n                                                  generic_args =\n                                                  [(Types.Type\n                                                      Types.Adt {\n                                                        def_id =\n                                                        { Types.index =\n                                                          (0, 1185);\n                                                          krate = \"bertie\";\n                                                          path =\n                                                          [{ Types.data =\n                                                             (Types.TypeNs\n                                                                \"tls13utils\");\n                                                             disambiguator =\n                                                             0 };\n                                                            { Types.data =\n                                                              (Types.TypeNs\n                                                                 \"U8\");\n                                                              disambiguator =\n                                                              0 }\n                                                            ]\n                                                          };\n                                                        generic_args = []})\n                                                    ]};\n                                                unsafety = Types.Normal }\n                                              })\n                                         };\n                                       generic_args =\n                                       [(Types.Type (Types.Uint Types.U8));\n                                         (Types.Type\n                                            Types.Adt {\n                                              def_id =\n                                              { Types.index = (0, 1185);\n                                                krate = \"bertie\";\n                                                path =\n                                                [{ Types.data =\n                                                   (Types.TypeNs \"tls13utils\");\n                                                   disambiguator = 0 };\n                                                  { Types.data =\n                                                    (Types.TypeNs \"U8\");\n                                                    disambiguator = 0 }\n                                                  ]\n                                                };\n                                              generic_args = []});\n                                         (Types.Type\n                                            (Types.Arrow\n                                               { Types.bound_vars = [];\n                                                 value =\n                                                 { Types.abi =\n                                                   Types.Abi {todo = \"Rust\"};\n                                                   c_variadic = false;\n                                                   inputs =\n                                                   [(Types.Uint Types.U8)];\n                                                   output =\n                                                   Types.Adt {\n                                                     def_id =\n                                                     { Types.index =\n                                                       (0, 1185);\n                                                       krate = \"bertie\";\n                                                       path =\n                                                       [{ Types.data =\n                                                          (Types.TypeNs\n                                                             \"tls13utils\");\n                                                          disambiguator = 0 };\n                                                         { Types.data =\n                                                           (Types.TypeNs \"U8\");\n                                                           disambiguator = 0\n                                                           }\n                                                         ]\n                                                       };\n                                                     generic_args = []};\n                                                   unsafety = Types.Normal }\n                                                 }))\n                                         ];\n                                       impl = None;\n                                       ty =\n                                       (Types.Arrow\n                                          { Types.bound_vars = [];\n                                            value =\n                                            { Types.abi =\n                                              Types.Abi {todo = \"Rust\"};\n                                              c_variadic = false;\n                                              inputs =\n                                              [Types.Adt {\n                                                 def_id =\n                                                 { Types.index = (2, 35003);\n                                                   krate = \"core\";\n                                                   path =\n                                                   [{ Types.data =\n                                                      (Types.TypeNs \"option\");\n                                                      disambiguator = 0 };\n                                                     { Types.data =\n                                                       (Types.TypeNs \"Option\");\n                                                       disambiguator = 0 }\n                                                     ]\n                                                   };\n                                                 generic_args =\n                                                 [(Types.Type\n                                                     (Types.Uint Types.U8))\n                                                   ]};\n                                                (Types.Arrow\n                                                   { Types.bound_vars = [];\n                                                     value =\n                                                     { Types.abi =\n                                                       Types.Abi {\n                                                         todo = \"Rust\"};\n                                                       c_variadic = false;\n                                                       inputs =\n                                                       [(Types.Uint Types.U8)\n                                                         ];\n                                                       output =\n                                                       Types.Adt {\n                                                         def_id =\n                                                         { Types.index =\n                                                           (0, 1185);\n                                                           krate = \"bertie\";\n                                                           path =\n                                                           [{ Types.data =\n                                                              (Types.TypeNs\n                                                                 \"tls13utils\");\n                                                              disambiguator =\n                                                              0 };\n                                                             { Types.data =\n                                                               (Types.TypeNs\n                                                                  \"U8\");\n                                                               disambiguator =\n                                                               0 }\n                                                             ]\n                                                           };\n                                                         generic_args = []};\n                                                       unsafety =\n                                                       Types.Normal }\n                                                     })\n                                                ];\n                                              output =\n                                              Types.Adt {\n                                                def_id =\n                                                { Types.index = (2, 35003);\n                                                  krate = \"core\";\n                                                  path =\n                                                  [{ Types.data =\n                                                     (Types.TypeNs \"option\");\n                                                     disambiguator = 0 };\n                                                    { Types.data =\n                                                      (Types.TypeNs \"Option\");\n                                                      disambiguator = 0 }\n                                                    ]\n                                                  };\n                                                generic_args =\n                                                [(Types.Type\n                                                    Types.Adt {\n                                                      def_id =\n                                                      { Types.index =\n                                                        (0, 1185);\n                                                        krate = \"bertie\";\n                                                        path =\n                                                        [{ Types.data =\n                                                           (Types.TypeNs\n                                                              \"tls13utils\");\n                                                           disambiguator = 0\n                                                           };\n                                                          { Types.data =\n                                                            (Types.TypeNs\n                                                               \"U8\");\n                                                            disambiguator = 0\n                                                            }\n                                                          ]\n                                                        };\n                                                      generic_args = []})\n                                                  ]};\n                                              unsafety = Types.Normal }\n                                            })};\n                                     hir_id = (Some (\"706\", \"72\"));\n                                     span =\n                                     { Types.filename =\n                                       (Types.Real\n                                          (Types.LocalPath\n                                             \"src/tls13utils.rs\"));\n                                       hi =\n                                       { Types.col = \"86\"; line = \"299\" };\n                                       lo =\n                                       { Types.col = \"44\"; line = \"299\" } };\n                                     ty =\n                                     Types.Adt {\n                                       def_id =\n                                       { Types.index = (2, 35003);\n                                         krate = \"core\";\n                                         path =\n                                         [{ Types.data =\n                                            (Types.TypeNs \"option\");\n                                            disambiguator = 0 };\n                                           { Types.data =\n                                             (Types.TypeNs \"Option\");\n                                             disambiguator = 0 }\n                                           ]\n                                         };\n                                       generic_args =\n                                       [(Types.Type\n                                           Types.Adt {\n                                             def_id =\n                                             { Types.index = (0, 1185);\n                                               krate = \"bertie\";\n                                               path =\n                                               [{ Types.data =\n                                                  (Types.TypeNs \"tls13utils\");\n                                                  disambiguator = 0 };\n                                                 { Types.data =\n                                                   (Types.TypeNs \"U8\");\n                                                   disambiguator = 0 }\n                                                 ]\n                                               };\n                                             generic_args = []})\n                                         ]}\n                                     };\n                                   movability = None;\n                                   params =\n                                   [{ Types.attributes = []; hir_id = None;\n                                      pat = None; self_kind = None;\n                                      ty =\n                                      (Types.Arrow\n                                         { Types.bound_vars = [];\n                                           value =\n                                           { Types.abi =\n                                             Types.Abi {todo = \"Rust\"};\n                                             c_variadic = false;\n                                             inputs =\n                                             [(Types.Ref\n                                                 ({ Types.kind =\n                                                    Types.ReErased },\n                                                  Types.Str, false))\n                                               ];\n                                             output =\n                                             Types.Adt {\n                                               def_id =\n                                               { Types.index = (2, 35003);\n                                                 krate = \"core\";\n                                                 path =\n                                                 [{ Types.data =\n                                                    (Types.TypeNs \"option\");\n                                                    disambiguator = 0 };\n                                                   { Types.data =\n                                                     (Types.TypeNs \"Option\");\n                                                     disambiguator = 0 }\n                                                   ]\n                                                 };\n                                               generic_args =\n                                               [(Types.Type\n                                                   Types.Adt {\n                                                     def_id =\n                                                     { Types.index =\n                                                       (0, 1185);\n                                                       krate = \"bertie\";\n                                                       path =\n                                                       [{ Types.data =\n                                                          (Types.TypeNs\n                                                             \"tls13utils\");\n                                                          disambiguator = 0 };\n                                                         { Types.data =\n                                                           (Types.TypeNs \"U8\");\n                                                           disambiguator = 0\n                                                           }\n                                                         ]\n                                                       };\n                                                     generic_args = []})\n                                                 ]};\n                                             unsafety = Types.Normal }\n                                           });\n                                      ty_span = None };\n                                     { Types.attributes = [];\n                                       hir_id =\n                                       (Some { Types.local_id = \"70\";\n                                               owner =\n                                               { Types.index = (0, 706);\n                                                 krate = \"bertie\";\n                                                 path =\n                                                 [{ Types.data =\n                                                    (Types.TypeNs\n                                                       \"tls13utils\");\n                                                    disambiguator = 0 };\n                                                   { Types.data = Types.Impl;\n                                                     disambiguator = 18 };\n                                                   { Types.data =\n                                                     (Types.ValueNs\n                                                        \"from_hex\");\n                                                     disambiguator = 0 }\n                                                   ]\n                                                 }\n                                               });\n                                       pat =\n                                       (Some { Types.attributes = [];\n                                               contents =\n                                               Types.Binding {\n                                                 is_primary = true;\n                                                 mode = Types.ByValue;\n                                                 mutability = false;\n                                                 subpattern = None;\n                                                 ty =\n                                                 (Types.Ref\n                                                    ({ Types.kind =\n                                                       Types.ReErased },\n                                                     Types.Str, false));\n                                                 var =\n                                                 { Types.id =\n                                                   { Types.local_id = \"71\";\n                                                     owner =\n                                                     { Types.index = (0, 706);\n                                                       krate = \"bertie\";\n                                                       path =\n                                                       [{ Types.data =\n                                                          (Types.TypeNs\n                                                             \"tls13utils\");\n                                                          disambiguator = 0 };\n                                                         { Types.data =\n                                                           Types.Impl;\n                                                           disambiguator = 18\n                                                           };\n                                                         { Types.data =\n                                                           (Types.ValueNs\n                                                              \"from_hex\");\n                                                           disambiguator = 0\n                                                           }\n                                                         ]\n                                                       }\n                                                     };\n                                                   name = \"sub\" }};\n                                               hir_id = None;\n                                               span =\n                                               { Types.filename =\n                                                 (Types.Real\n                                                    (Types.LocalPath\n                                                       \"src/tls13utils.rs\"));\n                                                 hi =\n                                                 { Types.col = \"42\";\n                                                   line = \"299\" };\n                                                 lo =\n                                                 { Types.col = \"39\";\n                                                   line = \"299\" }\n                                                 };\n                                               ty =\n                                               (Types.Ref\n                                                  ({ Types.kind =\n                                                     Types.ReErased },\n                                                   Types.Str, false))\n                                               });\n                                       self_kind = None;\n                                       ty =\n                                       (Types.Ref\n                                          ({ Types.kind = Types.ReErased },\n                                           Types.Str, false));\n                                       ty_span = None }\n                                     ];\n                                   upvars = []};\n                                 hir_id = (Some (\"706\", \"69\"));\n                                 span =\n                                 { Types.filename =\n                                   (Types.Real\n                                      (Types.LocalPath \"src/tls13utils.rs\"));\n                                   hi = { Types.col = \"86\"; line = \"299\" };\n                                   lo = { Types.col = \"38\"; line = \"299\" } };\n                                 ty =\n                                 (Types.Arrow\n                                    { Types.bound_vars = [];\n                                      value =\n                                      { Types.abi = Types.Abi {todo = \"Rust\"};\n                                        c_variadic = false;\n                                        inputs =\n                                        [(Types.Ref\n                                            ({ Types.kind = Types.ReErased },\n                                             Types.Str, false))\n                                          ];\n                                        output =\n                                        Types.Adt {\n                                          def_id =\n                                          { Types.index = (2, 35003);\n                                            krate = \"core\";\n                                            path =\n                                            [{ Types.data =\n                                               (Types.TypeNs \"option\");\n                                               disambiguator = 0 };\n                                              { Types.data =\n                                                (Types.TypeNs \"Option\");\n                                                disambiguator = 0 }\n                                              ]\n                                            };\n                                          generic_args =\n                                          [(Types.Type\n                                              Types.Adt {\n                                                def_id =\n                                                { Types.index = (0, 1185);\n                                                  krate = \"bertie\";\n                                                  path =\n                                                  [{ Types.data =\n                                                     (Types.TypeNs\n                                                        \"tls13utils\");\n                                                     disambiguator = 0 };\n                                                    { Types.data =\n                                                      (Types.TypeNs \"U8\");\n                                                      disambiguator = 0 }\n                                                    ]\n                                                  };\n                                                generic_args = []})\n                                            ]};\n                                        unsafety = Types.Normal }\n                                      })\n                                 }\n                               ];\n                             fn_span =\n                             { Types.filename =\n                               (Types.Real\n                                  (Types.LocalPath \"src/tls13utils.rs\"));\n                               hi = { Types.col = \"87\"; line = \"299\" };\n                               lo = { Types.col = \"29\"; line = \"299\" } };\n                             from_hir_call = true;\n                             fun' =\n                             { Types.attributes = [];\n                               contents =\n                               Types.GlobalName {\n                                 id =\n                                 { Types.index = (2, 8027); krate = \"core\";\n                                   path =\n                                   [{ Types.data = (Types.TypeNs \"option\");\n                                      disambiguator = 0 };\n                                     { Types.data = Types.Impl;\n                                       disambiguator = 0 };\n                                     { Types.data =\n                                       (Types.ValueNs \"and_then\");\n                                       disambiguator = 0 }\n                                     ]\n                                   }};\n                               hir_id = None;\n                               span =\n                               { Types.filename =\n                                 (Types.Real\n                                    (Types.LocalPath \"src/tls13utils.rs\"));\n                                 hi = { Types.col = \"37\"; line = \"299\" };\n                                 lo = { Types.col = \"29\"; line = \"299\" } };\n                               ty =\n                               (Types.Arrow\n                                  { Types.bound_vars = [];\n                                    value =\n                                    { Types.abi = Types.Abi {todo = \"Rust\"};\n                                      c_variadic = false;\n                                      inputs =\n                                      [Types.Adt {\n                                         def_id =\n                                         { Types.index = (2, 35003);\n                                           krate = \"core\";\n                                           path =\n                                           [{ Types.data =\n                                              (Types.TypeNs \"option\");\n                                              disambiguator = 0 };\n                                             { Types.data =\n                                               (Types.TypeNs \"Option\");\n                                               disambiguator = 0 }\n                                             ]\n                                           };\n                                         generic_args =\n                                         [(Types.Type\n                                             (Types.Ref\n                                                ({ Types.kind =\n                                                   Types.ReErased },\n                                                 Types.Str, false)))\n                                           ]};\n                                        (Types.Arrow\n                                           { Types.bound_vars = [];\n                                             value =\n                                             { Types.abi =\n                                               Types.Abi {todo = \"Rust\"};\n                                               c_variadic = false;\n                                               inputs =\n                                               [(Types.Ref\n                                                   ({ Types.kind =\n                                                      Types.ReErased },\n                                                    Types.Str, false))\n                                                 ];\n                                               output =\n                                               Types.Adt {\n                                                 def_id =\n                                                 { Types.index = (2, 35003);\n                                                   krate = \"core\";\n                                                   path =\n                                                   [{ Types.data =\n                                                      (Types.TypeNs \"option\");\n                                                      disambiguator = 0 };\n                                                     { Types.data =\n                                                       (Types.TypeNs \"Option\");\n                                                       disambiguator = 0 }\n                                                     ]\n                                                   };\n                                                 generic_args =\n                                                 [(Types.Type\n                                                     Types.Adt {\n                                                       def_id =\n                                                       { Types.index =\n                                                         (0, 1185);\n                                                         krate = \"bertie\";\n                                                         path =\n                                                         [{ Types.data =\n                                                            (Types.TypeNs\n                                                               \"tls13utils\");\n                                                            disambiguator = 0\n                                                            };\n                                                           { Types.data =\n                                                             (Types.TypeNs\n                                                                \"U8\");\n                                                             disambiguator =\n                                                             0 }\n                                                           ]\n                                                         };\n                                                       generic_args = []})\n                                                   ]};\n                                               unsafety = Types.Normal }\n                                             })\n                                        ];\n                                      output =\n                                      Types.Adt {\n                                        def_id =\n                                        { Types.index = (2, 35003);\n                                          krate = \"core\";\n                                          path =\n                                          [{ Types.data =\n                                             (Types.TypeNs \"option\");\n                                             disambiguator = 0 };\n                                            { Types.data =\n                                              (Types.TypeNs \"Option\");\n                                              disambiguator = 0 }\n                                            ]\n                                          };\n                                        generic_args =\n                                        [(Types.Type\n                                            Types.Adt {\n                                              def_id =\n                                              { Types.index = (0, 1185);\n                                                krate = \"bertie\";\n                                                path =\n                                                [{ Types.data =\n                                                   (Types.TypeNs \"tls13utils\");\n                                                   disambiguator = 0 };\n                                                  { Types.data =\n                                                    (Types.TypeNs \"U8\");\n                                                    disambiguator = 0 }\n                                                  ]\n                                                };\n                                              generic_args = []})\n                                          ]};\n                                      unsafety = Types.Normal }\n                                    })\n                               };\n                             generic_args =\n                             [(Types.Type\n                                 (Types.Ref\n                                    ({ Types.kind = Types.ReErased },\n                                     Types.Str, false)));\n                               (Types.Type\n                                  Types.Adt {\n                                    def_id =\n                                    { Types.index = (0, 1185);\n                                      krate = \"bertie\";\n                                      path =\n                                      [{ Types.data =\n                                         (Types.TypeNs \"tls13utils\");\n                                         disambiguator = 0 };\n                                        { Types.data = (Types.TypeNs \"U8\");\n                                          disambiguator = 0 }\n                                        ]\n                                      };\n                                    generic_args = []});\n                               (Types.Type\n                                  (Types.Arrow\n                                     { Types.bound_vars = [];\n                                       value =\n                                       { Types.abi =\n                                         Types.Abi {todo = \"Rust\"};\n                                         c_variadic = false;\n                                         inputs =\n                                         [(Types.Ref\n                                             ({ Types.kind = Types.ReErased },\n                                              Types.Str, false))\n                                           ];\n                                         output =\n                                         Types.Adt {\n                                           def_id =\n                                           { Types.index = (2, 35003);\n                                             krate = \"core\";\n                                             path =\n                                             [{ Types.data =\n                                                (Types.TypeNs \"option\");\n                                                disambiguator = 0 };\n                                               { Types.data =\n                                                 (Types.TypeNs \"Option\");\n                                                 disambiguator = 0 }\n                                               ]\n                                             };\n                                           generic_args =\n                                           [(Types.Type\n                                               Types.Adt {\n                                                 def_id =\n                                                 { Types.index = (0, 1185);\n                                                   krate = \"bertie\";\n                                                   path =\n                                                   [{ Types.data =\n                                                      (Types.TypeNs\n                                                         \"tls13utils\");\n                                                      disambiguator = 0 };\n                                                     { Types.data =\n                                                       (Types.TypeNs \"U8\");\n                                                       disambiguator = 0 }\n                                                     ]\n                                                   };\n                                                 generic_args = []})\n                                             ]};\n                                         unsafety = Types.Normal }\n                                       }))\n                               ];\n                             impl = None;\n                             ty =\n                             (Types.Arrow\n                                { Types.bound_vars = [];\n                                  value =\n                                  { Types.abi = Types.Abi {todo = \"Rust\"};\n                                    c_variadic = false;\n                                    inputs =\n                                    [Types.Adt {\n                                       def_id =\n                                       { Types.index = (2, 35003);\n                                         krate = \"core\";\n                                         path =\n                                         [{ Types.data =\n                                            (Types.TypeNs \"option\");\n                                            disambiguator = 0 };\n                                           { Types.data =\n                                             (Types.TypeNs \"Option\");\n                                             disambiguator = 0 }\n                                           ]\n                                         };\n                                       generic_args =\n                                       [(Types.Type\n                                           (Types.Ref\n                                              ({ Types.kind = Types.ReErased\n                                                 },\n                                               Types.Str, false)))\n                                         ]};\n                                      (Types.Arrow\n                                         { Types.bound_vars = [];\n                                           value =\n                                           { Types.abi =\n                                             Types.Abi {todo = \"Rust\"};\n                                             c_variadic = false;\n                                             inputs =\n                                             [(Types.Ref\n                                                 ({ Types.kind =\n                                                    Types.ReErased },\n                                                  Types.Str, false))\n                                               ];\n                                             output =\n                                             Types.Adt {\n                                               def_id =\n                                               { Types.index = (2, 35003);\n                                                 krate = \"core\";\n                                                 path =\n                                                 [{ Types.data =\n                                                    (Types.TypeNs \"option\");\n                                                    disambiguator = 0 };\n                                                   { Types.data =\n                                                     (Types.TypeNs \"Option\");\n                                                     disambiguator = 0 }\n                                                   ]\n                                                 };\n                                               generic_args =\n                                               [(Types.Type\n                                                   Types.Adt {\n                                                     def_id =\n                                                     { Types.index =\n                                                       (0, 1185);\n                                                       krate = \"bertie\";\n                                                       path =\n                                                       [{ Types.data =\n                                                          (Types.TypeNs\n                                                             \"tls13utils\");\n                                                          disambiguator = 0 };\n                                                         { Types.data =\n                                                           (Types.TypeNs \"U8\");\n                                                           disambiguator = 0\n                                                           }\n                                                         ]\n                                                       };\n                                                     generic_args = []})\n                                                 ]};\n                                             unsafety = Types.Normal }\n                                           })\n                                      ];\n                                    output =\n                                    Types.Adt {\n                                      def_id =\n                                      { Types.index = (2, 35003);\n                                        krate = \"core\";\n                                        path =\n                                        [{ Types.data =\n                                           (Types.TypeNs \"option\");\n                                           disambiguator = 0 };\n                                          { Types.data =\n                                            (Types.TypeNs \"Option\");\n                                            disambiguator = 0 }\n                                          ]\n                                        };\n                                      generic_args =\n                                      [(Types.Type\n                                          Types.Adt {\n                                            def_id =\n                                            { Types.index = (0, 1185);\n                                              krate = \"bertie\";\n                                              path =\n                                              [{ Types.data =\n                                                 (Types.TypeNs \"tls13utils\");\n                                                 disambiguator = 0 };\n                                                { Types.data =\n                                                  (Types.TypeNs \"U8\");\n                                                  disambiguator = 0 }\n                                                ]\n                                              };\n                                            generic_args = []})\n                                        ]};\n                                    unsafety = Types.Normal }\n                                  })};\n                           hir_id = (Some (\"706\", \"54\"));\n                           span =\n                           { Types.filename =\n                             (Types.Real\n                                (Types.LocalPath \"src/tls13utils.rs\"));\n                             hi = { Types.col = \"87\"; line = \"299\" };\n                             lo = { Types.col = \"24\"; line = \"298\" } };\n                           ty =\n                           Types.Adt {\n                             def_id =\n                             { Types.index = (2, 35003); krate = \"core\";\n                               path =\n                               [{ Types.data = (Types.TypeNs \"option\");\n                                  disambiguator = 0 };\n                                 { Types.data = (Types.TypeNs \"Option\");\n                                   disambiguator = 0 }\n                                 ]\n                               };\n                             generic_args =\n                             [(Types.Type\n                                 Types.Adt {\n                                   def_id =\n                                   { Types.index = (0, 1185);\n                                     krate = \"bertie\";\n                                     path =\n                                     [{ Types.data =\n                                        (Types.TypeNs \"tls13utils\");\n                                        disambiguator = 0 };\n                                       { Types.data = (Types.TypeNs \"U8\");\n                                         disambiguator = 0 }\n                                       ]\n                                     };\n                                   generic_args = []})\n                               ]}\n                           });\n                   opt_destruction_scope = None;\n                   region_scope = { Types.data = Types.Node; id = \"87\" };\n                   safety_mode = Types.Safe;\n                   span =\n                   { Types.filename =\n                     (Types.Real (Types.LocalPath \"src/tls13utils.rs\"));\n                     hi = { Types.col = \"21\"; line = \"300\" };\n                     lo = { Types.col = \"29\"; line = \"297\" } };\n                   stmts = []; targeted_by_break = false};\n                 hir_id = (Some (\"706\", \"53\"));\n                 span =\n                 { Types.filename =\n                   (Types.Real (Types.LocalPath \"src/tls13utils.rs\"));\n                   hi = { Types.col = \"21\"; line = \"300\" };\n                   lo = { Types.col = \"29\"; line = \"297\" } };\n                 ty =\n                 Types.Adt {\n                   def_id =\n                   { Types.index = (2, 35003); krate = \"core\";\n                     path =\n                     [{ Types.data = (Types.TypeNs \"option\");\n                        disambiguator = 0 };\n                       { Types.data = (Types.TypeNs \"Option\");\n                         disambiguator = 0 }\n                       ]\n                     };\n                   generic_args =\n                   [(Types.Type\n                       Types.Adt {\n                         def_id =\n                         { Types.index = (0, 1185); krate = \"bertie\";\n                           path =\n                           [{ Types.data = (Types.TypeNs \"tls13utils\");\n                              disambiguator = 0 };\n                             { Types.data = (Types.TypeNs \"U8\");\n                               disambiguator = 0 }\n                             ]\n                           };\n                         generic_args = []})\n                     ]}\n                 };\n               movability = None;\n               params =\n               [{ Types.attributes = []; hir_id = None; pat = None;\n                  self_kind = None;\n                  ty =\n                  (Types.Ref\n                     ({ Types.kind = Types.ReErased },\n                      (Types.Arrow\n                         { Types.bound_vars = [];\n                           value =\n                           { Types.abi = Types.Abi {todo = \"Rust\"};\n                             c_variadic = false;\n                             inputs = [(Types.Uint Types.Usize)];\n                             output =\n                             Types.Adt {\n                               def_id =\n                               { Types.index = (2, 35003); krate = \"core\";\n                                 path =\n                                 [{ Types.data = (Types.TypeNs \"option\");\n                                    disambiguator = 0 };\n                                   { Types.data = (Types.TypeNs \"Option\");\n                                     disambiguator = 0 }\n                                   ]\n                                 };\n                               generic_args =\n                               [(Types.Type\n                                   Types.Adt {\n                                     def_id =\n                                     { Types.index = (0, 1185);\n                                       krate = \"bertie\";\n                                       path =\n                                       [{ Types.data =\n                                          (Types.TypeNs \"tls13utils\");\n                                          disambiguator = 0 };\n                                         { Types.data = (Types.TypeNs \"U8\");\n                                           disambiguator = 0 }\n                                         ]\n                                       };\n                                     generic_args = []})\n                                 ]};\n                             unsafety = Types.Normal }\n                           }),\n                      true));\n                  ty_span = None };\n                 { Types.attributes = [];\n                   hir_id =\n                   (Some { Types.local_id = \"51\";\n                           owner =\n                           { Types.index = (0, 706); krate = \"bertie\";\n                             path =\n                             [{ Types.data = (Types.TypeNs \"tls13utils\");\n                                disambiguator = 0 };\n                               { Types.data = Types.Impl; disambiguator = 18\n                                 };\n                               { Types.data = (Types.ValueNs \"from_hex\");\n                                 disambiguator = 0 }\n                               ]\n                             }\n                           });\n                   pat =\n                   (Some { Types.attributes = [];\n                           contents =\n                           Types.Binding {is_primary = true;\n                             mode = Types.ByValue; mutability = false;\n                             subpattern = None;\n                             ty = (Types.Uint Types.Usize);\n                             var =\n                             { Types.id =\n                               { Types.local_id = \"52\";\n                                 owner =\n                                 { Types.index = (0, 706); krate = \"bertie\";\n                                   path =\n                                   [{ Types.data =\n                                      (Types.TypeNs \"tls13utils\");\n                                      disambiguator = 0 };\n                                     { Types.data = Types.Impl;\n                                       disambiguator = 18 };\n                                     { Types.data =\n                                       (Types.ValueNs \"from_hex\");\n                                       disambiguator = 0 }\n                                     ]\n                                   }\n                                 };\n                               name = \"i\" }};\n                           hir_id = None;\n                           span =\n                           { Types.filename =\n                             (Types.Real\n                                (Types.LocalPath \"src/tls13utils.rs\"));\n                             hi = { Types.col = \"27\"; line = \"297\" };\n                             lo = { Types.col = \"26\"; line = \"297\" } };\n                           ty = (Types.Uint Types.Usize) });\n                   self_kind = None; ty = (Types.Uint Types.Usize);\n                   ty_span = None }\n                 ];\n               upvars =\n               [{ Types.attributes = [];\n                  contents =\n                  Types.Borrow {\n                    arg =\n                    { Types.attributes = [];\n                      contents =\n                      Types.VarRef {\n                        id =\n                        { Types.id =\n                          { Types.local_id = \"13\";\n                            owner =\n                            { Types.index = (0, 706); krate = \"bertie\";\n                              path =\n                              [{ Types.data = (Types.TypeNs \"tls13utils\");\n                                 disambiguator = 0 };\n                                { Types.data = Types.Impl; disambiguator = 18\n                                  };\n                                { Types.data = (Types.ValueNs \"from_hex\");\n                                  disambiguator = 0 }\n                                ]\n                              }\n                            };\n                          name = \"s\" }};\n                      hir_id = None;\n                      span =\n                      { Types.filename =\n                        (Types.Real (Types.LocalPath \"src/tls13utils.rs\"));\n                        hi = { Types.col = \"21\"; line = \"300\" };\n                        lo = { Types.col = \"25\"; line = \"297\" } };\n                      ty =\n                      Types.Adt {\n                        def_id =\n                        { Types.index = (5, 7255); krate = \"alloc\";\n                          path =\n                          [{ Types.data = (Types.TypeNs \"string\");\n                             disambiguator = 0 };\n                            { Types.data = (Types.TypeNs \"String\");\n                              disambiguator = 0 }\n                            ]\n                          };\n                        generic_args = []}\n                      };\n                    borrow_kind = Types.Shared};\n                  hir_id = None;\n                  span =\n                  { Types.filename =\n                    (Types.Real (Types.LocalPath \"src/tls13utils.rs\"));\n                    hi = { Types.col = \"21\"; line = \"300\" };\n                    lo = { Types.col = \"25\"; line = \"297\" } };\n                  ty =\n                  (Types.Ref\n                     ({ Types.kind = Types.ReErased },\n                      Types.Adt {\n                        def_id =\n                        { Types.index = (5, 7255); krate = \"alloc\";\n                          path =\n                          [{ Types.data = (Types.TypeNs \"string\");\n                             disambiguator = 0 };\n                            { Types.data = (Types.TypeNs \"String\");\n                              disambiguator = 0 }\n                            ]\n                          };\n                        generic_args = []},\n                      false))\n                  }\n                 ]};\n             hir_id = (Some (\"706\", \"50\"));\n             span =\n             { Types.filename =\n               (Types.Real (Types.LocalPath \"src/tls13utils.rs\"));\n               hi = { Types.col = \"21\"; line = \"300\" };\n               lo = { Types.col = \"25\"; line = \"297\" } };\n             ty =\n             (Types.Arrow\n                { Types.bound_vars = [];\n                  value =\n                  { Types.abi = Types.Abi {todo = \"Rust\"};\n                    c_variadic = false; inputs = [(Types.Uint Types.Usize)];\n                    output =\n                    Types.Adt {\n                      def_id =\n                      { Types.index = (2, 35003); krate = \"core\";\n                        path =\n                        [{ Types.data = (Types.TypeNs \"option\");\n                           disambiguator = 0 };\n                          { Types.data = (Types.TypeNs \"Option\");\n                            disambiguator = 0 }\n                          ]\n                        };\n                      generic_args =\n                      [(Types.Type\n                          Types.Adt {\n                            def_id =\n                            { Types.index = (0, 1185); krate = \"bertie\";\n                              path =\n                              [{ Types.data = (Types.TypeNs \"tls13utils\");\n                                 disambiguator = 0 };\n                                { Types.data = (Types.TypeNs \"U8\");\n                                  disambiguator = 0 }\n                                ]\n                              };\n                            generic_args = []})\n                        ]};\n                    unsafety = Types.Normal }\n                  })\n             }\n           ];\n         fn_span =\n         { Types.filename =\n           (Types.Real (Types.LocalPath \"src/tls13utils.rs\"));\n           hi = { Types.col = \"22\"; line = \"300\" };\n           lo = { Types.col = \"21\"; line = \"297\" } };\n         from_hir_call = true;\n         fun' =\n         { Types.attributes = [];\n           contents =\n           Types.GlobalName {\n             id =\n             { Types.index = (2, 7344); krate = \"core\";\n               path =\n               [{ Types.data = (Types.TypeNs \"iter\"); disambiguator = 0 };\n                 { Types.data = (Types.TypeNs \"traits\"); disambiguator = 0 };\n                 { Types.data = (Types.TypeNs \"iterator\"); disambiguator = 0\n                   };\n                 { Types.data = (Types.TypeNs \"Iterator\"); disambiguator = 0\n                   };\n                 { Types.data = (Types.ValueNs \"map\"); disambiguator = 0 }]\n               }};\n           hir_id = None;\n           span =\n           { Types.filename =\n             (Types.Real (Types.LocalPath \"src/tls13utils.rs\"));\n             hi = { Types.col = \"24\"; line = \"297\" };\n             lo = { Types.col = \"21\"; line = \"297\" } };\n           ty =\n           (Types.Arrow\n              { Types.bound_vars = [];\n                value =\n                { Types.abi = Types.Abi {todo = \"Rust\"}; c_variadic = false;\n                  inputs =\n                  [Types.Adt {\n                     def_id =\n                     { Types.index = (2, 34057); krate = \"core\";\n                       path =\n                       [{ Types.data = (Types.TypeNs \"iter\");\n                          disambiguator = 0 };\n                         { Types.data = (Types.TypeNs \"adapters\");\n                           disambiguator = 0 };\n                         { Types.data = (Types.TypeNs \"step_by\");\n                           disambiguator = 0 };\n                         { Types.data = (Types.TypeNs \"StepBy\");\n                           disambiguator = 0 }\n                         ]\n                       };\n                     generic_args =\n                     [(Types.Type\n                         Types.Adt {\n                           def_id =\n                           { Types.index = (2, 32811); krate = \"core\";\n                             path =\n                             [{ Types.data = (Types.TypeNs \"ops\");\n                                disambiguator = 0 };\n                               { Types.data = (Types.TypeNs \"range\");\n                                 disambiguator = 0 };\n                               { Types.data = (Types.TypeNs \"Range\");\n                                 disambiguator = 0 }\n                               ]\n                             };\n                           generic_args =\n                           [(Types.Type (Types.Uint Types.Usize))]})\n                       ]};\n                    (Types.Arrow\n                       { Types.bound_vars = [];\n                         value =\n                         { Types.abi = Types.Abi {todo = \"Rust\"};\n                           c_variadic = false;\n                           inputs = [(Types.Uint Types.Usize)];\n                           output =\n                           Types.Adt {\n                             def_id =\n                             { Types.index = (2, 35003); krate = \"core\";\n                               path =\n                               [{ Types.data = (Types.TypeNs \"option\");\n                                  disambiguator = 0 };\n                                 { Types.data = (Types.TypeNs \"Option\");\n                                   disambiguator = 0 }\n                                 ]\n                               };\n                             generic_args =\n                             [(Types.Type\n                                 Types.Adt {\n                                   def_id =\n                                   { Types.index = (0, 1185);\n                                     krate = \"bertie\";\n                                     path =\n                                     [{ Types.data =\n                                        (Types.TypeNs \"tls13utils\");\n                                        disambiguator = 0 };\n                                       { Types.data = (Types.TypeNs \"U8\");\n                                         disambiguator = 0 }\n                                       ]\n                                     };\n                                   generic_args = []})\n                               ]};\n                           unsafety = Types.Normal }\n                         })\n                    ];\n                  output =\n                  Types.Adt {\n                    def_id =\n                    { Types.index = (2, 33976); krate = \"core\";\n                      path =\n                      [{ Types.data = (Types.TypeNs \"iter\");\n                         disambiguator = 0 };\n                        { Types.data = (Types.TypeNs \"adapters\");\n                          disambiguator = 0 };\n                        { Types.data = (Types.TypeNs \"map\");\n                          disambiguator = 0 };\n                        { Types.data = (Types.TypeNs \"Map\");\n                          disambiguator = 0 }\n                        ]\n                      };\n                    generic_args =\n                    [(Types.Type\n                        Types.Adt {\n                          def_id =\n                          { Types.index = (2, 34057); krate = \"core\";\n                            path =\n                            [{ Types.data = (Types.TypeNs \"iter\");\n                               disambiguator = 0 };\n                              { Types.data = (Types.TypeNs \"adapters\");\n                                disambiguator = 0 };\n                              { Types.data = (Types.TypeNs \"step_by\");\n                                disambiguator = 0 };\n                              { Types.data = (Types.TypeNs \"StepBy\");\n                                disambiguator = 0 }\n                              ]\n                            };\n                          generic_args =\n                          [(Types.Type\n                              Types.Adt {\n                                def_id =\n                                { Types.index = (2, 32811); krate = \"core\";\n                                  path =\n                                  [{ Types.data = (Types.TypeNs \"ops\");\n                                     disambiguator = 0 };\n                                    { Types.data = (Types.TypeNs \"range\");\n                                      disambiguator = 0 };\n                                    { Types.data = (Types.TypeNs \"Range\");\n                                      disambiguator = 0 }\n                                    ]\n                                  };\n                                generic_args =\n                                [(Types.Type (Types.Uint Types.Usize))]})\n                            ]});\n                      (Types.Type\n                         (Types.Arrow\n                            { Types.bound_vars = [];\n                              value =\n                              { Types.abi = Types.Abi {todo = \"Rust\"};\n                                c_variadic = false;\n                                inputs = [(Types.Uint Types.Usize)];\n                                output =\n                                Types.Adt {\n                                  def_id =\n                                  { Types.index = (2, 35003); krate = \"core\";\n                                    path =\n                                    [{ Types.data = (Types.TypeNs \"option\");\n                                       disambiguator = 0 };\n                                      { Types.data = (Types.TypeNs \"Option\");\n                                        disambiguator = 0 }\n                                      ]\n                                    };\n                                  generic_args =\n                                  [(Types.Type\n                                      Types.Adt {\n                                        def_id =\n                                        { Types.index = (0, 1185);\n                                          krate = \"bertie\";\n                                          path =\n                                          [{ Types.data =\n                                             (Types.TypeNs \"tls13utils\");\n                                             disambiguator = 0 };\n                                            { Types.data =\n                                              (Types.TypeNs \"U8\");\n                                              disambiguator = 0 }\n                                            ]\n                                          };\n                                        generic_args = []})\n                                    ]};\n                                unsafety = Types.Normal }\n                              }))\n                      ]};\n                  unsafety = Types.Normal }\n                })\n           };\n         generic_args =\n         [(Types.Type\n             Types.Adt {\n               def_id =\n               { Types.index = (2, 34057); krate = \"core\";\n                 path =\n                 [{ Types.data = (Types.TypeNs \"iter\"); disambiguator = 0 };\n                   { Types.data = (Types.TypeNs \"adapters\");\n                     disambiguator = 0 };\n                   { Types.data = (Types.TypeNs \"step_by\"); disambiguator = 0\n                     };\n                   { Types.data = (Types.TypeNs \"StepBy\"); disambiguator = 0\n                     }\n                   ]\n                 };\n               generic_args =\n               [(Types.Type\n                   Types.Adt {\n                     def_id =\n                     { Types.index = (2, 32811); krate = \"core\";\n                       path =\n                       [{ Types.data = (Types.TypeNs \"ops\");\n                          disambiguator = 0 };\n                         { Types.data = (Types.TypeNs \"range\");\n                           disambiguator = 0 };\n                         { Types.data = (Types.TypeNs \"Range\");\n                           disambiguator = 0 }\n                         ]\n                       };\n                     generic_args = [(Types.Type (Types.Uint Types.Usize))]})\n                 ]});\n           (Types.Type\n              Types.Adt {\n                def_id =\n                { Types.index = (2, 35003); krate = \"core\";\n                  path =\n                  [{ Types.data = (Types.TypeNs \"option\"); disambiguator = 0\n                     };\n                    { Types.data = (Types.TypeNs \"Option\"); disambiguator = 0\n                      }\n                    ]\n                  };\n                generic_args =\n                [(Types.Type\n                    Types.Adt {\n                      def_id =\n                      { Types.index = (0, 1185); krate = \"bertie\";\n                        path =\n                        [{ Types.data = (Types.TypeNs \"tls13utils\");\n                           disambiguator = 0 };\n                          { Types.data = (Types.TypeNs \"U8\");\n                            disambiguator = 0 }\n                          ]\n                        };\n                      generic_args = []})\n                  ]});\n           (Types.Type\n              (Types.Arrow\n                 { Types.bound_vars = [];\n                   value =\n                   { Types.abi = Types.Abi {todo = \"Rust\"};\n                     c_variadic = false; inputs = [(Types.Uint Types.Usize)];\n                     output =\n                     Types.Adt {\n                       def_id =\n                       { Types.index = (2, 35003); krate = \"core\";\n                         path =\n                         [{ Types.data = (Types.TypeNs \"option\");\n                            disambiguator = 0 };\n                           { Types.data = (Types.TypeNs \"Option\");\n                             disambiguator = 0 }\n                           ]\n                         };\n                       generic_args =\n                       [(Types.Type\n                           Types.Adt {\n                             def_id =\n                             { Types.index = (0, 1185); krate = \"bertie\";\n                               path =\n                               [{ Types.data = (Types.TypeNs \"tls13utils\");\n                                  disambiguator = 0 };\n                                 { Types.data = (Types.TypeNs \"U8\");\n                                   disambiguator = 0 }\n                                 ]\n                               };\n                             generic_args = []})\n                         ]};\n                     unsafety = Types.Normal }\n                   }))\n           ];\n         impl =\n         (Some { Types.args =\n                 [{ Types.args = [];\n                    impl =\n                    Types.Builtin {\n                      trait =\n                      { Types.def_id =\n                        { Types.index = (2, 2689); krate = \"core\";\n                          path =\n                          [{ Types.data = (Types.TypeNs \"marker\");\n                             disambiguator = 0 };\n                            { Types.data = (Types.TypeNs \"Sized\");\n                              disambiguator = 0 }\n                            ]\n                          };\n                        generic_args =\n                        [(Types.Type\n                            Types.Adt {\n                              def_id =\n                              { Types.index = (2, 32811); krate = \"core\";\n                                path =\n                                [{ Types.data = (Types.TypeNs \"ops\");\n                                   disambiguator = 0 };\n                                  { Types.data = (Types.TypeNs \"range\");\n                                    disambiguator = 0 };\n                                  { Types.data = (Types.TypeNs \"Range\");\n                                    disambiguator = 0 }\n                                  ]\n                                };\n                              generic_args =\n                              [(Types.Type (Types.Uint Types.Usize))]})\n                          ]\n                        }}\n                    };\n                   { Types.args =\n                     [{ Types.args = [];\n                        impl =\n                        Types.Builtin {\n                          trait =\n                          { Types.def_id =\n                            { Types.index = (2, 2689); krate = \"core\";\n                              path =\n                              [{ Types.data = (Types.TypeNs \"marker\");\n                                 disambiguator = 0 };\n                                { Types.data = (Types.TypeNs \"Sized\");\n                                  disambiguator = 0 }\n                                ]\n                              };\n                            generic_args =\n                            [(Types.Type (Types.Uint Types.Usize))] }}\n                        };\n                       { Types.args = [];\n                         impl =\n                         Types.Concrete {generics = [];\n                           id =\n                           { Types.index = (2, 34165); krate = \"core\";\n                             path =\n                             [{ Types.data = (Types.TypeNs \"iter\");\n                                disambiguator = 0 };\n                               { Types.data = (Types.TypeNs \"range\");\n                                 disambiguator = 0 };\n                               { Types.data = Types.Impl; disambiguator = 37\n                                 }\n                               ]\n                             }}\n                         }\n                       ];\n                     impl =\n                     Types.Concrete {\n                       generics = [(Types.Type (Types.Uint Types.Usize))];\n                       id =\n                       { Types.index = (2, 6816); krate = \"core\";\n                         path =\n                         [{ Types.data = (Types.TypeNs \"iter\");\n                            disambiguator = 0 };\n                           { Types.data = (Types.TypeNs \"range\");\n                             disambiguator = 0 };\n                           { Types.data = Types.Impl; disambiguator = 3 }]\n                         }}\n                     }\n                   ];\n                 impl =\n                 Types.Concrete {\n                   generics =\n                   [(Types.Type\n                       Types.Adt {\n                         def_id =\n                         { Types.index = (2, 32811); krate = \"core\";\n                           path =\n                           [{ Types.data = (Types.TypeNs \"ops\");\n                              disambiguator = 0 };\n                             { Types.data = (Types.TypeNs \"range\");\n                               disambiguator = 0 };\n                             { Types.data = (Types.TypeNs \"Range\");\n                               disambiguator = 0 }\n                             ]\n                           };\n                         generic_args =\n                         [(Types.Type (Types.Uint Types.Usize))]})\n                     ];\n                   id =\n                   { Types.index = (2, 6419); krate = \"core\";\n                     path =\n                     [{ Types.data = (Types.TypeNs \"iter\"); disambiguator = 0\n                        };\n                       { Types.data = (Types.TypeNs \"adapters\");\n                         disambiguator = 0 };\n                       { Types.data = (Types.TypeNs \"step_by\");\n                         disambiguator = 0 };\n                       { Types.data = Types.Impl; disambiguator = 1 }]\n                     }}\n                 });\n         ty =\n         (Types.Arrow\n            { Types.bound_vars = [];\n              value =\n              { Types.abi = Types.Abi {todo = \"Rust\"}; c_variadic = false;\n                inputs =\n                [Types.Adt {\n                   def_id =\n                   { Types.index = (2, 34057); krate = \"core\";\n                     path =\n                     [{ Types.data = (Types.TypeNs \"iter\"); disambiguator = 0\n                        };\n                       { Types.data = (Types.TypeNs \"adapters\");\n                         disambiguator = 0 };\n                       { Types.data = (Types.TypeNs \"step_by\");\n                         disambiguator = 0 };\n                       { Types.data = (Types.TypeNs \"StepBy\");\n                         disambiguator = 0 }\n                       ]\n                     };\n                   generic_args =\n                   [(Types.Type\n                       Types.Adt {\n                         def_id =\n                         { Types.index = (2, 32811); krate = \"core\";\n                           path =\n                           [{ Types.data = (Types.TypeNs \"ops\");\n                              disambiguator = 0 };\n                             { Types.data = (Types.TypeNs \"range\");\n                               disambiguator = 0 };\n                             { Types.data = (Types.TypeNs \"Range\");\n                               disambiguator = 0 }\n                             ]\n                           };\n                         generic_args =\n                         [(Types.Type (Types.Uint Types.Usize))]})\n                     ]};\n                  (Types.Arrow\n                     { Types.bound_vars = [];\n                       value =\n                       { Types.abi = Types.Abi {todo = \"Rust\"};\n                         c_variadic = false;\n                         inputs = [(Types.Uint Types.Usize)];\n                         output =\n                         Types.Adt {\n                           def_id =\n                           { Types.index = (2, 35003); krate = \"core\";\n                             path =\n                             [{ Types.data = (Types.TypeNs \"option\");\n                                disambiguator = 0 };\n                               { Types.data = (Types.TypeNs \"Option\");\n                                 disambiguator = 0 }\n                               ]\n                             };\n                           generic_args =\n                           [(Types.Type\n                               Types.Adt {\n                                 def_id =\n                                 { Types.index = (0, 1185); krate = \"bertie\";\n                                   path =\n                                   [{ Types.data =\n                                      (Types.TypeNs \"tls13utils\");\n                                      disambiguator = 0 };\n                                     { Types.data = (Types.TypeNs \"U8\");\n                                       disambiguator = 0 }\n                                     ]\n                                   };\n                                 generic_args = []})\n                             ]};\n                         unsafety = Types.Normal }\n                       })\n                  ];\n                output =\n                Types.Adt {\n                  def_id =\n                  { Types.index = (2, 33976); krate = \"core\";\n                    path =\n                    [{ Types.data = (Types.TypeNs \"iter\"); disambiguator = 0\n                       };\n                      { Types.data = (Types.TypeNs \"adapters\");\n                        disambiguator = 0 };\n                      { Types.data = (Types.TypeNs \"map\"); disambiguator = 0\n                        };\n                      { Types.data = (Types.TypeNs \"Map\"); disambiguator = 0\n                        }\n                      ]\n                    };\n                  generic_args =\n                  [(Types.Type\n                      Types.Adt {\n                        def_id =\n                        { Types.index = (2, 34057); krate = \"core\";\n                          path =\n                          [{ Types.data = (Types.TypeNs \"iter\");\n                             disambiguator = 0 };\n                            { Types.data = (Types.TypeNs \"adapters\");\n                              disambiguator = 0 };\n                            { Types.data = (Types.TypeNs \"step_by\");\n                              disambiguator = 0 };\n                            { Types.data = (Types.TypeNs \"StepBy\");\n                              disambiguator = 0 }\n                            ]\n                          };\n                        generic_args =\n                        [(Types.Type\n                            Types.Adt {\n                              def_id =\n                              { Types.index = (2, 32811); krate = \"core\";\n                                path =\n                                [{ Types.data = (Types.TypeNs \"ops\");\n                                   disambiguator = 0 };\n                                  { Types.data = (Types.TypeNs \"range\");\n                                    disambiguator = 0 };\n                                  { Types.data = (Types.TypeNs \"Range\");\n                                    disambiguator = 0 }\n                                  ]\n                                };\n                              generic_args =\n                              [(Types.Type (Types.Uint Types.Usize))]})\n                          ]});\n                    (Types.Type\n                       (Types.Arrow\n                          { Types.bound_vars = [];\n                            value =\n                            { Types.abi = Types.Abi {todo = \"Rust\"};\n                              c_variadic = false;\n                              inputs = [(Types.Uint Types.Usize)];\n                              output =\n                              Types.Adt {\n                                def_id =\n                                { Types.index = (2, 35003); krate = \"core\";\n                                  path =\n                                  [{ Types.data = (Types.TypeNs \"option\");\n                                     disambiguator = 0 };\n                                    { Types.data = (Types.TypeNs \"Option\");\n                                      disambiguator = 0 }\n                                    ]\n                                  };\n                                generic_args =\n                                [(Types.Type\n                                    Types.Adt {\n                                      def_id =\n                                      { Types.index = (0, 1185);\n                                        krate = \"bertie\";\n                                        path =\n                                        [{ Types.data =\n                                           (Types.TypeNs \"tls13utils\");\n                                           disambiguator = 0 };\n                                          { Types.data = (Types.TypeNs \"U8\");\n                                            disambiguator = 0 }\n                                          ]\n                                        };\n                                      generic_args = []})\n                                  ]};\n                              unsafety = Types.Normal }\n                            }))\n                    ]};\n                unsafety = Types.Normal }\n              })};\n       hir_id = (Some (\"706\", \"37\"));\n       span =\n       { Types.filename = (Types.Real (Types.LocalPath \"src/tls13utils.rs\"));\n         hi = { Types.col = \"22\"; line = \"300\" };\n         lo = { Types.col = \"16\"; line = \"295\" } };\n       ty =\n       Types.Adt {\n         def_id =\n         { Types.index = (2, 33976); krate = \"core\";\n           path =\n           [{ Types.data = (Types.TypeNs \"iter\"); disambiguator = 0 };\n             { Types.data = (Types.TypeNs \"adapters\"); disambiguator = 0 };\n             { Types.data = (Types.TypeNs \"map\"); disambiguator = 0 };\n             { Types.data = (Types.TypeNs \"Map\"); disambiguator = 0 }]\n           };\n         generic_args =\n         [(Types.Type\n             Types.Adt {\n               def_id =\n               { Types.index = (2, 34057); krate = \"core\";\n                 path =\n                 [{ Types.data = (Types.TypeNs \"iter\"); disambiguator = 0 };\n                   { Types.data = (Types.TypeNs \"adapters\");\n                     disambiguator = 0 };\n                   { Types.data = (Types.TypeNs \"step_by\"); disambiguator = 0\n                     };\n                   { Types.data = (Types.TypeNs \"StepBy\"); disambiguator = 0\n                     }\n                   ]\n                 };\n               generic_args =\n               [(Types.Type\n                   Types.Adt {\n                     def_id =\n                     { Types.index = (2, 32811); krate = \"core\";\n                       path =\n                       [{ Types.data = (Types.TypeNs \"ops\");\n                          disambiguator = 0 };\n                         { Types.data = (Types.TypeNs \"range\");\n                           disambiguator = 0 };\n                         { Types.data = (Types.TypeNs \"Range\");\n                           disambiguator = 0 }\n                         ]\n                       };\n                     generic_args = [(Types.Type (Types.Uint Types.Usize))]})\n                 ]});\n           (Types.Type\n              (Types.Arrow\n                 { Types.bound_vars = [];\n                   value =\n                   { Types.abi = Types.Abi {todo = \"Rust\"};\n                     c_variadic = false; inputs = [(Types.Uint Types.Usize)];\n                     output =\n                     Types.Adt {\n                       def_id =\n                       { Types.index = (2, 35003); krate = \"core\";\n                         path =\n                         [{ Types.data = (Types.TypeNs \"option\");\n                            disambiguator = 0 };\n                           { Types.data = (Types.TypeNs \"Option\");\n                             disambiguator = 0 }\n                           ]\n                         };\n                       generic_args =\n                       [(Types.Type\n                           Types.Adt {\n                             def_id =\n                             { Types.index = (0, 1185); krate = \"bertie\";\n                               path =\n                               [{ Types.data = (Types.TypeNs \"tls13utils\");\n                                  disambiguator = 0 };\n                                 { Types.data = (Types.TypeNs \"U8\");\n                                   disambiguator = 0 }\n                                 ]\n                               };\n                             generic_args = []})\n                         ]};\n                     unsafety = Types.Normal }\n                   }))\n           ]}\n       }\n      ];\n    fn_span =\n    { Types.filename = (Types.Real (Types.LocalPath \"src/tls13utils.rs\"));\n      hi = { Types.col = \"49\"; line = \"301\" };\n      lo = { Types.col = \"21\"; line = \"301\" } };\n    from_hir_call = true;\n    fun' =\n    { Types.attributes = [];\n      contents =\n      Types.GlobalName {\n        id =\n        { Types.index = (2, 7380); krate = \"core\";\n          path =\n          [{ Types.data = (Types.TypeNs \"iter\"); disambiguator = 0 };\n            { Types.data = (Types.TypeNs \"traits\"); disambiguator = 0 };\n            { Types.data = (Types.TypeNs \"iterator\"); disambiguator = 0 };\n            { Types.data = (Types.TypeNs \"Iterator\"); disambiguator = 0 };\n            { Types.data = (Types.ValueNs \"collect\"); disambiguator = 0 }]\n          }};\n      hir_id = None;\n      span =\n      { Types.filename = (Types.Real (Types.LocalPath \"src/tls13utils.rs\"));\n        hi = { Types.col = \"28\"; line = \"301\" };\n        lo = { Types.col = \"21\"; line = \"301\" } };\n      ty =\n      (Types.Arrow\n         { Types.bound_vars = [];\n           value =\n           { Types.abi = Types.Abi {todo = \"Rust\"}; c_variadic = false;\n             inputs =\n             [Types.Adt {\n                def_id =\n                { Types.index = (2, 33976); krate = \"core\";\n                  path =\n                  [{ Types.data = (Types.TypeNs \"iter\"); disambiguator = 0 };\n                    { Types.data = (Types.TypeNs \"adapters\");\n                      disambiguator = 0 };\n                    { Types.data = (Types.TypeNs \"map\"); disambiguator = 0 };\n                    { Types.data = (Types.TypeNs \"Map\"); disambiguator = 0 }]\n                  };\n                generic_args =\n                [(Types.Type\n                    Types.Adt {\n                      def_id =\n                      { Types.index = (2, 34057); krate = \"core\";\n                        path =\n                        [{ Types.data = (Types.TypeNs \"iter\");\n                           disambiguator = 0 };\n                          { Types.data = (Types.TypeNs \"adapters\");\n                            disambiguator = 0 };\n                          { Types.data = (Types.TypeNs \"step_by\");\n                            disambiguator = 0 };\n                          { Types.data = (Types.TypeNs \"StepBy\");\n                            disambiguator = 0 }\n                          ]\n                        };\n                      generic_args =\n                      [(Types.Type\n                          Types.Adt {\n                            def_id =\n                            { Types.index = (2, 32811); krate = \"core\";\n                              path =\n                              [{ Types.data = (Types.TypeNs \"ops\");\n                                 disambiguator = 0 };\n                                { Types.data = (Types.TypeNs \"range\");\n                                  disambiguator = 0 };\n                                { Types.data = (Types.TypeNs \"Range\");\n                                  disambiguator = 0 }\n                                ]\n                              };\n                            generic_args =\n                            [(Types.Type (Types.Uint Types.Usize))]})\n                        ]});\n                  (Types.Type\n                     (Types.Arrow\n                        { Types.bound_vars = [];\n                          value =\n                          { Types.abi = Types.Abi {todo = \"Rust\"};\n                            c_variadic = false;\n                            inputs = [(Types.Uint Types.Usize)];\n                            output =\n                            Types.Adt {\n                              def_id =\n                              { Types.index = (2, 35003); krate = \"core\";\n                                path =\n                                [{ Types.data = (Types.TypeNs \"option\");\n                                   disambiguator = 0 };\n                                  { Types.data = (Types.TypeNs \"Option\");\n                                    disambiguator = 0 }\n                                  ]\n                                };\n                              generic_args =\n                              [(Types.Type\n                                  Types.Adt {\n                                    def_id =\n                                    { Types.index = (0, 1185);\n                                      krate = \"bertie\";\n                                      path =\n                                      [{ Types.data =\n                                         (Types.TypeNs \"tls13utils\");\n                                         disambiguator = 0 };\n                                        { Types.data = (Types.TypeNs \"U8\");\n                                          disambiguator = 0 }\n                                        ]\n                                      };\n                                    generic_args = []})\n                                ]};\n                            unsafety = Types.Normal }\n                          }))\n                  ]}\n               ];\n             output =\n             Types.Adt {\n               def_id =\n               { Types.index = (2, 35003); krate = \"core\";\n                 path =\n                 [{ Types.data = (Types.TypeNs \"option\"); disambiguator = 0 };\n                   { Types.data = (Types.TypeNs \"Option\"); disambiguator = 0\n                     }\n                   ]\n                 };\n               generic_args =\n               [(Types.Type\n                   Types.Adt {\n                     def_id =\n                     { Types.index = (5, 6696); krate = \"alloc\";\n                       path =\n                       [{ Types.data = (Types.TypeNs \"vec\");\n                          disambiguator = 0 };\n                         { Types.data = (Types.TypeNs \"Vec\");\n                           disambiguator = 0 }\n                         ]\n                       };\n                     generic_args =\n                     [(Types.Type\n                         Types.Adt {\n                           def_id =\n                           { Types.index = (0, 1185); krate = \"bertie\";\n                             path =\n                             [{ Types.data = (Types.TypeNs \"tls13utils\");\n                                disambiguator = 0 };\n                               { Types.data = (Types.TypeNs \"U8\");\n                                 disambiguator = 0 }\n                               ]\n                             };\n                           generic_args = []});\n                       (Types.Type\n                          Types.Adt {\n                            def_id =\n                            { Types.index = (5, 7004); krate = \"alloc\";\n                              path =\n                              [{ Types.data = (Types.TypeNs \"alloc\");\n                                 disambiguator = 0 };\n                                { Types.data = (Types.TypeNs \"Global\");\n                                  disambiguator = 0 }\n                                ]\n                              };\n                            generic_args = []})\n                       ]})\n                 ]};\n             unsafety = Types.Normal }\n           })\n      };\n    generic_args =\n    [(Types.Type\n        Types.Adt {\n          def_id =\n          { Types.index = (2, 33976); krate = \"core\";\n            path =\n            [{ Types.data = (Types.TypeNs \"iter\"); disambiguator = 0 };\n              { Types.data = (Types.TypeNs \"adapters\"); disambiguator = 0 };\n              { Types.data = (Types.TypeNs \"map\"); disambiguator = 0 };\n              { Types.data = (Types.TypeNs \"Map\"); disambiguator = 0 }]\n            };\n          generic_args =\n          [(Types.Type\n              Types.Adt {\n                def_id =\n                { Types.index = (2, 34057); krate = \"core\";\n                  path =\n                  [{ Types.data = (Types.TypeNs \"iter\"); disambiguator = 0 };\n                    { Types.data = (Types.TypeNs \"adapters\");\n                      disambiguator = 0 };\n                    { Types.data = (Types.TypeNs \"step_by\");\n                      disambiguator = 0 };\n                    { Types.data = (Types.TypeNs \"StepBy\"); disambiguator = 0\n                      }\n                    ]\n                  };\n                generic_args =\n                [(Types.Type\n                    Types.Adt {\n                      def_id =\n                      { Types.index = (2, 32811); krate = \"core\";\n                        path =\n                        [{ Types.data = (Types.TypeNs \"ops\");\n                           disambiguator = 0 };\n                          { Types.data = (Types.TypeNs \"range\");\n                            disambiguator = 0 };\n                          { Types.data = (Types.TypeNs \"Range\");\n                            disambiguator = 0 }\n                          ]\n                        };\n                      generic_args = [(Types.Type (Types.Uint Types.Usize))]})\n                  ]});\n            (Types.Type\n               (Types.Arrow\n                  { Types.bound_vars = [];\n                    value =\n                    { Types.abi = Types.Abi {todo = \"Rust\"};\n                      c_variadic = false;\n                      inputs = [(Types.Uint Types.Usize)];\n                      output =\n                      Types.Adt {\n                        def_id =\n                        { Types.index = (2, 35003); krate = \"core\";\n                          path =\n                          [{ Types.data = (Types.TypeNs \"option\");\n                             disambiguator = 0 };\n                            { Types.data = (Types.TypeNs \"Option\");\n                              disambiguator = 0 }\n                            ]\n                          };\n                        generic_args =\n                        [(Types.Type\n                            Types.Adt {\n                              def_id =\n                              { Types.index = (0, 1185); krate = \"bertie\";\n                                path =\n                                [{ Types.data = (Types.TypeNs \"tls13utils\");\n                                   disambiguator = 0 };\n                                  { Types.data = (Types.TypeNs \"U8\");\n                                    disambiguator = 0 }\n                                  ]\n                                };\n                              generic_args = []})\n                          ]};\n                      unsafety = Types.Normal }\n                    }))\n            ]});\n      (Types.Type\n         Types.Adt {\n           def_id =\n           { Types.index = (2, 35003); krate = \"core\";\n             path =\n             [{ Types.data = (Types.TypeNs \"option\"); disambiguator = 0 };\n               { Types.data = (Types.TypeNs \"Option\"); disambiguator = 0 }]\n             };\n           generic_args =\n           [(Types.Type\n               Types.Adt {\n                 def_id =\n                 { Types.index = (5, 6696); krate = \"alloc\";\n                   path =\n                   [{ Types.data = (Types.TypeNs \"vec\"); disambiguator = 0 };\n                     { Types.data = (Types.TypeNs \"Vec\"); disambiguator = 0 }\n                     ]\n                   };\n                 generic_args =\n                 [(Types.Type\n                     Types.Adt {\n                       def_id =\n                       { Types.index = (0, 1185); krate = \"bertie\";\n                         path =\n                         [{ Types.data = (Types.TypeNs \"tls13utils\");\n                            disambiguator = 0 };\n                           { Types.data = (Types.TypeNs \"U8\");\n                             disambiguator = 0 }\n                           ]\n                         };\n                       generic_args = []});\n                   (Types.Type\n                      Types.Adt {\n                        def_id =\n                        { Types.index = (5, 7004); krate = \"alloc\";\n                          path =\n                          [{ Types.data = (Types.TypeNs \"alloc\");\n                             disambiguator = 0 };\n                            { Types.data = (Types.TypeNs \"Global\");\n                              disambiguator = 0 }\n                            ]\n                          };\n                        generic_args = []})\n                   ]})\n             ]})\n      ];\n    impl =\n    (Some { Types.args =\n            [{ Types.args = [];\n               impl =\n               Types.Builtin {\n                 trait =\n                 { Types.def_id =\n                   { Types.index = (2, 2689); krate = \"core\";\n                     path =\n                     [{ Types.data = (Types.TypeNs \"marker\");\n                        disambiguator = 0 };\n                       { Types.data = (Types.TypeNs \"Sized\");\n                         disambiguator = 0 }\n                       ]\n                     };\n                   generic_args =\n                   [(Types.Type\n                       Types.Adt {\n                         def_id =\n                         { Types.index = (2, 32811); krate = \"core\";\n                           path =\n                           [{ Types.data = (Types.TypeNs \"ops\");\n                              disambiguator = 0 };\n                             { Types.data = (Types.TypeNs \"range\");\n                               disambiguator = 0 };\n                             { Types.data = (Types.TypeNs \"Range\");\n                               disambiguator = 0 }\n                             ]\n                           };\n                         generic_args =\n                         [(Types.Type (Types.Uint Types.Usize))]})\n                     ]\n                   }}\n               };\n              { Types.args =\n                [{ Types.args = [];\n                   impl =\n                   Types.Builtin {\n                     trait =\n                     { Types.def_id =\n                       { Types.index = (2, 2689); krate = \"core\";\n                         path =\n                         [{ Types.data = (Types.TypeNs \"marker\");\n                            disambiguator = 0 };\n                           { Types.data = (Types.TypeNs \"Sized\");\n                             disambiguator = 0 }\n                           ]\n                         };\n                       generic_args = [(Types.Type (Types.Uint Types.Usize))]\n                       }}\n                   };\n                  { Types.args = [];\n                    impl =\n                    Types.Concrete {generics = [];\n                      id =\n                      { Types.index = (2, 34165); krate = \"core\";\n                        path =\n                        [{ Types.data = (Types.TypeNs \"iter\");\n                           disambiguator = 0 };\n                          { Types.data = (Types.TypeNs \"range\");\n                            disambiguator = 0 };\n                          { Types.data = Types.Impl; disambiguator = 37 }]\n                        }}\n                    }\n                  ];\n                impl =\n                Types.Concrete {\n                  generics = [(Types.Type (Types.Uint Types.Usize))];\n                  id =\n                  { Types.index = (2, 6816); krate = \"core\";\n                    path =\n                    [{ Types.data = (Types.TypeNs \"iter\"); disambiguator = 0\n                       };\n                      { Types.data = (Types.TypeNs \"range\");\n                        disambiguator = 0 };\n                      { Types.data = Types.Impl; disambiguator = 3 }]\n                    }}\n                };\n              { Types.args = [];\n                impl =\n                Types.Builtin {\n                  trait =\n                  { Types.def_id =\n                    { Types.index = (2, 2689); krate = \"core\";\n                      path =\n                      [{ Types.data = (Types.TypeNs \"marker\");\n                         disambiguator = 0 };\n                        { Types.data = (Types.TypeNs \"Sized\");\n                          disambiguator = 0 }\n                        ]\n                      };\n                    generic_args = [(Types.Type (Types.Uint Types.Usize))] }}\n                };\n              { Types.args = [];\n                impl =\n                Types.Concrete {generics = [];\n                  id =\n                  { Types.index = (2, 34165); krate = \"core\";\n                    path =\n                    [{ Types.data = (Types.TypeNs \"iter\"); disambiguator = 0\n                       };\n                      { Types.data = (Types.TypeNs \"range\");\n                        disambiguator = 0 };\n                      { Types.data = Types.Impl; disambiguator = 37 }]\n                    }}\n                };\n              { Types.args = [];\n                impl =\n                Types.Builtin {\n                  trait =\n                  { Types.def_id =\n                    { Types.index = (2, 2689); krate = \"core\";\n                      path =\n                      [{ Types.data = (Types.TypeNs \"marker\");\n                         disambiguator = 0 };\n                        { Types.data = (Types.TypeNs \"Sized\");\n                          disambiguator = 0 }\n                        ]\n                      };\n                    generic_args =\n                    [(Types.Type\n                        Types.Adt {\n                          def_id =\n                          { Types.index = (2, 34057); krate = \"core\";\n                            path =\n                            [{ Types.data = (Types.TypeNs \"iter\");\n                               disambiguator = 0 };\n                              { Types.data = (Types.TypeNs \"adapters\");\n                                disambiguator = 0 };\n                              { Types.data = (Types.TypeNs \"step_by\");\n                                disambiguator = 0 };\n                              { Types.data = (Types.TypeNs \"StepBy\");\n                                disambiguator = 0 }\n                              ]\n                            };\n                          generic_args =\n                          [(Types.Type\n                              Types.Adt {\n                                def_id =\n                                { Types.index = (2, 32811); krate = \"core\";\n                                  path =\n                                  [{ Types.data = (Types.TypeNs \"ops\");\n                                     disambiguator = 0 };\n                                    { Types.data = (Types.TypeNs \"range\");\n                                      disambiguator = 0 };\n                                    { Types.data = (Types.TypeNs \"Range\");\n                                      disambiguator = 0 }\n                                    ]\n                                  };\n                                generic_args =\n                                [(Types.Type (Types.Uint Types.Usize))]})\n                            ]})\n                      ]\n                    }}\n                };\n              { Types.args = [];\n                impl =\n                Types.Builtin {\n                  trait =\n                  { Types.def_id =\n                    { Types.index = (2, 2689); krate = \"core\";\n                      path =\n                      [{ Types.data = (Types.TypeNs \"marker\");\n                         disambiguator = 0 };\n                        { Types.data = (Types.TypeNs \"Sized\");\n                          disambiguator = 0 }\n                        ]\n                      };\n                    generic_args =\n                    [(Types.Type\n                        (Types.Arrow\n                           { Types.bound_vars = [];\n                             value =\n                             { Types.abi = Types.Abi {todo = \"Rust\"};\n                               c_variadic = false;\n                               inputs = [(Types.Uint Types.Usize)];\n                               output =\n                               Types.Adt {\n                                 def_id =\n                                 { Types.index = (2, 35003); krate = \"core\";\n                                   path =\n                                   [{ Types.data = (Types.TypeNs \"option\");\n                                      disambiguator = 0 };\n                                     { Types.data = (Types.TypeNs \"Option\");\n                                       disambiguator = 0 }\n                                     ]\n                                   };\n                                 generic_args =\n                                 [(Types.Type\n                                     Types.Adt {\n                                       def_id =\n                                       { Types.index = (0, 1185);\n                                         krate = \"bertie\";\n                                         path =\n                                         [{ Types.data =\n                                            (Types.TypeNs \"tls13utils\");\n                                            disambiguator = 0 };\n                                           { Types.data = (Types.TypeNs \"U8\");\n                                             disambiguator = 0 }\n                                           ]\n                                         };\n                                       generic_args = []})\n                                   ]};\n                               unsafety = Types.Normal }\n                             }))\n                      ]\n                    }}\n                };\n              { Types.args =\n                [{ Types.args = [];\n                   impl =\n                   Types.Builtin {\n                     trait =\n                     { Types.def_id =\n                       { Types.index = (2, 2689); krate = \"core\";\n                         path =\n                         [{ Types.data = (Types.TypeNs \"marker\");\n                            disambiguator = 0 };\n                           { Types.data = (Types.TypeNs \"Sized\");\n                             disambiguator = 0 }\n                           ]\n                         };\n                       generic_args =\n                       [(Types.Type\n                           Types.Adt {\n                             def_id =\n                             { Types.index = (2, 32811); krate = \"core\";\n                               path =\n                               [{ Types.data = (Types.TypeNs \"ops\");\n                                  disambiguator = 0 };\n                                 { Types.data = (Types.TypeNs \"range\");\n                                   disambiguator = 0 };\n                                 { Types.data = (Types.TypeNs \"Range\");\n                                   disambiguator = 0 }\n                                 ]\n                               };\n                             generic_args =\n                             [(Types.Type (Types.Uint Types.Usize))]})\n                         ]\n                       }}\n                   };\n                  { Types.args =\n                    [{ Types.args = [];\n                       impl =\n                       Types.Builtin {\n                         trait =\n                         { Types.def_id =\n                           { Types.index = (2, 2689); krate = \"core\";\n                             path =\n                             [{ Types.data = (Types.TypeNs \"marker\");\n                                disambiguator = 0 };\n                               { Types.data = (Types.TypeNs \"Sized\");\n                                 disambiguator = 0 }\n                               ]\n                             };\n                           generic_args =\n                           [(Types.Type (Types.Uint Types.Usize))] }}\n                       };\n                      { Types.args = [];\n                        impl =\n                        Types.Concrete {generics = [];\n                          id =\n                          { Types.index = (2, 34165); krate = \"core\";\n                            path =\n                            [{ Types.data = (Types.TypeNs \"iter\");\n                               disambiguator = 0 };\n                              { Types.data = (Types.TypeNs \"range\");\n                                disambiguator = 0 };\n                              { Types.data = Types.Impl; disambiguator = 37 }\n                              ]\n                            }}\n                        }\n                      ];\n                    impl =\n                    Types.Concrete {\n                      generics = [(Types.Type (Types.Uint Types.Usize))];\n                      id =\n                      { Types.index = (2, 6816); krate = \"core\";\n                        path =\n                        [{ Types.data = (Types.TypeNs \"iter\");\n                           disambiguator = 0 };\n                          { Types.data = (Types.TypeNs \"range\");\n                            disambiguator = 0 };\n                          { Types.data = Types.Impl; disambiguator = 3 }]\n                        }}\n                    }\n                  ];\n                impl =\n                Types.Concrete {\n                  generics =\n                  [(Types.Type\n                      Types.Adt {\n                        def_id =\n                        { Types.index = (2, 32811); krate = \"core\";\n                          path =\n                          [{ Types.data = (Types.TypeNs \"ops\");\n                             disambiguator = 0 };\n                            { Types.data = (Types.TypeNs \"range\");\n                              disambiguator = 0 };\n                            { Types.data = (Types.TypeNs \"Range\");\n                              disambiguator = 0 }\n                            ]\n                          };\n                        generic_args =\n                        [(Types.Type (Types.Uint Types.Usize))]})\n                    ];\n                  id =\n                  { Types.index = (2, 6419); krate = \"core\";\n                    path =\n                    [{ Types.data = (Types.TypeNs \"iter\"); disambiguator = 0\n                       };\n                      { Types.data = (Types.TypeNs \"adapters\");\n                        disambiguator = 0 };\n                      { Types.data = (Types.TypeNs \"step_by\");\n                        disambiguator = 0 };\n                      { Types.data = Types.Impl; disambiguator = 1 }]\n                    }}\n                };\n              { Types.args = [];\n                impl =\n                Types.Builtin {\n                  trait =\n                  { Types.def_id =\n                    { Types.index = (2, 2689); krate = \"core\";\n                      path =\n                      [{ Types.data = (Types.TypeNs \"marker\");\n                         disambiguator = 0 };\n                        { Types.data = (Types.TypeNs \"Sized\");\n                          disambiguator = 0 }\n                        ]\n                      };\n                    generic_args =\n                    [(Types.Type\n                        Types.Adt {\n                          def_id =\n                          { Types.index = (2, 32811); krate = \"core\";\n                            path =\n                            [{ Types.data = (Types.TypeNs \"ops\");\n                               disambiguator = 0 };\n                              { Types.data = (Types.TypeNs \"range\");\n                                disambiguator = 0 };\n                              { Types.data = (Types.TypeNs \"Range\");\n                                disambiguator = 0 }\n                              ]\n                            };\n                          generic_args =\n                          [(Types.Type (Types.Uint Types.Usize))]})\n                      ]\n                    }}\n                };\n              { Types.args =\n                [{ Types.args = [];\n                   impl =\n                   Types.Builtin {\n                     trait =\n                     { Types.def_id =\n                       { Types.index = (2, 2689); krate = \"core\";\n                         path =\n                         [{ Types.data = (Types.TypeNs \"marker\");\n                            disambiguator = 0 };\n                           { Types.data = (Types.TypeNs \"Sized\");\n                             disambiguator = 0 }\n                           ]\n                         };\n                       generic_args = [(Types.Type (Types.Uint Types.Usize))]\n                       }}\n                   };\n                  { Types.args = [];\n                    impl =\n                    Types.Concrete {generics = [];\n                      id =\n                      { Types.index = (2, 34165); krate = \"core\";\n                        path =\n                        [{ Types.data = (Types.TypeNs \"iter\");\n                           disambiguator = 0 };\n                          { Types.data = (Types.TypeNs \"range\");\n                            disambiguator = 0 };\n                          { Types.data = Types.Impl; disambiguator = 37 }]\n                        }}\n                    }\n                  ];\n                impl =\n                Types.Concrete {\n                  generics = [(Types.Type (Types.Uint Types.Usize))];\n                  id =\n                  { Types.index = (2, 6816); krate = \"core\";\n                    path =\n                    [{ Types.data = (Types.TypeNs \"iter\"); disambiguator = 0\n                       };\n                      { Types.data = (Types.TypeNs \"range\");\n                        disambiguator = 0 };\n                      { Types.data = Types.Impl; disambiguator = 3 }]\n                    }}\n                };\n              { Types.args = [];\n                impl =\n                Types.Builtin {\n                  trait =\n                  { Types.def_id =\n                    { Types.index = (2, 2689); krate = \"core\";\n                      path =\n                      [{ Types.data = (Types.TypeNs \"marker\");\n                         disambiguator = 0 };\n                        { Types.data = (Types.TypeNs \"Sized\");\n                          disambiguator = 0 }\n                        ]\n                      };\n                    generic_args = [(Types.Type (Types.Uint Types.Usize))] }}\n                };\n              { Types.args = [];\n                impl =\n                Types.Concrete {generics = [];\n                  id =\n                  { Types.index = (2, 34165); krate = \"core\";\n                    path =\n                    [{ Types.data = (Types.TypeNs \"iter\"); disambiguator = 0\n                       };\n                      { Types.data = (Types.TypeNs \"range\");\n                        disambiguator = 0 };\n                      { Types.data = Types.Impl; disambiguator = 37 }]\n                    }}\n                };\n              { Types.args = [];\n                impl =\n                (Types.Todo\n                   \"ImplExprAtom::Todo(see https://github.com/hacspec/hax/issues/381) ImplSourceClosureData(closure_def_id=DefId(0:707 ~ bertie[6a41]::tls13utils::{impl#18}::from_hex::{closure#0}), substs=[i16, extern \\\"rust-call\\\" fn((usize,)) -> std::option::Option<tls13utils::U8>, (&std::string::String,)], nested=[Obligation(predicate=Binder(ClosureKind(DefId(0:707 ~ bertie[6a41]::tls13utils::{impl#18}::from_hex::{closure#0}), [i16, extern \\\"rust-call\\\" fn((usize,)) -> std::option::Option<tls13utils::U8>, (&std::string::String,)], FnMut), []), depth=1)])\\n\\nBinder(\\n    <[closure@src/tls13utils.rs:297:26: 297:29] as std::ops::FnMut<(usize,)>>,\\n    [],\\n)\")\n                };\n              { Types.args = [];\n                impl =\n                (Types.Todo\n                   \"impl_expr failed on Binder(\\n    <_ as std::marker::Sized>,\\n    [],\\n)\")\n                }\n              ];\n            impl =\n            Types.Concrete {\n              generics =\n              [(Types.Type (Types.Infer Types.TyVar));\n                (Types.Type\n                   Types.Adt {\n                     def_id =\n                     { Types.index = (2, 34057); krate = \"core\";\n                       path =\n                       [{ Types.data = (Types.TypeNs \"iter\");\n                          disambiguator = 0 };\n                         { Types.data = (Types.TypeNs \"adapters\");\n                           disambiguator = 0 };\n                         { Types.data = (Types.TypeNs \"step_by\");\n                           disambiguator = 0 };\n                         { Types.data = (Types.TypeNs \"StepBy\");\n                           disambiguator = 0 }\n                         ]\n                       };\n                     generic_args =\n                     [(Types.Type\n                         Types.Adt {\n                           def_id =\n                           { Types.index = (2, 32811); krate = \"core\";\n                             path =\n                             [{ Types.data = (Types.TypeNs \"ops\");\n                                disambiguator = 0 };\n                               { Types.data = (Types.TypeNs \"range\");\n                                 disambiguator = 0 };\n                               { Types.data = (Types.TypeNs \"Range\");\n                                 disambiguator = 0 }\n                               ]\n                             };\n                           generic_args =\n                           [(Types.Type (Types.Uint Types.Usize))]})\n                       ]});\n                (Types.Type\n                   (Types.Arrow\n                      { Types.bound_vars = [];\n                        value =\n                        { Types.abi = Types.Abi {todo = \"Rust\"};\n                          c_variadic = false;\n                          inputs = [(Types.Uint Types.Usize)];\n                          output =\n                          Types.Adt {\n                            def_id =\n                            { Types.index = (2, 35003); krate = \"core\";\n                              path =\n                              [{ Types.data = (Types.TypeNs \"option\");\n                                 disambiguator = 0 };\n                                { Types.data = (Types.TypeNs \"Option\");\n                                  disambiguator = 0 }\n                                ]\n                              };\n                            generic_args =\n                            [(Types.Type\n                                Types.Adt {\n                                  def_id =\n                                  { Types.index = (0, 1185);\n                                    krate = \"bertie\";\n                                    path =\n                                    [{ Types.data =\n                                       (Types.TypeNs \"tls13utils\");\n                                       disambiguator = 0 };\n                                      { Types.data = (Types.TypeNs \"U8\");\n                                        disambiguator = 0 }\n                                      ]\n                                    };\n                                  generic_args = []})\n                              ]};\n                          unsafety = Types.Normal }\n                        }))\n                ];\n              id =\n              { Types.index = (2, 6060); krate = \"core\";\n                path =\n                [{ Types.data = (Types.TypeNs \"iter\"); disambiguator = 0 };\n                  { Types.data = (Types.TypeNs \"adapters\"); disambiguator = 0\n                    };\n                  { Types.data = (Types.TypeNs \"map\"); disambiguator = 0 };\n                  { Types.data = Types.Impl; disambiguator = 2 }]\n                }}\n            });\n    ty =\n    (Types.Arrow\n       { Types.bound_vars = [];\n         value =\n         { Types.abi = Types.Abi {todo = \"Rust\"}; c_variadic = false;\n           inputs =\n           [Types.Adt {\n              def_id =\n              { Types.index = (2, 33976); krate = \"core\";\n                path =\n                [{ Types.data = (Types.TypeNs \"iter\"); disambiguator = 0 };\n                  { Types.data = (Types.TypeNs \"adapters\"); disambiguator = 0\n                    };\n                  { Types.data = (Types.TypeNs \"map\"); disambiguator = 0 };\n                  { Types.data = (Types.TypeNs \"Map\"); disambiguator = 0 }]\n                };\n              generic_args =\n              [(Types.Type\n                  Types.Adt {\n                    def_id =\n                    { Types.index = (2, 34057); krate = \"core\";\n                      path =\n                      [{ Types.data = (Types.TypeNs \"iter\");\n                         disambiguator = 0 };\n                        { Types.data = (Types.TypeNs \"adapters\");\n                          disambiguator = 0 };\n                        { Types.data = (Types.TypeNs \"step_by\");\n                          disambiguator = 0 };\n                        { Types.data = (Types.TypeNs \"StepBy\");\n                          disambiguator = 0 }\n                        ]\n                      };\n                    generic_args =\n                    [(Types.Type\n                        Types.Adt {\n                          def_id =\n                          { Types.index = (2, 32811); krate = \"core\";\n                            path =\n                            [{ Types.data = (Types.TypeNs \"ops\");\n                               disambiguator = 0 };\n                              { Types.data = (Types.TypeNs \"range\");\n                                disambiguator = 0 };\n                              { Types.data = (Types.TypeNs \"Range\");\n                                disambiguator = 0 }\n                              ]\n                            };\n                          generic_args =\n                          [(Types.Type (Types.Uint Types.Usize))]})\n                      ]});\n                (Types.Type\n                   (Types.Arrow\n                      { Types.bound_vars = [];\n                        value =\n                        { Types.abi = Types.Abi {todo = \"Rust\"};\n                          c_variadic = false;\n                          inputs = [(Types.Uint Types.Usize)];\n                          output =\n                          Types.Adt {\n                            def_id =\n                            { Types.index = (2, 35003); krate = \"core\";\n                              path =\n                              [{ Types.data = (Types.TypeNs \"option\");\n                                 disambiguator = 0 };\n                                { Types.data = (Types.TypeNs \"Option\");\n                                  disambiguator = 0 }\n                                ]\n                              };\n                            generic_args =\n                            [(Types.Type\n                                Types.Adt {\n                                  def_id =\n                                  { Types.index = (0, 1185);\n                                    krate = \"bertie\";\n                                    path =\n                                    [{ Types.data =\n                                       (Types.TypeNs \"tls13utils\");\n                                       disambiguator = 0 };\n                                      { Types.data = (Types.TypeNs \"U8\");\n                                        disambiguator = 0 }\n                                      ]\n                                    };\n                                  generic_args = []})\n                              ]};\n                          unsafety = Types.Normal }\n                        }))\n                ]}\n             ];\n           output =\n           Types.Adt {\n             def_id =\n             { Types.index = (2, 35003); krate = \"core\";\n               path =\n               [{ Types.data = (Types.TypeNs \"option\"); disambiguator = 0 };\n                 { Types.data = (Types.TypeNs \"Option\"); disambiguator = 0 }]\n               };\n             generic_args =\n             [(Types.Type\n                 Types.Adt {\n                   def_id =\n                   { Types.index = (5, 6696); krate = \"alloc\";\n                     path =\n                     [{ Types.data = (Types.TypeNs \"vec\"); disambiguator = 0\n                        };\n                       { Types.data = (Types.TypeNs \"Vec\"); disambiguator = 0\n                         }\n                       ]\n                     };\n                   generic_args =\n                   [(Types.Type\n                       Types.Adt {\n                         def_id =\n                         { Types.index = (0, 1185); krate = \"bertie\";\n                           path =\n                           [{ Types.data = (Types.TypeNs \"tls13utils\");\n                              disambiguator = 0 };\n                             { Types.data = (Types.TypeNs \"U8\");\n                               disambiguator = 0 }\n                             ]\n                           };\n                         generic_args = []});\n                     (Types.Type\n                        Types.Adt {\n                          def_id =\n                          { Types.index = (5, 7004); krate = \"alloc\";\n                            path =\n                            [{ Types.data = (Types.TypeNs \"alloc\");\n                               disambiguator = 0 };\n                              { Types.data = (Types.TypeNs \"Global\");\n                                disambiguator = 0 }\n                              ]\n                            };\n                          generic_args = []})\n                     ]})\n               ]};\n           unsafety = Types.Normal }\n         })};\n  hir_id = (Some (\"706\", \"29\"));\n  span =\n  { Types.filename = (Types.Real (Types.LocalPath \"src/tls13utils.rs\"));\n    hi = { Types.col = \"49\"; line = \"301\" };\n    lo = { Types.col = \"16\"; line = \"295\" } };\n  ty =\n  Types.Adt {\n    def_id =\n    { Types.index = (2, 35003); krate = \"core\";\n      path =\n      [{ Types.data = (Types.TypeNs \"option\"); disambiguator = 0 };\n        { Types.data = (Types.TypeNs \"Option\"); disambiguator = 0 }]\n      };\n    generic_args =\n    [(Types.Type\n        Types.Adt {\n          def_id =\n          { Types.index = (5, 6696); krate = \"alloc\";\n            path =\n            [{ Types.data = (Types.TypeNs \"vec\"); disambiguator = 0 };\n              { Types.data = (Types.TypeNs \"Vec\"); disambiguator = 0 }]\n            };\n          generic_args =\n          [(Types.Type\n              Types.Adt {\n                def_id =\n                { Types.index = (0, 1185); krate = \"bertie\";\n                  path =\n                  [{ Types.data = (Types.TypeNs \"tls13utils\");\n                     disambiguator = 0 };\n                    { Types.data = (Types.TypeNs \"U8\"); disambiguator = 0 }]\n                  };\n                generic_args = []});\n            (Types.Type\n               Types.Adt {\n                 def_id =\n                 { Types.index = (5, 7004); krate = \"alloc\";\n                   path =\n                   [{ Types.data = (Types.TypeNs \"alloc\"); disambiguator = 0\n                      };\n                     { Types.data = (Types.TypeNs \"Global\");\n                       disambiguator = 0 }\n                     ]\n                   };\n                 generic_args = []})\n            ]})\n      ]}\n  }"

          <:
          Core.Option.t_Option (Alloc.Vec.t_Vec t_U8 Alloc.Alloc.t_Global))
        "Not a hex string1")
    <:
    t_Bytes
  else
    Rust_primitives.Hax.never_to_any (Core.Panicking.panic_fmt (Core.Fmt.impl_2__new_v1 (Rust_primitives.unsize
                  (let list = ["internal error: entered unreachable code: Not a hex string2"] in
                    FStar.Pervasives.assert_norm (Prims.eq2 (List.Tot.length list) 1);
                    Rust_primitives.Hax.array_of_list list)
                <:
                t_Slice string)
              (Rust_primitives.unsize (Core.Fmt.Rt.impl_1__none ()
                    <:
                    t_Array Core.Fmt.Rt.t_Argument (sz 0))
                <:
                t_Slice Core.Fmt.Rt.t_Argument)
            <:
            Core.Fmt.t_Arguments)
        <:
        Rust_primitives.Hax.t_Never)

let impl__Bytes__from_slice (s: t_Slice u8) : t_Bytes = Core.Convert.f_into s

let impl__Bytes__is_empty (self: t_Bytes) : bool = Alloc.Vec.impl_1__is_empty self._0

let impl__Bytes__len (self: t_Bytes) : usize = Alloc.Vec.impl_1__len self._0

let impl__Bytes__new (_: Prims.unit) : t_Bytes = Bytes (Alloc.Vec.impl__new ()) <: t_Bytes

let impl__Bytes__push (self: t_Bytes) (x: t_U8) : t_Bytes =
  let hax_temp_output, self:(Prims.unit & t_Bytes) =
    (), ({ self with _0 = Alloc.Vec.impl_1__push self._0 x } <: t_Bytes) <: (Prims.unit & t_Bytes)
  in
  self

let impl__Bytes__slice (self: t_Bytes) (start len: usize) : t_Bytes =
  Core.Convert.f_into (self._0.[ {
          Core.Ops.Range.f_start = start;
          Core.Ops.Range.f_end = start +! len <: usize
        }
        <:
        Core.Ops.Range.t_Range usize ]
      <:
      t_Slice t_U8)

let impl__Bytes__slice_range (self: t_Bytes) (range: Core.Ops.Range.t_Range usize) : t_Bytes =
  Core.Convert.f_into (self._0.[ range ] <: t_Slice t_U8)

let impl__Bytes__update_slice (self: t_Bytes) (start: usize) (other: t_Bytes) (beg len: usize)
    : t_Bytes =
  let res:t_Bytes = Core.Clone.f_clone self in
  let res:t_Bytes =
    Core.Iter.Traits.Iterator.f_fold (Core.Iter.Traits.Collect.f_into_iter ({
              Core.Ops.Range.f_start = sz 0;
              Core.Ops.Range.f_end = len
            }
            <:
            Core.Ops.Range.t_Range usize)
        <:
        Core.Ops.Range.t_Range usize)
      res
      (fun res i ->
          let res:t_Bytes = res in
          let i:usize = i in
          Rust_primitives.Hax.Monomorphized_update_at.update_at_usize res
            (start +! i <: usize)
            (other.[ beg +! i <: usize ] <: t_U8)
          <:
          t_Bytes)
  in
  res

let impl__Bytes__zeroes (len: usize) : t_Bytes =
  Bytes (Alloc.Vec.from_elem (U8 0uy <: t_U8) len) <: t_Bytes

let bytes (x: t_Slice u8) : t_Bytes = Core.Convert.f_into x

let bytes1 (x: u8) : t_Bytes =
  Core.Convert.f_into (let list = [x] in
      FStar.Pervasives.assert_norm (Prims.eq2 (List.Tot.length list) 1);
      Rust_primitives.Hax.array_of_list list)

let bytes2 (x y: u8) : t_Bytes =
  Core.Convert.f_into (let list = [x; y] in
      FStar.Pervasives.assert_norm (Prims.eq2 (List.Tot.length list) 2);
      Rust_primitives.Hax.array_of_list list)

let encode_length_u16 (bytes: t_Bytes) : Core.Result.t_Result t_Bytes u8 =
  let len:usize = impl__Bytes__len bytes in
  if len >=. sz 65536
  then Core.Result.Result_Err v_PAYLOAD_TOO_LONG <: Core.Result.t_Result t_Bytes u8
  else
    let len:t_Bytes = impl__U16__as_be_bytes (U16 (cast (len <: usize) <: u16) <: t_U16) in
    let lenb:t_Bytes = impl__Bytes__new () in
    let lenb:t_Bytes = impl__Bytes__push lenb (len.[ sz 0 ] <: t_U8) in
    let lenb:t_Bytes = impl__Bytes__push lenb (len.[ sz 1 ] <: t_U8) in
    let lenb:t_Bytes = impl__Bytes__extend_from_slice lenb bytes in
    Core.Result.Result_Ok lenb <: Core.Result.t_Result t_Bytes u8

let encode_length_u24 (bytes: t_Bytes) : Core.Result.t_Result t_Bytes u8 =
  let len:usize = impl__Bytes__len bytes in
  if len >=. sz 16777216
  then Core.Result.Result_Err v_PAYLOAD_TOO_LONG <: Core.Result.t_Result t_Bytes u8
  else
    let len:t_Bytes = impl__U32__as_be_bytes (U32 (cast (len <: usize) <: u32) <: t_U32) in
    let lenb:t_Bytes = impl__Bytes__new () in
    let lenb:t_Bytes = impl__Bytes__push lenb (len.[ sz 1 ] <: t_U8) in
    let lenb:t_Bytes = impl__Bytes__push lenb (len.[ sz 2 ] <: t_U8) in
    let lenb:t_Bytes = impl__Bytes__push lenb (len.[ sz 3 ] <: t_U8) in
    let lenb:t_Bytes = impl__Bytes__extend_from_slice lenb bytes in
    Core.Result.Result_Ok lenb <: Core.Result.t_Result t_Bytes u8

let encode_length_u8 (bytes: t_Bytes) : Core.Result.t_Result t_Bytes u8 =
  let len:usize = impl__Bytes__len bytes in
  if len >=. sz 256
  then Core.Result.Result_Err v_PAYLOAD_TOO_LONG <: Core.Result.t_Result t_Bytes u8
  else
    let lenb:t_Bytes = impl__Bytes__new () in
    let lenb:t_Bytes =
      impl__Bytes__push lenb (Core.Convert.f_into (cast (len <: usize) <: u8) <: t_U8)
    in
    let lenb:t_Bytes = impl__Bytes__extend_from_slice lenb bytes in
    Core.Result.Result_Ok lenb <: Core.Result.t_Result t_Bytes u8

let eq (b1 b2: t_Bytes) : bool =
  if (impl__Bytes__len b1 <: usize) <>. (impl__Bytes__len b2 <: usize)
  then false
  else
    let (b: bool):bool = true in
    let b:bool =
      Core.Iter.Traits.Iterator.f_fold (Core.Iter.Traits.Collect.f_into_iter ({
                Core.Ops.Range.f_start = sz 0;
                Core.Ops.Range.f_end = impl__Bytes__len b1 <: usize
              }
              <:
              Core.Ops.Range.t_Range usize)
          <:
          Core.Ops.Range.t_Range usize)
        b
        (fun b i ->
            let b:bool = b in
            let i:usize = i in
            if ~.(eq1 (b1.[ i ] <: t_U8) (b2.[ i ] <: t_U8) <: bool) <: bool
            then
              let b:bool = false in
              b
            else b)
    in
    b

let check_eq (b1 b2: t_Bytes) : Core.Result.t_Result Prims.unit u8 =
  let b:bool = eq b1 b2 in
  if b
  then Core.Result.Result_Ok (() <: Prims.unit) <: Core.Result.t_Result Prims.unit u8
  else Core.Result.Result_Err (parse_failed ()) <: Core.Result.t_Result Prims.unit u8

let check_mem (b1 b2: t_Bytes) : Core.Result.t_Result Prims.unit u8 =
  if ((impl__Bytes__len b2 <: usize) %! (impl__Bytes__len b1 <: usize) <: usize) <>. sz 0
  then Core.Result.Result_Err (parse_failed ()) <: Core.Result.t_Result Prims.unit u8
  else
    let b:bool = false in
    let b:bool =
      Core.Iter.Traits.Iterator.f_fold (Core.Iter.Traits.Collect.f_into_iter ({
                Core.Ops.Range.f_start = sz 0;
                Core.Ops.Range.f_end
                =
                (impl__Bytes__len b2 <: usize) /! (impl__Bytes__len b1 <: usize) <: usize
              }
              <:
              Core.Ops.Range.t_Range usize)
          <:
          Core.Ops.Range.t_Range usize)
        b
        (fun b i ->
            let b:bool = b in
            let i:usize = i in
            if
              eq b1
                (impl__Bytes__slice_range b2
                    ({
                        Core.Ops.Range.f_start = i *! (impl__Bytes__len b1 <: usize) <: usize;
                        Core.Ops.Range.f_end
                        =
                        (i +! sz 1 <: usize) *! (impl__Bytes__len b1 <: usize) <: usize
                      }
                      <:
                      Core.Ops.Range.t_Range usize)
                  <:
                  t_Bytes)
              <:
              bool
            then
              let b:bool = true in
              b
            else b)
    in
    if b
    then Core.Result.Result_Ok (() <: Prims.unit) <: Core.Result.t_Result Prims.unit u8
    else Core.Result.Result_Err (parse_failed ()) <: Core.Result.t_Result Prims.unit u8

let length_u16_encoded (bytes: t_Bytes) : Core.Result.t_Result usize u8 =
  if (impl__Bytes__len bytes <: usize) <. sz 2
  then Core.Result.Result_Err (parse_failed ()) <: Core.Result.t_Result usize u8
  else
    let l0:usize = cast (impl__U8__declassify (bytes.[ sz 0 ] <: t_U8) <: u8) <: usize in
    let l1:usize = cast (impl__U8__declassify (bytes.[ sz 1 ] <: t_U8) <: u8) <: usize in
    let l:usize = (l0 *! sz 256 <: usize) +! l1 in
    if ((impl__Bytes__len bytes <: usize) -! sz 2 <: usize) <. l
    then Core.Result.Result_Err (parse_failed ()) <: Core.Result.t_Result usize u8
    else Core.Result.Result_Ok l <: Core.Result.t_Result usize u8

let check_length_encoding_u16 (bytes: t_Bytes) : Core.Result.t_Result Prims.unit u8 =
  Rust_primitives.Hax.Control_flow_monad.Mexception.run (let* hoist211:usize =
        match
          Core.Ops.Try_trait.f_branch (length_u16_encoded bytes <: Core.Result.t_Result usize u8)
        with
        | Core.Ops.Control_flow.ControlFlow_Break residual ->
          let* hoist210:Rust_primitives.Hax.t_Never =
            Core.Ops.Control_flow.ControlFlow.v_Break (Core.Ops.Try_trait.f_from_residual residual
                <:
                Core.Result.t_Result Prims.unit u8)
          in
          Core.Ops.Control_flow.ControlFlow_Continue (Rust_primitives.Hax.never_to_any hoist210)
          <:
          Core.Ops.Control_flow.t_ControlFlow (Core.Result.t_Result Prims.unit u8) usize
        | Core.Ops.Control_flow.ControlFlow_Continue v_val ->
          Core.Ops.Control_flow.ControlFlow_Continue v_val
          <:
          Core.Ops.Control_flow.t_ControlFlow (Core.Result.t_Result Prims.unit u8) usize
      in
      Core.Ops.Control_flow.ControlFlow_Continue
      (let hoist212:usize = hoist211 +! sz 2 in
        let hoist213:bool = hoist212 <>. (impl__Bytes__len bytes <: usize) in
        if hoist213
        then Core.Result.Result_Err (parse_failed ()) <: Core.Result.t_Result Prims.unit u8
        else Core.Result.Result_Ok (() <: Prims.unit) <: Core.Result.t_Result Prims.unit u8)
      <:
      Core.Ops.Control_flow.t_ControlFlow (Core.Result.t_Result Prims.unit u8)
        (Core.Result.t_Result Prims.unit u8))

let length_u24_encoded (bytes: t_Bytes) : Core.Result.t_Result usize u8 =
  if (impl__Bytes__len bytes <: usize) <. sz 3
  then Core.Result.Result_Err (parse_failed ()) <: Core.Result.t_Result usize u8
  else
    let l0:usize = cast (impl__U8__declassify (bytes.[ sz 0 ] <: t_U8) <: u8) <: usize in
    let l1:usize = cast (impl__U8__declassify (bytes.[ sz 1 ] <: t_U8) <: u8) <: usize in
    let l2:usize = cast (impl__U8__declassify (bytes.[ sz 2 ] <: t_U8) <: u8) <: usize in
    let l:usize = ((l0 *! sz 65536 <: usize) +! (l1 *! sz 256 <: usize) <: usize) +! l2 in
    if ((impl__Bytes__len bytes <: usize) -! sz 3 <: usize) <. l
    then Core.Result.Result_Err (parse_failed ()) <: Core.Result.t_Result usize u8
    else Core.Result.Result_Ok l <: Core.Result.t_Result usize u8

let check_length_encoding_u24 (bytes: t_Bytes) : Core.Result.t_Result Prims.unit u8 =
  Rust_primitives.Hax.Control_flow_monad.Mexception.run (let* hoist234:usize =
        match
          Core.Ops.Try_trait.f_branch (length_u24_encoded bytes <: Core.Result.t_Result usize u8)
        with
        | Core.Ops.Control_flow.ControlFlow_Break residual ->
          let* hoist233:Rust_primitives.Hax.t_Never =
            Core.Ops.Control_flow.ControlFlow.v_Break (Core.Ops.Try_trait.f_from_residual residual
                <:
                Core.Result.t_Result Prims.unit u8)
          in
          Core.Ops.Control_flow.ControlFlow_Continue (Rust_primitives.Hax.never_to_any hoist233)
          <:
          Core.Ops.Control_flow.t_ControlFlow (Core.Result.t_Result Prims.unit u8) usize
        | Core.Ops.Control_flow.ControlFlow_Continue v_val ->
          Core.Ops.Control_flow.ControlFlow_Continue v_val
          <:
          Core.Ops.Control_flow.t_ControlFlow (Core.Result.t_Result Prims.unit u8) usize
      in
      Core.Ops.Control_flow.ControlFlow_Continue
      (let hoist235:usize = hoist234 +! sz 3 in
        let hoist236:bool = hoist235 <>. (impl__Bytes__len bytes <: usize) in
        if hoist236
        then Core.Result.Result_Err (parse_failed ()) <: Core.Result.t_Result Prims.unit u8
        else Core.Result.Result_Ok (() <: Prims.unit) <: Core.Result.t_Result Prims.unit u8)
      <:
      Core.Ops.Control_flow.t_ControlFlow (Core.Result.t_Result Prims.unit u8)
        (Core.Result.t_Result Prims.unit u8))

let length_u8_encoded (bytes: t_Bytes) : Core.Result.t_Result usize u8 =
  if impl__Bytes__is_empty bytes
  then Core.Result.Result_Err (parse_failed ()) <: Core.Result.t_Result usize u8
  else
    let l:usize = cast (impl__U8__declassify (bytes.[ sz 0 ] <: t_U8) <: u8) <: usize in
    if ((impl__Bytes__len bytes <: usize) -! sz 1 <: usize) <. l
    then Core.Result.Result_Err (parse_failed ()) <: Core.Result.t_Result usize u8
    else Core.Result.Result_Ok l <: Core.Result.t_Result usize u8

let check_length_encoding_u8 (bytes: t_Bytes) : Core.Result.t_Result Prims.unit u8 =
  Rust_primitives.Hax.Control_flow_monad.Mexception.run (let* hoist238:usize =
        match
          Core.Ops.Try_trait.f_branch (length_u8_encoded bytes <: Core.Result.t_Result usize u8)
        with
        | Core.Ops.Control_flow.ControlFlow_Break residual ->
          let* hoist237:Rust_primitives.Hax.t_Never =
            Core.Ops.Control_flow.ControlFlow.v_Break (Core.Ops.Try_trait.f_from_residual residual
                <:
                Core.Result.t_Result Prims.unit u8)
          in
          Core.Ops.Control_flow.ControlFlow_Continue (Rust_primitives.Hax.never_to_any hoist237)
          <:
          Core.Ops.Control_flow.t_ControlFlow (Core.Result.t_Result Prims.unit u8) usize
        | Core.Ops.Control_flow.ControlFlow_Continue v_val ->
          Core.Ops.Control_flow.ControlFlow_Continue v_val
          <:
          Core.Ops.Control_flow.t_ControlFlow (Core.Result.t_Result Prims.unit u8) usize
      in
      Core.Ops.Control_flow.ControlFlow_Continue
      (let hoist239:usize = hoist238 +! sz 1 in
        let hoist240:bool = hoist239 <>. (impl__Bytes__len bytes <: usize) in
        if hoist240
        then Core.Result.Result_Err (parse_failed ()) <: Core.Result.t_Result Prims.unit u8
        else Core.Result.Result_Ok (() <: Prims.unit) <: Core.Result.t_Result Prims.unit u8)
      <:
      Core.Ops.Control_flow.t_ControlFlow (Core.Result.t_Result Prims.unit u8)
        (Core.Result.t_Result Prims.unit u8))

let random_bytes (len: usize) : t_Bytes =
  Core.Convert.f_into (Rust_primitives.Hax.failure ""
        "{ Types.attributes = [];\n  contents =\n  Types.Call {\n    args =\n    [{ Types.attributes = [];\n       contents =\n       Types.Call {\n         args =\n         [{ Types.attributes = [];\n            contents =\n            (Types.Adt\n               { Types.base = None;\n                 fields =\n                 [{ Types.field =\n                    { Types.index = (2, 32813); krate = \"core\";\n                      path =\n                      [{ Types.data = (Types.TypeNs \"ops\"); disambiguator = 0\n                         };\n                        { Types.data = (Types.TypeNs \"range\");\n                          disambiguator = 0 };\n                        { Types.data = (Types.TypeNs \"Range\");\n                          disambiguator = 0 };\n                        { Types.data = (Types.ValueNs \"start\");\n                          disambiguator = 0 }\n                        ]\n                      };\n                    value =\n                    { Types.attributes = [];\n                      contents =\n                      Types.Literal {\n                        lit =\n                        { Types.node = (Types.Int (\"0\", Types.Unsuffixed));\n                          span =\n                          { Types.filename =\n                            (Types.Real (Types.LocalPath \"src/tls13utils.rs\"));\n                            hi = { Types.col = \"6\"; line = \"634\" };\n                            lo = { Types.col = \"5\"; line = \"634\" } }\n                          };\n                        neg = false};\n                      hir_id = (Some (\"743\", \"14\"));\n                      span =\n                      { Types.filename =\n                        (Types.Real (Types.LocalPath \"src/tls13utils.rs\"));\n                        hi = { Types.col = \"6\"; line = \"634\" };\n                        lo = { Types.col = \"5\"; line = \"634\" } };\n                      ty = (Types.Uint Types.Usize) }\n                    };\n                   { Types.field =\n                     { Types.index = (2, 32814); krate = \"core\";\n                       path =\n                       [{ Types.data = (Types.TypeNs \"ops\");\n                          disambiguator = 0 };\n                         { Types.data = (Types.TypeNs \"range\");\n                           disambiguator = 0 };\n                         { Types.data = (Types.TypeNs \"Range\");\n                           disambiguator = 0 };\n                         { Types.data = (Types.ValueNs \"end\");\n                           disambiguator = 0 }\n                         ]\n                       };\n                     value =\n                     { Types.attributes = [];\n                       contents =\n                       Types.VarRef {\n                         id =\n                         { Types.id =\n                           { Types.local_id = \"2\";\n                             owner =\n                             { Types.index = (0, 743); krate = \"bertie\";\n                               path =\n                               [{ Types.data = (Types.TypeNs \"tls13utils\");\n                                  disambiguator = 0 };\n                                 { Types.data =\n                                   (Types.ValueNs \"random_bytes\");\n                                   disambiguator = 0 }\n                                 ]\n                               }\n                             };\n                           name = \"len\" }};\n                       hir_id = (Some (\"743\", \"16\"));\n                       span =\n                       { Types.filename =\n                         (Types.Real (Types.LocalPath \"src/tls13utils.rs\"));\n                         hi = { Types.col = \"11\"; line = \"634\" };\n                         lo = { Types.col = \"8\"; line = \"634\" } };\n                       ty = (Types.Uint Types.Usize) }\n                     }\n                   ];\n                 info =\n                 { Types.typ =\n                   { Types.index = (2, 32811); krate = \"core\";\n                     path =\n                     [{ Types.data = (Types.TypeNs \"ops\"); disambiguator = 0\n                        };\n                       { Types.data = (Types.TypeNs \"range\");\n                         disambiguator = 0 };\n                       { Types.data = (Types.TypeNs \"Range\");\n                         disambiguator = 0 }\n                       ]\n                     };\n                   typ_is_record = true; typ_is_struct = true;\n                   type_namespace =\n                   { Types.index = (2, 32811); krate = \"core\";\n                     path =\n                     [{ Types.data = (Types.TypeNs \"ops\"); disambiguator = 0\n                        };\n                       { Types.data = (Types.TypeNs \"range\");\n                         disambiguator = 0 }\n                       ]\n                     };\n                   variant =\n                   { Types.index = (2, 32811); krate = \"core\";\n                     path =\n                     [{ Types.data = (Types.TypeNs \"ops\"); disambiguator = 0\n                        };\n                       { Types.data = (Types.TypeNs \"range\");\n                         disambiguator = 0 };\n                       { Types.data = (Types.TypeNs \"Range\");\n                         disambiguator = 0 }\n                       ]\n                     };\n                   variant_index = \"0\"; variant_is_record = true };\n                 user_ty = None });\n            hir_id = (Some (\"743\", \"13\"));\n            span =\n            { Types.filename =\n              (Types.Real (Types.LocalPath \"src/tls13utils.rs\"));\n              hi = { Types.col = \"12\"; line = \"634\" };\n              lo = { Types.col = \"4\"; line = \"634\" } };\n            ty =\n            Types.Adt {\n              def_id =\n              { Types.index = (2, 32811); krate = \"core\";\n                path =\n                [{ Types.data = (Types.TypeNs \"ops\"); disambiguator = 0 };\n                  { Types.data = (Types.TypeNs \"range\"); disambiguator = 0 };\n                  { Types.data = (Types.TypeNs \"Range\"); disambiguator = 0 }]\n                };\n              generic_args = [(Types.Type (Types.Uint Types.Usize))]}\n            };\n           { Types.attributes = [];\n             contents =\n             Types.Closure {\n               body =\n               { Types.attributes = [];\n                 contents =\n                 Types.Call {args = [];\n                   fn_span =\n                   { Types.filename =\n                     (Types.Real (Types.LocalPath \"src/tls13utils.rs\"));\n                     hi = { Types.col = \"37\"; line = \"635\" };\n                     lo = { Types.col = \"17\"; line = \"635\" } };\n                   from_hir_call = true;\n                   fun' =\n                   { Types.attributes = [];\n                     contents =\n                     Types.GlobalName {\n                       id =\n                       { Types.index = (20, 796); krate = \"rand\";\n                         path =\n                         [{ Types.data = (Types.ValueNs \"random\");\n                            disambiguator = 0 }\n                           ]\n                         }};\n                     hir_id = None;\n                     span =\n                     { Types.filename =\n                       (Types.Real (Types.LocalPath \"src/tls13utils.rs\"));\n                       hi = { Types.col = \"35\"; line = \"635\" };\n                       lo = { Types.col = \"17\"; line = \"635\" } };\n                     ty =\n                     (Types.Arrow\n                        { Types.bound_vars = [];\n                          value =\n                          { Types.abi = Types.Abi {todo = \"Rust\"};\n                            c_variadic = false; inputs = [];\n                            output = (Types.Uint Types.U8);\n                            unsafety = Types.Normal }\n                          })\n                     };\n                   generic_args = [(Types.Type (Types.Uint Types.U8))];\n                   impl = None;\n                   ty =\n                   (Types.Arrow\n                      { Types.bound_vars = [];\n                        value =\n                        { Types.abi = Types.Abi {todo = \"Rust\"};\n                          c_variadic = false; inputs = [];\n                          output = (Types.Uint Types.U8);\n                          unsafety = Types.Normal }\n                        })};\n                 hir_id = (Some (\"743\", \"22\"));\n                 span =\n                 { Types.filename =\n                   (Types.Real (Types.LocalPath \"src/tls13utils.rs\"));\n                   hi = { Types.col = \"37\"; line = \"635\" };\n                   lo = { Types.col = \"17\"; line = \"635\" } };\n                 ty = (Types.Uint Types.U8) };\n               movability = None;\n               params =\n               [{ Types.attributes = []; hir_id = None; pat = None;\n                  self_kind = None;\n                  ty =\n                  (Types.Ref\n                     ({ Types.kind = Types.ReErased },\n                      (Types.Arrow\n                         { Types.bound_vars = [];\n                           value =\n                           { Types.abi = Types.Abi {todo = \"Rust\"};\n                             c_variadic = false;\n                             inputs = [(Types.Uint Types.Usize)];\n                             output = (Types.Uint Types.U8);\n                             unsafety = Types.Normal }\n                           }),\n                      true));\n                  ty_span = None };\n                 { Types.attributes = [];\n                   hir_id =\n                   (Some { Types.local_id = \"20\";\n                           owner =\n                           { Types.index = (0, 743); krate = \"bertie\";\n                             path =\n                             [{ Types.data = (Types.TypeNs \"tls13utils\");\n                                disambiguator = 0 };\n                               { Types.data = (Types.ValueNs \"random_bytes\");\n                                 disambiguator = 0 }\n                               ]\n                             }\n                           });\n                   pat =\n                   (Some { Types.attributes = []; contents = Types.Wild;\n                           hir_id = None;\n                           span =\n                           { Types.filename =\n                             (Types.Real\n                                (Types.LocalPath \"src/tls13utils.rs\"));\n                             hi = { Types.col = \"15\"; line = \"635\" };\n                             lo = { Types.col = \"14\"; line = \"635\" } };\n                           ty = (Types.Uint Types.Usize) });\n                   self_kind = None; ty = (Types.Uint Types.Usize);\n                   ty_span = None }\n                 ];\n               upvars = []};\n             hir_id = (Some (\"743\", \"19\"));\n             span =\n             { Types.filename =\n               (Types.Real (Types.LocalPath \"src/tls13utils.rs\"));\n               hi = { Types.col = \"37\"; line = \"635\" };\n               lo = { Types.col = \"13\"; line = \"635\" } };\n             ty =\n             (Types.Arrow\n                { Types.bound_vars = [];\n                  value =\n                  { Types.abi = Types.Abi {todo = \"Rust\"};\n                    c_variadic = false; inputs = [(Types.Uint Types.Usize)];\n                    output = (Types.Uint Types.U8); unsafety = Types.Normal }\n                  })\n             }\n           ];\n         fn_span =\n         { Types.filename =\n           (Types.Real (Types.LocalPath \"src/tls13utils.rs\"));\n           hi = { Types.col = \"38\"; line = \"635\" };\n           lo = { Types.col = \"9\"; line = \"635\" } };\n         from_hir_call = true;\n         fun' =\n         { Types.attributes = [];\n           contents =\n           Types.GlobalName {\n             id =\n             { Types.index = (2, 7344); krate = \"core\";\n               path =\n               [{ Types.data = (Types.TypeNs \"iter\"); disambiguator = 0 };\n                 { Types.data = (Types.TypeNs \"traits\"); disambiguator = 0 };\n                 { Types.data = (Types.TypeNs \"iterator\"); disambiguator = 0\n                   };\n                 { Types.data = (Types.TypeNs \"Iterator\"); disambiguator = 0\n                   };\n                 { Types.data = (Types.ValueNs \"map\"); disambiguator = 0 }]\n               }};\n           hir_id = None;\n           span =\n           { Types.filename =\n             (Types.Real (Types.LocalPath \"src/tls13utils.rs\"));\n             hi = { Types.col = \"12\"; line = \"635\" };\n             lo = { Types.col = \"9\"; line = \"635\" } };\n           ty =\n           (Types.Arrow\n              { Types.bound_vars = [];\n                value =\n                { Types.abi = Types.Abi {todo = \"Rust\"}; c_variadic = false;\n                  inputs =\n                  [Types.Adt {\n                     def_id =\n                     { Types.index = (2, 32811); krate = \"core\";\n                       path =\n                       [{ Types.data = (Types.TypeNs \"ops\");\n                          disambiguator = 0 };\n                         { Types.data = (Types.TypeNs \"range\");\n                           disambiguator = 0 };\n                         { Types.data = (Types.TypeNs \"Range\");\n                           disambiguator = 0 }\n                         ]\n                       };\n                     generic_args = [(Types.Type (Types.Uint Types.Usize))]};\n                    (Types.Arrow\n                       { Types.bound_vars = [];\n                         value =\n                         { Types.abi = Types.Abi {todo = \"Rust\"};\n                           c_variadic = false;\n                           inputs = [(Types.Uint Types.Usize)];\n                           output = (Types.Uint Types.U8);\n                           unsafety = Types.Normal }\n                         })\n                    ];\n                  output =\n                  Types.Adt {\n                    def_id =\n                    { Types.index = (2, 33976); krate = \"core\";\n                      path =\n                      [{ Types.data = (Types.TypeNs \"iter\");\n                         disambiguator = 0 };\n                        { Types.data = (Types.TypeNs \"adapters\");\n                          disambiguator = 0 };\n                        { Types.data = (Types.TypeNs \"map\");\n                          disambiguator = 0 };\n                        { Types.data = (Types.TypeNs \"Map\");\n                          disambiguator = 0 }\n                        ]\n                      };\n                    generic_args =\n                    [(Types.Type\n                        Types.Adt {\n                          def_id =\n                          { Types.index = (2, 32811); krate = \"core\";\n                            path =\n                            [{ Types.data = (Types.TypeNs \"ops\");\n                               disambiguator = 0 };\n                              { Types.data = (Types.TypeNs \"range\");\n                                disambiguator = 0 };\n                              { Types.data = (Types.TypeNs \"Range\");\n                                disambiguator = 0 }\n                              ]\n                            };\n                          generic_args =\n                          [(Types.Type (Types.Uint Types.Usize))]});\n                      (Types.Type\n                         (Types.Arrow\n                            { Types.bound_vars = [];\n                              value =\n                              { Types.abi = Types.Abi {todo = \"Rust\"};\n                                c_variadic = false;\n                                inputs = [(Types.Uint Types.Usize)];\n                                output = (Types.Uint Types.U8);\n                                unsafety = Types.Normal }\n                              }))\n                      ]};\n                  unsafety = Types.Normal }\n                })\n           };\n         generic_args =\n         [(Types.Type\n             Types.Adt {\n               def_id =\n               { Types.index = (2, 32811); krate = \"core\";\n                 path =\n                 [{ Types.data = (Types.TypeNs \"ops\"); disambiguator = 0 };\n                   { Types.data = (Types.TypeNs \"range\"); disambiguator = 0 };\n                   { Types.data = (Types.TypeNs \"Range\"); disambiguator = 0 }\n                   ]\n                 };\n               generic_args = [(Types.Type (Types.Uint Types.Usize))]});\n           (Types.Type (Types.Uint Types.U8));\n           (Types.Type\n              (Types.Arrow\n                 { Types.bound_vars = [];\n                   value =\n                   { Types.abi = Types.Abi {todo = \"Rust\"};\n                     c_variadic = false; inputs = [(Types.Uint Types.Usize)];\n                     output = (Types.Uint Types.U8); unsafety = Types.Normal\n                     }\n                   }))\n           ];\n         impl =\n         (Some { Types.args =\n                 [{ Types.args = [];\n                    impl =\n                    Types.Builtin {\n                      trait =\n                      { Types.def_id =\n                        { Types.index = (2, 2689); krate = \"core\";\n                          path =\n                          [{ Types.data = (Types.TypeNs \"marker\");\n                             disambiguator = 0 };\n                            { Types.data = (Types.TypeNs \"Sized\");\n                              disambiguator = 0 }\n                            ]\n                          };\n                        generic_args =\n                        [(Types.Type (Types.Uint Types.Usize))] }}\n                    };\n                   { Types.args = [];\n                     impl =\n                     Types.Concrete {generics = [];\n                       id =\n                       { Types.index = (2, 34165); krate = \"core\";\n                         path =\n                         [{ Types.data = (Types.TypeNs \"iter\");\n                            disambiguator = 0 };\n                           { Types.data = (Types.TypeNs \"range\");\n                             disambiguator = 0 };\n                           { Types.data = Types.Impl; disambiguator = 37 }]\n                         }}\n                     }\n                   ];\n                 impl =\n                 Types.Concrete {\n                   generics = [(Types.Type (Types.Uint Types.Usize))];\n                   id =\n                   { Types.index = (2, 6816); krate = \"core\";\n                     path =\n                     [{ Types.data = (Types.TypeNs \"iter\"); disambiguator = 0\n                        };\n                       { Types.data = (Types.TypeNs \"range\");\n                         disambiguator = 0 };\n                       { Types.data = Types.Impl; disambiguator = 3 }]\n                     }}\n                 });\n         ty =\n         (Types.Arrow\n            { Types.bound_vars = [];\n              value =\n              { Types.abi = Types.Abi {todo = \"Rust\"}; c_variadic = false;\n                inputs =\n                [Types.Adt {\n                   def_id =\n                   { Types.index = (2, 32811); krate = \"core\";\n                     path =\n                     [{ Types.data = (Types.TypeNs \"ops\"); disambiguator = 0\n                        };\n                       { Types.data = (Types.TypeNs \"range\");\n                         disambiguator = 0 };\n                       { Types.data = (Types.TypeNs \"Range\");\n                         disambiguator = 0 }\n                       ]\n                     };\n                   generic_args = [(Types.Type (Types.Uint Types.Usize))]};\n                  (Types.Arrow\n                     { Types.bound_vars = [];\n                       value =\n                       { Types.abi = Types.Abi {todo = \"Rust\"};\n                         c_variadic = false;\n                         inputs = [(Types.Uint Types.Usize)];\n                         output = (Types.Uint Types.U8);\n                         unsafety = Types.Normal }\n                       })\n                  ];\n                output =\n                Types.Adt {\n                  def_id =\n                  { Types.index = (2, 33976); krate = \"core\";\n                    path =\n                    [{ Types.data = (Types.TypeNs \"iter\"); disambiguator = 0\n                       };\n                      { Types.data = (Types.TypeNs \"adapters\");\n                        disambiguator = 0 };\n                      { Types.data = (Types.TypeNs \"map\"); disambiguator = 0\n                        };\n                      { Types.data = (Types.TypeNs \"Map\"); disambiguator = 0\n                        }\n                      ]\n                    };\n                  generic_args =\n                  [(Types.Type\n                      Types.Adt {\n                        def_id =\n                        { Types.index = (2, 32811); krate = \"core\";\n                          path =\n                          [{ Types.data = (Types.TypeNs \"ops\");\n                             disambiguator = 0 };\n                            { Types.data = (Types.TypeNs \"range\");\n                              disambiguator = 0 };\n                            { Types.data = (Types.TypeNs \"Range\");\n                              disambiguator = 0 }\n                            ]\n                          };\n                        generic_args =\n                        [(Types.Type (Types.Uint Types.Usize))]});\n                    (Types.Type\n                       (Types.Arrow\n                          { Types.bound_vars = [];\n                            value =\n                            { Types.abi = Types.Abi {todo = \"Rust\"};\n                              c_variadic = false;\n                              inputs = [(Types.Uint Types.Usize)];\n                              output = (Types.Uint Types.U8);\n                              unsafety = Types.Normal }\n                            }))\n                    ]};\n                unsafety = Types.Normal }\n              })};\n       hir_id = (Some (\"743\", \"11\"));\n       span =\n       { Types.filename = (Types.Real (Types.LocalPath \"src/tls13utils.rs\"));\n         hi = { Types.col = \"38\"; line = \"635\" };\n         lo = { Types.col = \"4\"; line = \"634\" } };\n       ty =\n       Types.Adt {\n         def_id =\n         { Types.index = (2, 33976); krate = \"core\";\n           path =\n           [{ Types.data = (Types.TypeNs \"iter\"); disambiguator = 0 };\n             { Types.data = (Types.TypeNs \"adapters\"); disambiguator = 0 };\n             { Types.data = (Types.TypeNs \"map\"); disambiguator = 0 };\n             { Types.data = (Types.TypeNs \"Map\"); disambiguator = 0 }]\n           };\n         generic_args =\n         [(Types.Type\n             Types.Adt {\n               def_id =\n               { Types.index = (2, 32811); krate = \"core\";\n                 path =\n                 [{ Types.data = (Types.TypeNs \"ops\"); disambiguator = 0 };\n                   { Types.data = (Types.TypeNs \"range\"); disambiguator = 0 };\n                   { Types.data = (Types.TypeNs \"Range\"); disambiguator = 0 }\n                   ]\n                 };\n               generic_args = [(Types.Type (Types.Uint Types.Usize))]});\n           (Types.Type\n              (Types.Arrow\n                 { Types.bound_vars = [];\n                   value =\n                   { Types.abi = Types.Abi {todo = \"Rust\"};\n                     c_variadic = false; inputs = [(Types.Uint Types.Usize)];\n                     output = (Types.Uint Types.U8); unsafety = Types.Normal\n                     }\n                   }))\n           ]}\n       }\n      ];\n    fn_span =\n    { Types.filename = (Types.Real (Types.LocalPath \"src/tls13utils.rs\"));\n      hi = { Types.col = \"29\"; line = \"636\" };\n      lo = { Types.col = \"9\"; line = \"636\" } };\n    from_hir_call = true;\n    fun' =\n    { Types.attributes = [];\n      contents =\n      Types.GlobalName {\n        id =\n        { Types.index = (2, 7380); krate = \"core\";\n          path =\n          [{ Types.data = (Types.TypeNs \"iter\"); disambiguator = 0 };\n            { Types.data = (Types.TypeNs \"traits\"); disambiguator = 0 };\n            { Types.data = (Types.TypeNs \"iterator\"); disambiguator = 0 };\n            { Types.data = (Types.TypeNs \"Iterator\"); disambiguator = 0 };\n            { Types.data = (Types.ValueNs \"collect\"); disambiguator = 0 }]\n          }};\n      hir_id = None;\n      span =\n      { Types.filename = (Types.Real (Types.LocalPath \"src/tls13utils.rs\"));\n        hi = { Types.col = \"16\"; line = \"636\" };\n        lo = { Types.col = \"9\"; line = \"636\" } };\n      ty =\n      (Types.Arrow\n         { Types.bound_vars = [];\n           value =\n           { Types.abi = Types.Abi {todo = \"Rust\"}; c_variadic = false;\n             inputs =\n             [Types.Adt {\n                def_id =\n                { Types.index = (2, 33976); krate = \"core\";\n                  path =\n                  [{ Types.data = (Types.TypeNs \"iter\"); disambiguator = 0 };\n                    { Types.data = (Types.TypeNs \"adapters\");\n                      disambiguator = 0 };\n                    { Types.data = (Types.TypeNs \"map\"); disambiguator = 0 };\n                    { Types.data = (Types.TypeNs \"Map\"); disambiguator = 0 }]\n                  };\n                generic_args =\n                [(Types.Type\n                    Types.Adt {\n                      def_id =\n                      { Types.index = (2, 32811); krate = \"core\";\n                        path =\n                        [{ Types.data = (Types.TypeNs \"ops\");\n                           disambiguator = 0 };\n                          { Types.data = (Types.TypeNs \"range\");\n                            disambiguator = 0 };\n                          { Types.data = (Types.TypeNs \"Range\");\n                            disambiguator = 0 }\n                          ]\n                        };\n                      generic_args = [(Types.Type (Types.Uint Types.Usize))]});\n                  (Types.Type\n                     (Types.Arrow\n                        { Types.bound_vars = [];\n                          value =\n                          { Types.abi = Types.Abi {todo = \"Rust\"};\n                            c_variadic = false;\n                            inputs = [(Types.Uint Types.Usize)];\n                            output = (Types.Uint Types.U8);\n                            unsafety = Types.Normal }\n                          }))\n                  ]}\n               ];\n             output =\n             Types.Adt {\n               def_id =\n               { Types.index = (5, 6696); krate = \"alloc\";\n                 path =\n                 [{ Types.data = (Types.TypeNs \"vec\"); disambiguator = 0 };\n                   { Types.data = (Types.TypeNs \"Vec\"); disambiguator = 0 }]\n                 };\n               generic_args =\n               [(Types.Type (Types.Uint Types.U8));\n                 (Types.Type\n                    Types.Adt {\n                      def_id =\n                      { Types.index = (5, 7004); krate = \"alloc\";\n                        path =\n                        [{ Types.data = (Types.TypeNs \"alloc\");\n                           disambiguator = 0 };\n                          { Types.data = (Types.TypeNs \"Global\");\n                            disambiguator = 0 }\n                          ]\n                        };\n                      generic_args = []})\n                 ]};\n             unsafety = Types.Normal }\n           })\n      };\n    generic_args =\n    [(Types.Type\n        Types.Adt {\n          def_id =\n          { Types.index = (2, 33976); krate = \"core\";\n            path =\n            [{ Types.data = (Types.TypeNs \"iter\"); disambiguator = 0 };\n              { Types.data = (Types.TypeNs \"adapters\"); disambiguator = 0 };\n              { Types.data = (Types.TypeNs \"map\"); disambiguator = 0 };\n              { Types.data = (Types.TypeNs \"Map\"); disambiguator = 0 }]\n            };\n          generic_args =\n          [(Types.Type\n              Types.Adt {\n                def_id =\n                { Types.index = (2, 32811); krate = \"core\";\n                  path =\n                  [{ Types.data = (Types.TypeNs \"ops\"); disambiguator = 0 };\n                    { Types.data = (Types.TypeNs \"range\"); disambiguator = 0\n                      };\n                    { Types.data = (Types.TypeNs \"Range\"); disambiguator = 0\n                      }\n                    ]\n                  };\n                generic_args = [(Types.Type (Types.Uint Types.Usize))]});\n            (Types.Type\n               (Types.Arrow\n                  { Types.bound_vars = [];\n                    value =\n                    { Types.abi = Types.Abi {todo = \"Rust\"};\n                      c_variadic = false;\n                      inputs = [(Types.Uint Types.Usize)];\n                      output = (Types.Uint Types.U8); unsafety = Types.Normal\n                      }\n                    }))\n            ]});\n      (Types.Type\n         Types.Adt {\n           def_id =\n           { Types.index = (5, 6696); krate = \"alloc\";\n             path =\n             [{ Types.data = (Types.TypeNs \"vec\"); disambiguator = 0 };\n               { Types.data = (Types.TypeNs \"Vec\"); disambiguator = 0 }]\n             };\n           generic_args =\n           [(Types.Type (Types.Uint Types.U8));\n             (Types.Type\n                Types.Adt {\n                  def_id =\n                  { Types.index = (5, 7004); krate = \"alloc\";\n                    path =\n                    [{ Types.data = (Types.TypeNs \"alloc\"); disambiguator = 0\n                       };\n                      { Types.data = (Types.TypeNs \"Global\");\n                        disambiguator = 0 }\n                      ]\n                    };\n                  generic_args = []})\n             ]})\n      ];\n    impl =\n    (Some { Types.args =\n            [{ Types.args = [];\n               impl =\n               Types.Builtin {\n                 trait =\n                 { Types.def_id =\n                   { Types.index = (2, 2689); krate = \"core\";\n                     path =\n                     [{ Types.data = (Types.TypeNs \"marker\");\n                        disambiguator = 0 };\n                       { Types.data = (Types.TypeNs \"Sized\");\n                         disambiguator = 0 }\n                       ]\n                     };\n                   generic_args = [(Types.Type (Types.Uint Types.Usize))] }}\n               };\n              { Types.args = [];\n                impl =\n                Types.Concrete {generics = [];\n                  id =\n                  { Types.index = (2, 34165); krate = \"core\";\n                    path =\n                    [{ Types.data = (Types.TypeNs \"iter\"); disambiguator = 0\n                       };\n                      { Types.data = (Types.TypeNs \"range\");\n                        disambiguator = 0 };\n                      { Types.data = Types.Impl; disambiguator = 37 }]\n                    }}\n                };\n              { Types.args = [];\n                impl =\n                Types.Builtin {\n                  trait =\n                  { Types.def_id =\n                    { Types.index = (2, 2689); krate = \"core\";\n                      path =\n                      [{ Types.data = (Types.TypeNs \"marker\");\n                         disambiguator = 0 };\n                        { Types.data = (Types.TypeNs \"Sized\");\n                          disambiguator = 0 }\n                        ]\n                      };\n                    generic_args =\n                    [(Types.Type\n                        Types.Adt {\n                          def_id =\n                          { Types.index = (2, 32811); krate = \"core\";\n                            path =\n                            [{ Types.data = (Types.TypeNs \"ops\");\n                               disambiguator = 0 };\n                              { Types.data = (Types.TypeNs \"range\");\n                                disambiguator = 0 };\n                              { Types.data = (Types.TypeNs \"Range\");\n                                disambiguator = 0 }\n                              ]\n                            };\n                          generic_args =\n                          [(Types.Type (Types.Uint Types.Usize))]})\n                      ]\n                    }}\n                };\n              { Types.args = [];\n                impl =\n                Types.Builtin {\n                  trait =\n                  { Types.def_id =\n                    { Types.index = (2, 2689); krate = \"core\";\n                      path =\n                      [{ Types.data = (Types.TypeNs \"marker\");\n                         disambiguator = 0 };\n                        { Types.data = (Types.TypeNs \"Sized\");\n                          disambiguator = 0 }\n                        ]\n                      };\n                    generic_args =\n                    [(Types.Type\n                        (Types.Arrow\n                           { Types.bound_vars = [];\n                             value =\n                             { Types.abi = Types.Abi {todo = \"Rust\"};\n                               c_variadic = false;\n                               inputs = [(Types.Uint Types.Usize)];\n                               output = (Types.Uint Types.U8);\n                               unsafety = Types.Normal }\n                             }))\n                      ]\n                    }}\n                };\n              { Types.args =\n                [{ Types.args = [];\n                   impl =\n                   Types.Builtin {\n                     trait =\n                     { Types.def_id =\n                       { Types.index = (2, 2689); krate = \"core\";\n                         path =\n                         [{ Types.data = (Types.TypeNs \"marker\");\n                            disambiguator = 0 };\n                           { Types.data = (Types.TypeNs \"Sized\");\n                             disambiguator = 0 }\n                           ]\n                         };\n                       generic_args = [(Types.Type (Types.Uint Types.Usize))]\n                       }}\n                   };\n                  { Types.args = [];\n                    impl =\n                    Types.Concrete {generics = [];\n                      id =\n                      { Types.index = (2, 34165); krate = \"core\";\n                        path =\n                        [{ Types.data = (Types.TypeNs \"iter\");\n                           disambiguator = 0 };\n                          { Types.data = (Types.TypeNs \"range\");\n                            disambiguator = 0 };\n                          { Types.data = Types.Impl; disambiguator = 37 }]\n                        }}\n                    }\n                  ];\n                impl =\n                Types.Concrete {\n                  generics = [(Types.Type (Types.Uint Types.Usize))];\n                  id =\n                  { Types.index = (2, 6816); krate = \"core\";\n                    path =\n                    [{ Types.data = (Types.TypeNs \"iter\"); disambiguator = 0\n                       };\n                      { Types.data = (Types.TypeNs \"range\");\n                        disambiguator = 0 };\n                      { Types.data = Types.Impl; disambiguator = 3 }]\n                    }}\n                };\n              { Types.args = [];\n                impl =\n                Types.Builtin {\n                  trait =\n                  { Types.def_id =\n                    { Types.index = (2, 2689); krate = \"core\";\n                      path =\n                      [{ Types.data = (Types.TypeNs \"marker\");\n                         disambiguator = 0 };\n                        { Types.data = (Types.TypeNs \"Sized\");\n                          disambiguator = 0 }\n                        ]\n                      };\n                    generic_args = [(Types.Type (Types.Uint Types.Usize))] }}\n                };\n              { Types.args = [];\n                impl =\n                Types.Concrete {generics = [];\n                  id =\n                  { Types.index = (2, 34165); krate = \"core\";\n                    path =\n                    [{ Types.data = (Types.TypeNs \"iter\"); disambiguator = 0\n                       };\n                      { Types.data = (Types.TypeNs \"range\");\n                        disambiguator = 0 };\n                      { Types.data = Types.Impl; disambiguator = 37 }]\n                    }}\n                };\n              { Types.args = [];\n                impl =\n                (Types.Todo\n                   \"ImplExprAtom::Todo(see https://github.com/hacspec/hax/issues/381) ImplSourceClosureData(closure_def_id=DefId(0:744 ~ bertie[6a41]::tls13utils::random_bytes::{closure#0}), substs=[i16, extern \\\"rust-call\\\" fn((usize,)) -> u8, ()], nested=[Obligation(predicate=Binder(ClosureKind(DefId(0:744 ~ bertie[6a41]::tls13utils::random_bytes::{closure#0}), [i16, extern \\\"rust-call\\\" fn((usize,)) -> u8, ()], FnMut), []), depth=1)])\\n\\nBinder(\\n    <[closure@src/tls13utils.rs:635:14: 635:17] as std::ops::FnMut<(usize,)>>,\\n    [],\\n)\")\n                };\n              { Types.args = [];\n                impl =\n                (Types.Todo\n                   \"impl_expr failed on Binder(\\n    <_ as std::marker::Sized>,\\n    [],\\n)\")\n                }\n              ];\n            impl =\n            Types.Concrete {\n              generics =\n              [(Types.Type (Types.Infer Types.TyVar));\n                (Types.Type\n                   Types.Adt {\n                     def_id =\n                     { Types.index = (2, 32811); krate = \"core\";\n                       path =\n                       [{ Types.data = (Types.TypeNs \"ops\");\n                          disambiguator = 0 };\n                         { Types.data = (Types.TypeNs \"range\");\n                           disambiguator = 0 };\n                         { Types.data = (Types.TypeNs \"Range\");\n                           disambiguator = 0 }\n                         ]\n                       };\n                     generic_args = [(Types.Type (Types.Uint Types.Usize))]});\n                (Types.Type\n                   (Types.Arrow\n                      { Types.bound_vars = [];\n                        value =\n                        { Types.abi = Types.Abi {todo = \"Rust\"};\n                          c_variadic = false;\n                          inputs = [(Types.Uint Types.Usize)];\n                          output = (Types.Uint Types.U8);\n                          unsafety = Types.Normal }\n                        }))\n                ];\n              id =\n              { Types.index = (2, 6060); krate = \"core\";\n                path =\n                [{ Types.data = (Types.TypeNs \"iter\"); disambiguator = 0 };\n                  { Types.data = (Types.TypeNs \"adapters\"); disambiguator = 0\n                    };\n                  { Types.data = (Types.TypeNs \"map\"); disambiguator = 0 };\n                  { Types.data = Types.Impl; disambiguator = 2 }]\n                }}\n            });\n    ty =\n    (Types.Arrow\n       { Types.bound_vars = [];\n         value =\n         { Types.abi = Types.Abi {todo = \"Rust\"}; c_variadic = false;\n           inputs =\n           [Types.Adt {\n              def_id =\n              { Types.index = (2, 33976); krate = \"core\";\n                path =\n                [{ Types.data = (Types.TypeNs \"iter\"); disambiguator = 0 };\n                  { Types.data = (Types.TypeNs \"adapters\"); disambiguator = 0\n                    };\n                  { Types.data = (Types.TypeNs \"map\"); disambiguator = 0 };\n                  { Types.data = (Types.TypeNs \"Map\"); disambiguator = 0 }]\n                };\n              generic_args =\n              [(Types.Type\n                  Types.Adt {\n                    def_id =\n                    { Types.index = (2, 32811); krate = \"core\";\n                      path =\n                      [{ Types.data = (Types.TypeNs \"ops\"); disambiguator = 0\n                         };\n                        { Types.data = (Types.TypeNs \"range\");\n                          disambiguator = 0 };\n                        { Types.data = (Types.TypeNs \"Range\");\n                          disambiguator = 0 }\n                        ]\n                      };\n                    generic_args = [(Types.Type (Types.Uint Types.Usize))]});\n                (Types.Type\n                   (Types.Arrow\n                      { Types.bound_vars = [];\n                        value =\n                        { Types.abi = Types.Abi {todo = \"Rust\"};\n                          c_variadic = false;\n                          inputs = [(Types.Uint Types.Usize)];\n                          output = (Types.Uint Types.U8);\n                          unsafety = Types.Normal }\n                        }))\n                ]}\n             ];\n           output =\n           Types.Adt {\n             def_id =\n             { Types.index = (5, 6696); krate = \"alloc\";\n               path =\n               [{ Types.data = (Types.TypeNs \"vec\"); disambiguator = 0 };\n                 { Types.data = (Types.TypeNs \"Vec\"); disambiguator = 0 }]\n               };\n             generic_args =\n             [(Types.Type (Types.Uint Types.U8));\n               (Types.Type\n                  Types.Adt {\n                    def_id =\n                    { Types.index = (5, 7004); krate = \"alloc\";\n                      path =\n                      [{ Types.data = (Types.TypeNs \"alloc\");\n                         disambiguator = 0 };\n                        { Types.data = (Types.TypeNs \"Global\");\n                          disambiguator = 0 }\n                        ]\n                      };\n                    generic_args = []})\n               ]};\n           unsafety = Types.Normal }\n         })};\n  hir_id = (Some (\"743\", \"5\"));\n  span =\n  { Types.filename = (Types.Real (Types.LocalPath \"src/tls13utils.rs\"));\n    hi = { Types.col = \"29\"; line = \"636\" };\n    lo = { Types.col = \"4\"; line = \"634\" } };\n  ty =\n  Types.Adt {\n    def_id =\n    { Types.index = (5, 6696); krate = \"alloc\";\n      path =\n      [{ Types.data = (Types.TypeNs \"vec\"); disambiguator = 0 };\n        { Types.data = (Types.TypeNs \"Vec\"); disambiguator = 0 }]\n      };\n    generic_args =\n    [(Types.Type (Types.Uint Types.U8));\n      (Types.Type\n         Types.Adt {\n           def_id =\n           { Types.index = (5, 7004); krate = \"alloc\";\n             path =\n             [{ Types.data = (Types.TypeNs \"alloc\"); disambiguator = 0 };\n               { Types.data = (Types.TypeNs \"Global\"); disambiguator = 0 }]\n             };\n           generic_args = []})\n      ]}\n  }"

      <:
      Alloc.Vec.t_Vec u8 Alloc.Alloc.t_Global)

type t_AppData = | AppData : t_Bytes -> t_AppData

let impl__AppData__as_raw (self: t_AppData) : t_Bytes = self._0

let impl__AppData__into_raw (self: t_AppData) : t_Bytes = self._0

let impl__AppData__new (b: t_Bytes) : t_AppData = AppData b <: t_AppData

[@@ FStar.Tactics.Typeclasses.tcinstance]
let impl_20: Core.Convert.t_From t_AppData (t_Slice u8) =
  { f_from = fun (value: t_Slice u8) -> AppData (Core.Convert.f_into value) <: t_AppData }

[@@ FStar.Tactics.Typeclasses.tcinstance]
let impl_21 (v_N: usize) : Core.Convert.t_From t_AppData (t_Array u8 v_N) =
  { f_from = fun (value: t_Array u8 v_N) -> AppData (Core.Convert.f_into value) <: t_AppData }

[@@ FStar.Tactics.Typeclasses.tcinstance]
let impl_22: Core.Convert.t_From t_AppData (Alloc.Vec.t_Vec u8 Alloc.Alloc.t_Global) =
  {
    f_from
    =
    fun (value: Alloc.Vec.t_Vec u8 Alloc.Alloc.t_Global) ->
      AppData (Core.Convert.f_into value) <: t_AppData
  }

[@@ FStar.Tactics.Typeclasses.tcinstance]
let impl_23: Core.Convert.t_From t_AppData t_Bytes =
  { f_from = fun (value: t_Bytes) -> AppData value <: t_AppData }
