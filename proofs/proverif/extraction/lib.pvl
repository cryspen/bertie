(*****************************************)
(* Preamble *)
(*****************************************)

channel c.

fun construct_fail() : bitstring
reduc construct_fail() = fail.

type Option.
fun Some(bitstring): Option [data].
fun None(): Option [data].
letfun Option_err() = let x = construct_fail() in None().

const empty: bitstring.
letfun bitstring_default() = empty.
letfun bitstring_err() = let x = construct_fail() in bitstring_default().

letfun nat_default() = 0.
fun nat_to_bitstring(nat): bitstring.

letfun bool_default() = false.


(*****************************************)
(* Types and Constructors *)
(*****************************************)

type bertie__tls13crypto__t_AeadAlgorithm.

fun bertie__tls13crypto__t_AeadAlgorithm_to_bitstring(
      bertie__tls13crypto__t_AeadAlgorithm
    )
    : bitstring [typeConverter].
fun bertie__tls13crypto__t_AeadAlgorithm_from_bitstring(bitstring)
    : bertie__tls13crypto__t_AeadAlgorithm [typeConverter].
const bertie__tls13crypto__t_AeadAlgorithm_default_value: bertie__tls13crypto__t_AeadAlgorithm.
letfun bertie__tls13crypto__t_AeadAlgorithm_default() =
       bertie__tls13crypto__t_AeadAlgorithm_default_value.
letfun bertie__tls13crypto__t_AeadAlgorithm_err() =
       let x = construct_fail() in bertie__tls13crypto__t_AeadAlgorithm_default_value.
fun bertie__tls13crypto__AeadAlgorithm_AeadAlgorithm_Chacha20Poly1305_c()
    : bertie__tls13crypto__t_AeadAlgorithm [data].

fun bertie__tls13crypto__AeadAlgorithm_AeadAlgorithm_Aes128Gcm_c()
    : bertie__tls13crypto__t_AeadAlgorithm [data].

fun bertie__tls13crypto__AeadAlgorithm_AeadAlgorithm_Aes256Gcm_c()
    : bertie__tls13crypto__t_AeadAlgorithm [data].


type bertie__tls13crypto__t_HashAlgorithm.

fun bertie__tls13crypto__t_HashAlgorithm_to_bitstring(
      bertie__tls13crypto__t_HashAlgorithm
    )
    : bitstring [typeConverter].
fun bertie__tls13crypto__t_HashAlgorithm_from_bitstring(bitstring)
    : bertie__tls13crypto__t_HashAlgorithm [typeConverter].
const bertie__tls13crypto__t_HashAlgorithm_default_value: bertie__tls13crypto__t_HashAlgorithm.
letfun bertie__tls13crypto__t_HashAlgorithm_default() =
       bertie__tls13crypto__t_HashAlgorithm_default_value.
letfun bertie__tls13crypto__t_HashAlgorithm_err() =
       let x = construct_fail() in bertie__tls13crypto__t_HashAlgorithm_default_value.
fun bertie__tls13crypto__HashAlgorithm_HashAlgorithm_SHA256_c()
    : bertie__tls13crypto__t_HashAlgorithm [data].

fun bertie__tls13crypto__HashAlgorithm_HashAlgorithm_SHA384_c()
    : bertie__tls13crypto__t_HashAlgorithm [data].

fun bertie__tls13crypto__HashAlgorithm_HashAlgorithm_SHA512_c()
    : bertie__tls13crypto__t_HashAlgorithm [data].


type bertie__tls13crypto__t_KemScheme.

fun bertie__tls13crypto__t_KemScheme_to_bitstring(
      bertie__tls13crypto__t_KemScheme
    )
    : bitstring [typeConverter].
fun bertie__tls13crypto__t_KemScheme_from_bitstring(bitstring)
    : bertie__tls13crypto__t_KemScheme [typeConverter].
const bertie__tls13crypto__t_KemScheme_default_value: bertie__tls13crypto__t_KemScheme.
letfun bertie__tls13crypto__t_KemScheme_default() =
       bertie__tls13crypto__t_KemScheme_default_value.
letfun bertie__tls13crypto__t_KemScheme_err() =
       let x = construct_fail() in bertie__tls13crypto__t_KemScheme_default_value.
fun bertie__tls13crypto__KemScheme_KemScheme_X25519_c()
    : bertie__tls13crypto__t_KemScheme [data].

fun bertie__tls13crypto__KemScheme_KemScheme_Secp256r1_c()
    : bertie__tls13crypto__t_KemScheme [data].

fun bertie__tls13crypto__KemScheme_KemScheme_X448_c()
    : bertie__tls13crypto__t_KemScheme [data].

fun bertie__tls13crypto__KemScheme_KemScheme_Secp384r1_c()
    : bertie__tls13crypto__t_KemScheme [data].

fun bertie__tls13crypto__KemScheme_KemScheme_Secp521r1_c()
    : bertie__tls13crypto__t_KemScheme [data].


type bertie__tls13crypto__t_SignatureScheme.

fun bertie__tls13crypto__t_SignatureScheme_to_bitstring(
      bertie__tls13crypto__t_SignatureScheme
    )
    : bitstring [typeConverter].
fun bertie__tls13crypto__t_SignatureScheme_from_bitstring(bitstring)
    : bertie__tls13crypto__t_SignatureScheme [typeConverter].
const bertie__tls13crypto__t_SignatureScheme_default_value: bertie__tls13crypto__t_SignatureScheme.
letfun bertie__tls13crypto__t_SignatureScheme_default() =
       bertie__tls13crypto__t_SignatureScheme_default_value.
letfun bertie__tls13crypto__t_SignatureScheme_err() =
       let x = construct_fail() in bertie__tls13crypto__t_SignatureScheme_default_value.
fun bertie__tls13crypto__SignatureScheme_SignatureScheme_RsaPssRsaSha256_c()
    : bertie__tls13crypto__t_SignatureScheme [data].

fun bertie__tls13crypto__SignatureScheme_SignatureScheme_EcdsaSecp256r1Sha256_c(
    )
    : bertie__tls13crypto__t_SignatureScheme [data].

fun bertie__tls13crypto__SignatureScheme_SignatureScheme_ED25519_c()
    : bertie__tls13crypto__t_SignatureScheme [data].


type bertie__tls13cert__t_CertificateKey.

fun bertie__tls13cert__t_CertificateKey_to_bitstring(
      bertie__tls13cert__t_CertificateKey
    )
    : bitstring [typeConverter].
fun bertie__tls13cert__t_CertificateKey_from_bitstring(bitstring)
    : bertie__tls13cert__t_CertificateKey [typeConverter].
const bertie__tls13cert__t_CertificateKey_default_value: bertie__tls13cert__t_CertificateKey.
letfun bertie__tls13cert__t_CertificateKey_default() =
       bertie__tls13cert__t_CertificateKey_default_value.
letfun bertie__tls13cert__t_CertificateKey_err() =
       let x = construct_fail() in bertie__tls13cert__t_CertificateKey_default_value.
fun bertie__tls13cert__CertificateKey_c(nat, nat)
    : bertie__tls13cert__t_CertificateKey [data].
reduc forall 
  bertie__tls13cert__CertificateKey_0: nat,
  bertie__tls13cert__CertificateKey_1: nat
;
    accessor_bertie__tls13cert__CertificateKey_0(
      bertie__tls13cert__CertificateKey_c(
        bertie__tls13cert__CertificateKey_0, bertie__tls13cert__CertificateKey_1
      )
    ) = bertie__tls13cert__CertificateKey_0.
reduc forall 
  bertie__tls13cert__CertificateKey_0: nat,
  bertie__tls13cert__CertificateKey_1: nat
;
    accessor_bertie__tls13cert__CertificateKey_1(
      bertie__tls13cert__CertificateKey_c(
        bertie__tls13cert__CertificateKey_0, bertie__tls13cert__CertificateKey_1
      )
    ) = bertie__tls13cert__CertificateKey_1.

type bertie__tls13crypto__t_Algorithms.

fun bertie__tls13crypto__t_Algorithms_to_bitstring(
      bertie__tls13crypto__t_Algorithms
    )
    : bitstring [typeConverter].
fun bertie__tls13crypto__t_Algorithms_from_bitstring(bitstring)
    : bertie__tls13crypto__t_Algorithms [typeConverter].
const bertie__tls13crypto__t_Algorithms_default_value: bertie__tls13crypto__t_Algorithms.
letfun bertie__tls13crypto__t_Algorithms_default() =
       bertie__tls13crypto__t_Algorithms_default_value.
letfun bertie__tls13crypto__t_Algorithms_err() =
       let x = construct_fail() in bertie__tls13crypto__t_Algorithms_default_value.
fun bertie__tls13crypto__Algorithms_c(
      bertie__tls13crypto__t_HashAlgorithm,
      bertie__tls13crypto__t_AeadAlgorithm,
      bertie__tls13crypto__t_SignatureScheme,
      bertie__tls13crypto__t_KemScheme,
      bool,
      bool
    )
    : bertie__tls13crypto__t_Algorithms [data].
reduc forall 
  bertie__tls13crypto__Algorithms_f_hash: bertie__tls13crypto__t_HashAlgorithm,
  bertie__tls13crypto__Algorithms_f_aead: bertie__tls13crypto__t_AeadAlgorithm,
  bertie__tls13crypto__Algorithms_f_signature: bertie__tls13crypto__t_SignatureScheme,
  bertie__tls13crypto__Algorithms_f_kem: bertie__tls13crypto__t_KemScheme,
  bertie__tls13crypto__Algorithms_f_psk_mode: bool,
  bertie__tls13crypto__Algorithms_f_zero_rtt: bool
;
    accessor_bertie__tls13crypto__Algorithms_f_hash(
      bertie__tls13crypto__Algorithms_c(
        bertie__tls13crypto__Algorithms_f_hash,
        bertie__tls13crypto__Algorithms_f_aead,
        bertie__tls13crypto__Algorithms_f_signature,
        bertie__tls13crypto__Algorithms_f_kem,
        bertie__tls13crypto__Algorithms_f_psk_mode,
        bertie__tls13crypto__Algorithms_f_zero_rtt
      )
    ) = bertie__tls13crypto__Algorithms_f_hash.
reduc forall 
  bertie__tls13crypto__Algorithms_f_hash: bertie__tls13crypto__t_HashAlgorithm,
  bertie__tls13crypto__Algorithms_f_aead: bertie__tls13crypto__t_AeadAlgorithm,
  bertie__tls13crypto__Algorithms_f_signature: bertie__tls13crypto__t_SignatureScheme,
  bertie__tls13crypto__Algorithms_f_kem: bertie__tls13crypto__t_KemScheme,
  bertie__tls13crypto__Algorithms_f_psk_mode: bool,
  bertie__tls13crypto__Algorithms_f_zero_rtt: bool
;
    accessor_bertie__tls13crypto__Algorithms_f_aead(
      bertie__tls13crypto__Algorithms_c(
        bertie__tls13crypto__Algorithms_f_hash,
        bertie__tls13crypto__Algorithms_f_aead,
        bertie__tls13crypto__Algorithms_f_signature,
        bertie__tls13crypto__Algorithms_f_kem,
        bertie__tls13crypto__Algorithms_f_psk_mode,
        bertie__tls13crypto__Algorithms_f_zero_rtt
      )
    ) = bertie__tls13crypto__Algorithms_f_aead.
reduc forall 
  bertie__tls13crypto__Algorithms_f_hash: bertie__tls13crypto__t_HashAlgorithm,
  bertie__tls13crypto__Algorithms_f_aead: bertie__tls13crypto__t_AeadAlgorithm,
  bertie__tls13crypto__Algorithms_f_signature: bertie__tls13crypto__t_SignatureScheme,
  bertie__tls13crypto__Algorithms_f_kem: bertie__tls13crypto__t_KemScheme,
  bertie__tls13crypto__Algorithms_f_psk_mode: bool,
  bertie__tls13crypto__Algorithms_f_zero_rtt: bool
;
    accessor_bertie__tls13crypto__Algorithms_f_signature(
      bertie__tls13crypto__Algorithms_c(
        bertie__tls13crypto__Algorithms_f_hash,
        bertie__tls13crypto__Algorithms_f_aead,
        bertie__tls13crypto__Algorithms_f_signature,
        bertie__tls13crypto__Algorithms_f_kem,
        bertie__tls13crypto__Algorithms_f_psk_mode,
        bertie__tls13crypto__Algorithms_f_zero_rtt
      )
    ) = bertie__tls13crypto__Algorithms_f_signature.
reduc forall 
  bertie__tls13crypto__Algorithms_f_hash: bertie__tls13crypto__t_HashAlgorithm,
  bertie__tls13crypto__Algorithms_f_aead: bertie__tls13crypto__t_AeadAlgorithm,
  bertie__tls13crypto__Algorithms_f_signature: bertie__tls13crypto__t_SignatureScheme,
  bertie__tls13crypto__Algorithms_f_kem: bertie__tls13crypto__t_KemScheme,
  bertie__tls13crypto__Algorithms_f_psk_mode: bool,
  bertie__tls13crypto__Algorithms_f_zero_rtt: bool
;
    accessor_bertie__tls13crypto__Algorithms_f_kem(
      bertie__tls13crypto__Algorithms_c(
        bertie__tls13crypto__Algorithms_f_hash,
        bertie__tls13crypto__Algorithms_f_aead,
        bertie__tls13crypto__Algorithms_f_signature,
        bertie__tls13crypto__Algorithms_f_kem,
        bertie__tls13crypto__Algorithms_f_psk_mode,
        bertie__tls13crypto__Algorithms_f_zero_rtt
      )
    ) = bertie__tls13crypto__Algorithms_f_kem.
reduc forall 
  bertie__tls13crypto__Algorithms_f_hash: bertie__tls13crypto__t_HashAlgorithm,
  bertie__tls13crypto__Algorithms_f_aead: bertie__tls13crypto__t_AeadAlgorithm,
  bertie__tls13crypto__Algorithms_f_signature: bertie__tls13crypto__t_SignatureScheme,
  bertie__tls13crypto__Algorithms_f_kem: bertie__tls13crypto__t_KemScheme,
  bertie__tls13crypto__Algorithms_f_psk_mode: bool,
  bertie__tls13crypto__Algorithms_f_zero_rtt: bool
;
    accessor_bertie__tls13crypto__Algorithms_f_psk_mode(
      bertie__tls13crypto__Algorithms_c(
        bertie__tls13crypto__Algorithms_f_hash,
        bertie__tls13crypto__Algorithms_f_aead,
        bertie__tls13crypto__Algorithms_f_signature,
        bertie__tls13crypto__Algorithms_f_kem,
        bertie__tls13crypto__Algorithms_f_psk_mode,
        bertie__tls13crypto__Algorithms_f_zero_rtt
      )
    ) = bertie__tls13crypto__Algorithms_f_psk_mode.
reduc forall 
  bertie__tls13crypto__Algorithms_f_hash: bertie__tls13crypto__t_HashAlgorithm,
  bertie__tls13crypto__Algorithms_f_aead: bertie__tls13crypto__t_AeadAlgorithm,
  bertie__tls13crypto__Algorithms_f_signature: bertie__tls13crypto__t_SignatureScheme,
  bertie__tls13crypto__Algorithms_f_kem: bertie__tls13crypto__t_KemScheme,
  bertie__tls13crypto__Algorithms_f_psk_mode: bool,
  bertie__tls13crypto__Algorithms_f_zero_rtt: bool
;
    accessor_bertie__tls13crypto__Algorithms_f_zero_rtt(
      bertie__tls13crypto__Algorithms_c(
        bertie__tls13crypto__Algorithms_f_hash,
        bertie__tls13crypto__Algorithms_f_aead,
        bertie__tls13crypto__Algorithms_f_signature,
        bertie__tls13crypto__Algorithms_f_kem,
        bertie__tls13crypto__Algorithms_f_psk_mode,
        bertie__tls13crypto__Algorithms_f_zero_rtt
      )
    ) = bertie__tls13crypto__Algorithms_f_zero_rtt.

type bertie__tls13utils__t_Bytes.

fun bertie__tls13utils__t_Bytes_to_bitstring(bertie__tls13utils__t_Bytes)
    : bitstring [typeConverter].
fun bertie__tls13utils__t_Bytes_from_bitstring(bitstring)
    : bertie__tls13utils__t_Bytes [typeConverter].
const bertie__tls13utils__t_Bytes_default_value: bertie__tls13utils__t_Bytes.
letfun bertie__tls13utils__t_Bytes_default() =
       bertie__tls13utils__t_Bytes_default_value.
letfun bertie__tls13utils__t_Bytes_err() =
       let x = construct_fail() in bertie__tls13utils__t_Bytes_default_value.
fun bertie__tls13utils__Bytes_c(bitstring)
    : bertie__tls13utils__t_Bytes [data].
reduc forall bertie__tls13utils__Bytes_0: bitstring;
    accessor_bertie__tls13utils__Bytes_0(
      bertie__tls13utils__Bytes_c(bertie__tls13utils__Bytes_0)
    ) = bertie__tls13utils__Bytes_0.

type bertie__server__t_ServerDB.

fun bertie__server__t_ServerDB_to_bitstring(bertie__server__t_ServerDB)
    : bitstring [typeConverter].
fun bertie__server__t_ServerDB_from_bitstring(bitstring)
    : bertie__server__t_ServerDB [typeConverter].
const bertie__server__t_ServerDB_default_value: bertie__server__t_ServerDB.
letfun bertie__server__t_ServerDB_default() =
       bertie__server__t_ServerDB_default_value.
letfun bertie__server__t_ServerDB_err() =
       let x = construct_fail() in bertie__server__t_ServerDB_default_value.
fun bertie__server__ServerDB_c(
      bertie__tls13utils__t_Bytes,
      bertie__tls13utils__t_Bytes,
      bertie__tls13utils__t_Bytes,
      Option
    )
    : bertie__server__t_ServerDB [data].
reduc forall 
  bertie__server__ServerDB_f_server_name: bertie__tls13utils__t_Bytes,
  bertie__server__ServerDB_f_cert: bertie__tls13utils__t_Bytes,
  bertie__server__ServerDB_f_sk: bertie__tls13utils__t_Bytes,
  bertie__server__ServerDB_f_psk_opt: Option
;
    accessor_bertie__server__ServerDB_f_server_name(
      bertie__server__ServerDB_c(
        bertie__server__ServerDB_f_server_name,
        bertie__server__ServerDB_f_cert,
        bertie__server__ServerDB_f_sk,
        bertie__server__ServerDB_f_psk_opt
      )
    ) = bertie__server__ServerDB_f_server_name.
reduc forall 
  bertie__server__ServerDB_f_server_name: bertie__tls13utils__t_Bytes,
  bertie__server__ServerDB_f_cert: bertie__tls13utils__t_Bytes,
  bertie__server__ServerDB_f_sk: bertie__tls13utils__t_Bytes,
  bertie__server__ServerDB_f_psk_opt: Option
;
    accessor_bertie__server__ServerDB_f_cert(
      bertie__server__ServerDB_c(
        bertie__server__ServerDB_f_server_name,
        bertie__server__ServerDB_f_cert,
        bertie__server__ServerDB_f_sk,
        bertie__server__ServerDB_f_psk_opt
      )
    ) = bertie__server__ServerDB_f_cert.
reduc forall 
  bertie__server__ServerDB_f_server_name: bertie__tls13utils__t_Bytes,
  bertie__server__ServerDB_f_cert: bertie__tls13utils__t_Bytes,
  bertie__server__ServerDB_f_sk: bertie__tls13utils__t_Bytes,
  bertie__server__ServerDB_f_psk_opt: Option
;
    accessor_bertie__server__ServerDB_f_sk(
      bertie__server__ServerDB_c(
        bertie__server__ServerDB_f_server_name,
        bertie__server__ServerDB_f_cert,
        bertie__server__ServerDB_f_sk,
        bertie__server__ServerDB_f_psk_opt
      )
    ) = bertie__server__ServerDB_f_sk.
reduc forall 
  bertie__server__ServerDB_f_server_name: bertie__tls13utils__t_Bytes,
  bertie__server__ServerDB_f_cert: bertie__tls13utils__t_Bytes,
  bertie__server__ServerDB_f_sk: bertie__tls13utils__t_Bytes,
  bertie__server__ServerDB_f_psk_opt: Option
;
    accessor_bertie__server__ServerDB_f_psk_opt(
      bertie__server__ServerDB_c(
        bertie__server__ServerDB_f_server_name,
        bertie__server__ServerDB_f_cert,
        bertie__server__ServerDB_f_sk,
        bertie__server__ServerDB_f_psk_opt
      )
    ) = bertie__server__ServerDB_f_psk_opt.

type bertie__server__t_ServerInfo.

fun bertie__server__t_ServerInfo_to_bitstring(bertie__server__t_ServerInfo)
    : bitstring [typeConverter].
fun bertie__server__t_ServerInfo_from_bitstring(bitstring)
    : bertie__server__t_ServerInfo [typeConverter].
const bertie__server__t_ServerInfo_default_value: bertie__server__t_ServerInfo.
letfun bertie__server__t_ServerInfo_default() =
       bertie__server__t_ServerInfo_default_value.
letfun bertie__server__t_ServerInfo_err() =
       let x = construct_fail() in bertie__server__t_ServerInfo_default_value.
fun bertie__server__ServerInfo_c(
      bertie__tls13utils__t_Bytes, bertie__tls13utils__t_Bytes, Option
    )
    : bertie__server__t_ServerInfo [data].
reduc forall 
  bertie__server__ServerInfo_f_cert: bertie__tls13utils__t_Bytes,
  bertie__server__ServerInfo_f_sk: bertie__tls13utils__t_Bytes,
  bertie__server__ServerInfo_f_psk_opt: Option
;
    accessor_bertie__server__ServerInfo_f_cert(
      bertie__server__ServerInfo_c(
        bertie__server__ServerInfo_f_cert,
        bertie__server__ServerInfo_f_sk,
        bertie__server__ServerInfo_f_psk_opt
      )
    ) = bertie__server__ServerInfo_f_cert.
reduc forall 
  bertie__server__ServerInfo_f_cert: bertie__tls13utils__t_Bytes,
  bertie__server__ServerInfo_f_sk: bertie__tls13utils__t_Bytes,
  bertie__server__ServerInfo_f_psk_opt: Option
;
    accessor_bertie__server__ServerInfo_f_sk(
      bertie__server__ServerInfo_c(
        bertie__server__ServerInfo_f_cert,
        bertie__server__ServerInfo_f_sk,
        bertie__server__ServerInfo_f_psk_opt
      )
    ) = bertie__server__ServerInfo_f_sk.
reduc forall 
  bertie__server__ServerInfo_f_cert: bertie__tls13utils__t_Bytes,
  bertie__server__ServerInfo_f_sk: bertie__tls13utils__t_Bytes,
  bertie__server__ServerInfo_f_psk_opt: Option
;
    accessor_bertie__server__ServerInfo_f_psk_opt(
      bertie__server__ServerInfo_c(
        bertie__server__ServerInfo_f_cert,
        bertie__server__ServerInfo_f_sk,
        bertie__server__ServerInfo_f_psk_opt
      )
    ) = bertie__server__ServerInfo_f_psk_opt.

type bertie__tls13crypto__t_AeadKey.

fun bertie__tls13crypto__t_AeadKey_to_bitstring(bertie__tls13crypto__t_AeadKey)
    : bitstring [typeConverter].
fun bertie__tls13crypto__t_AeadKey_from_bitstring(bitstring)
    : bertie__tls13crypto__t_AeadKey [typeConverter].
const bertie__tls13crypto__t_AeadKey_default_value: bertie__tls13crypto__t_AeadKey.
letfun bertie__tls13crypto__t_AeadKey_default() =
       bertie__tls13crypto__t_AeadKey_default_value.
letfun bertie__tls13crypto__t_AeadKey_err() =
       let x = construct_fail() in bertie__tls13crypto__t_AeadKey_default_value.
fun bertie__tls13crypto__AeadKey_c(
      bertie__tls13utils__t_Bytes, bertie__tls13crypto__t_AeadAlgorithm
    )
    : bertie__tls13crypto__t_AeadKey [data].
reduc forall 
  bertie__tls13crypto__AeadKey_f_bytes: bertie__tls13utils__t_Bytes,
  bertie__tls13crypto__AeadKey_f_alg: bertie__tls13crypto__t_AeadAlgorithm
;
    accessor_bertie__tls13crypto__AeadKey_f_bytes(
      bertie__tls13crypto__AeadKey_c(
        bertie__tls13crypto__AeadKey_f_bytes, bertie__tls13crypto__AeadKey_f_alg
      )
    ) = bertie__tls13crypto__AeadKey_f_bytes.
reduc forall 
  bertie__tls13crypto__AeadKey_f_bytes: bertie__tls13utils__t_Bytes,
  bertie__tls13crypto__AeadKey_f_alg: bertie__tls13crypto__t_AeadAlgorithm
;
    accessor_bertie__tls13crypto__AeadKey_f_alg(
      bertie__tls13crypto__AeadKey_c(
        bertie__tls13crypto__AeadKey_f_bytes, bertie__tls13crypto__AeadKey_f_alg
      )
    ) = bertie__tls13crypto__AeadKey_f_alg.

type bertie__tls13crypto__t_RsaVerificationKey.

fun bertie__tls13crypto__t_RsaVerificationKey_to_bitstring(
      bertie__tls13crypto__t_RsaVerificationKey
    )
    : bitstring [typeConverter].
fun bertie__tls13crypto__t_RsaVerificationKey_from_bitstring(bitstring)
    : bertie__tls13crypto__t_RsaVerificationKey [typeConverter].
const bertie__tls13crypto__t_RsaVerificationKey_default_value: bertie__tls13crypto__t_RsaVerificationKey.
letfun bertie__tls13crypto__t_RsaVerificationKey_default() =
       bertie__tls13crypto__t_RsaVerificationKey_default_value.
letfun bertie__tls13crypto__t_RsaVerificationKey_err() =
       let x = construct_fail() in bertie__tls13crypto__t_RsaVerificationKey_default_value.
fun bertie__tls13crypto__RsaVerificationKey_c(
      bertie__tls13utils__t_Bytes, bertie__tls13utils__t_Bytes
    )
    : bertie__tls13crypto__t_RsaVerificationKey [data].
reduc forall 
  bertie__tls13crypto__RsaVerificationKey_f_modulus: bertie__tls13utils__t_Bytes,
  bertie__tls13crypto__RsaVerificationKey_f_exponent: bertie__tls13utils__t_Bytes
;
    accessor_bertie__tls13crypto__RsaVerificationKey_f_modulus(
      bertie__tls13crypto__RsaVerificationKey_c(
        bertie__tls13crypto__RsaVerificationKey_f_modulus,
        bertie__tls13crypto__RsaVerificationKey_f_exponent
      )
    ) = bertie__tls13crypto__RsaVerificationKey_f_modulus.
reduc forall 
  bertie__tls13crypto__RsaVerificationKey_f_modulus: bertie__tls13utils__t_Bytes,
  bertie__tls13crypto__RsaVerificationKey_f_exponent: bertie__tls13utils__t_Bytes
;
    accessor_bertie__tls13crypto__RsaVerificationKey_f_exponent(
      bertie__tls13crypto__RsaVerificationKey_c(
        bertie__tls13crypto__RsaVerificationKey_f_modulus,
        bertie__tls13crypto__RsaVerificationKey_f_exponent
      )
    ) = bertie__tls13crypto__RsaVerificationKey_f_exponent.

type bertie__tls13crypto__t_PublicVerificationKey.

fun bertie__tls13crypto__t_PublicVerificationKey_to_bitstring(
      bertie__tls13crypto__t_PublicVerificationKey
    )
    : bitstring [typeConverter].
fun bertie__tls13crypto__t_PublicVerificationKey_from_bitstring(bitstring)
    : bertie__tls13crypto__t_PublicVerificationKey [typeConverter].
const bertie__tls13crypto__t_PublicVerificationKey_default_value: bertie__tls13crypto__t_PublicVerificationKey.
letfun bertie__tls13crypto__t_PublicVerificationKey_default() =
       bertie__tls13crypto__t_PublicVerificationKey_default_value.
letfun bertie__tls13crypto__t_PublicVerificationKey_err() =
       let x = construct_fail() in bertie__tls13crypto__t_PublicVerificationKey_default_value.
fun bertie__tls13crypto__PublicVerificationKey_PublicVerificationKey_EcDsa_c(
      bertie__tls13utils__t_Bytes
    )
    : bertie__tls13crypto__t_PublicVerificationKey [data].
reduc forall 
  bertie__tls13crypto__PublicVerificationKey__EcDsa_0: bertie__tls13utils__t_Bytes
;
    accessor_bertie__tls13crypto__PublicVerificationKey__EcDsa_0(
      bertie__tls13crypto__PublicVerificationKey_PublicVerificationKey_EcDsa_c(
        bertie__tls13crypto__PublicVerificationKey__EcDsa_0
      )
    ) = bertie__tls13crypto__PublicVerificationKey__EcDsa_0.
fun bertie__tls13crypto__PublicVerificationKey_PublicVerificationKey_Rsa_c(
      bertie__tls13crypto__t_RsaVerificationKey
    )
    : bertie__tls13crypto__t_PublicVerificationKey [data].
reduc forall 
  bertie__tls13crypto__PublicVerificationKey__Rsa_0: bertie__tls13crypto__t_RsaVerificationKey
;
    accessor_bertie__tls13crypto__PublicVerificationKey__Rsa_0(
      bertie__tls13crypto__PublicVerificationKey_PublicVerificationKey_Rsa_c(
        bertie__tls13crypto__PublicVerificationKey__Rsa_0
      )
    ) = bertie__tls13crypto__PublicVerificationKey__Rsa_0.

type bertie__tls13formats__handshake_data__t_HandshakeData.

fun bertie__tls13formats__handshake_data__t_HandshakeData_to_bitstring(
      bertie__tls13formats__handshake_data__t_HandshakeData
    )
    : bitstring [typeConverter].
fun bertie__tls13formats__handshake_data__t_HandshakeData_from_bitstring(
      bitstring
    )
    : bertie__tls13formats__handshake_data__t_HandshakeData [typeConverter].
const bertie__tls13formats__handshake_data__t_HandshakeData_default_value: bertie__tls13formats__handshake_data__t_HandshakeData.
letfun bertie__tls13formats__handshake_data__t_HandshakeData_default() =
       bertie__tls13formats__handshake_data__t_HandshakeData_default_value.
letfun bertie__tls13formats__handshake_data__t_HandshakeData_err() =
       let x = construct_fail() in bertie__tls13formats__handshake_data__t_HandshakeData_default_value.
fun bertie__tls13formats__handshake_data__HandshakeData_c(
      bertie__tls13utils__t_Bytes
    )
    : bertie__tls13formats__handshake_data__t_HandshakeData [data].
reduc forall 
  bertie__tls13formats__handshake_data__HandshakeData_0: bertie__tls13utils__t_Bytes
;
    accessor_bertie__tls13formats__handshake_data__HandshakeData_0(
      bertie__tls13formats__handshake_data__HandshakeData_c(
        bertie__tls13formats__handshake_data__HandshakeData_0
      )
    ) = bertie__tls13formats__handshake_data__HandshakeData_0.

type bertie__tls13crypto__t_AeadKeyIV.

fun bertie__tls13crypto__t_AeadKeyIV_to_bitstring(
      bertie__tls13crypto__t_AeadKeyIV
    )
    : bitstring [typeConverter].
fun bertie__tls13crypto__t_AeadKeyIV_from_bitstring(bitstring)
    : bertie__tls13crypto__t_AeadKeyIV [typeConverter].
const bertie__tls13crypto__t_AeadKeyIV_default_value: bertie__tls13crypto__t_AeadKeyIV.
letfun bertie__tls13crypto__t_AeadKeyIV_default() =
       bertie__tls13crypto__t_AeadKeyIV_default_value.
letfun bertie__tls13crypto__t_AeadKeyIV_err() =
       let x = construct_fail() in bertie__tls13crypto__t_AeadKeyIV_default_value.
fun bertie__tls13crypto__AeadKeyIV_c(
      bertie__tls13crypto__t_AeadKey, bertie__tls13utils__t_Bytes
    )
    : bertie__tls13crypto__t_AeadKeyIV [data].
reduc forall 
  bertie__tls13crypto__AeadKeyIV_f_key: bertie__tls13crypto__t_AeadKey,
  bertie__tls13crypto__AeadKeyIV_f_iv: bertie__tls13utils__t_Bytes
;
    accessor_bertie__tls13crypto__AeadKeyIV_f_key(
      bertie__tls13crypto__AeadKeyIV_c(
        bertie__tls13crypto__AeadKeyIV_f_key,
        bertie__tls13crypto__AeadKeyIV_f_iv
      )
    ) = bertie__tls13crypto__AeadKeyIV_f_key.
reduc forall 
  bertie__tls13crypto__AeadKeyIV_f_key: bertie__tls13crypto__t_AeadKey,
  bertie__tls13crypto__AeadKeyIV_f_iv: bertie__tls13utils__t_Bytes
;
    accessor_bertie__tls13crypto__AeadKeyIV_f_iv(
      bertie__tls13crypto__AeadKeyIV_c(
        bertie__tls13crypto__AeadKeyIV_f_key,
        bertie__tls13crypto__AeadKeyIV_f_iv
      )
    ) = bertie__tls13crypto__AeadKeyIV_f_iv.

type bertie__tls13formats__t_Transcript.

fun bertie__tls13formats__t_Transcript_to_bitstring(
      bertie__tls13formats__t_Transcript
    )
    : bitstring [typeConverter].
fun bertie__tls13formats__t_Transcript_from_bitstring(bitstring)
    : bertie__tls13formats__t_Transcript [typeConverter].
const bertie__tls13formats__t_Transcript_default_value: bertie__tls13formats__t_Transcript.
letfun bertie__tls13formats__t_Transcript_default() =
       bertie__tls13formats__t_Transcript_default_value.
letfun bertie__tls13formats__t_Transcript_err() =
       let x = construct_fail() in bertie__tls13formats__t_Transcript_default_value.
fun bertie__tls13formats__Transcript_c(
      bertie__tls13crypto__t_HashAlgorithm,
      bertie__tls13formats__handshake_data__t_HandshakeData
    )
    : bertie__tls13formats__t_Transcript [data].
reduc forall 
  bertie__tls13formats__Transcript_f_hash_algorithm: bertie__tls13crypto__t_HashAlgorithm,
  bertie__tls13formats__Transcript_f_transcript: bertie__tls13formats__handshake_data__t_HandshakeData
;
    accessor_bertie__tls13formats__Transcript_f_hash_algorithm(
      bertie__tls13formats__Transcript_c(
        bertie__tls13formats__Transcript_f_hash_algorithm,
        bertie__tls13formats__Transcript_f_transcript
      )
    ) = bertie__tls13formats__Transcript_f_hash_algorithm.
reduc forall 
  bertie__tls13formats__Transcript_f_hash_algorithm: bertie__tls13crypto__t_HashAlgorithm,
  bertie__tls13formats__Transcript_f_transcript: bertie__tls13formats__handshake_data__t_HandshakeData
;
    accessor_bertie__tls13formats__Transcript_f_transcript(
      bertie__tls13formats__Transcript_c(
        bertie__tls13formats__Transcript_f_hash_algorithm,
        bertie__tls13formats__Transcript_f_transcript
      )
    ) = bertie__tls13formats__Transcript_f_transcript.

type bertie__tls13handshake__t_ClientPostCertificateVerify.

fun bertie__tls13handshake__t_ClientPostCertificateVerify_to_bitstring(
      bertie__tls13handshake__t_ClientPostCertificateVerify
    )
    : bitstring [typeConverter].
fun bertie__tls13handshake__t_ClientPostCertificateVerify_from_bitstring(
      bitstring
    )
    : bertie__tls13handshake__t_ClientPostCertificateVerify [typeConverter].
const bertie__tls13handshake__t_ClientPostCertificateVerify_default_value: bertie__tls13handshake__t_ClientPostCertificateVerify.
letfun bertie__tls13handshake__t_ClientPostCertificateVerify_default() =
       bertie__tls13handshake__t_ClientPostCertificateVerify_default_value.
letfun bertie__tls13handshake__t_ClientPostCertificateVerify_err() =
       let x = construct_fail() in bertie__tls13handshake__t_ClientPostCertificateVerify_default_value.
fun bertie__tls13handshake__ClientPostCertificateVerify_c(
      bertie__tls13utils__t_Bytes,
      bertie__tls13utils__t_Bytes,
      bertie__tls13crypto__t_Algorithms,
      bertie__tls13utils__t_Bytes,
      bertie__tls13utils__t_Bytes,
      bertie__tls13utils__t_Bytes,
      bertie__tls13formats__t_Transcript
    )
    : bertie__tls13handshake__t_ClientPostCertificateVerify [data].
reduc forall 
  bertie__tls13handshake__ClientPostCertificateVerify_0: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostCertificateVerify_1: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostCertificateVerify_2: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__ClientPostCertificateVerify_3: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostCertificateVerify_4: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostCertificateVerify_5: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostCertificateVerify_6: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__ClientPostCertificateVerify_0(
      bertie__tls13handshake__ClientPostCertificateVerify_c(
        bertie__tls13handshake__ClientPostCertificateVerify_0,
        bertie__tls13handshake__ClientPostCertificateVerify_1,
        bertie__tls13handshake__ClientPostCertificateVerify_2,
        bertie__tls13handshake__ClientPostCertificateVerify_3,
        bertie__tls13handshake__ClientPostCertificateVerify_4,
        bertie__tls13handshake__ClientPostCertificateVerify_5,
        bertie__tls13handshake__ClientPostCertificateVerify_6
      )
    ) = bertie__tls13handshake__ClientPostCertificateVerify_0.
reduc forall 
  bertie__tls13handshake__ClientPostCertificateVerify_0: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostCertificateVerify_1: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostCertificateVerify_2: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__ClientPostCertificateVerify_3: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostCertificateVerify_4: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostCertificateVerify_5: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostCertificateVerify_6: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__ClientPostCertificateVerify_1(
      bertie__tls13handshake__ClientPostCertificateVerify_c(
        bertie__tls13handshake__ClientPostCertificateVerify_0,
        bertie__tls13handshake__ClientPostCertificateVerify_1,
        bertie__tls13handshake__ClientPostCertificateVerify_2,
        bertie__tls13handshake__ClientPostCertificateVerify_3,
        bertie__tls13handshake__ClientPostCertificateVerify_4,
        bertie__tls13handshake__ClientPostCertificateVerify_5,
        bertie__tls13handshake__ClientPostCertificateVerify_6
      )
    ) = bertie__tls13handshake__ClientPostCertificateVerify_1.
reduc forall 
  bertie__tls13handshake__ClientPostCertificateVerify_0: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostCertificateVerify_1: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostCertificateVerify_2: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__ClientPostCertificateVerify_3: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostCertificateVerify_4: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostCertificateVerify_5: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostCertificateVerify_6: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__ClientPostCertificateVerify_2(
      bertie__tls13handshake__ClientPostCertificateVerify_c(
        bertie__tls13handshake__ClientPostCertificateVerify_0,
        bertie__tls13handshake__ClientPostCertificateVerify_1,
        bertie__tls13handshake__ClientPostCertificateVerify_2,
        bertie__tls13handshake__ClientPostCertificateVerify_3,
        bertie__tls13handshake__ClientPostCertificateVerify_4,
        bertie__tls13handshake__ClientPostCertificateVerify_5,
        bertie__tls13handshake__ClientPostCertificateVerify_6
      )
    ) = bertie__tls13handshake__ClientPostCertificateVerify_2.
reduc forall 
  bertie__tls13handshake__ClientPostCertificateVerify_0: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostCertificateVerify_1: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostCertificateVerify_2: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__ClientPostCertificateVerify_3: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostCertificateVerify_4: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostCertificateVerify_5: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostCertificateVerify_6: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__ClientPostCertificateVerify_3(
      bertie__tls13handshake__ClientPostCertificateVerify_c(
        bertie__tls13handshake__ClientPostCertificateVerify_0,
        bertie__tls13handshake__ClientPostCertificateVerify_1,
        bertie__tls13handshake__ClientPostCertificateVerify_2,
        bertie__tls13handshake__ClientPostCertificateVerify_3,
        bertie__tls13handshake__ClientPostCertificateVerify_4,
        bertie__tls13handshake__ClientPostCertificateVerify_5,
        bertie__tls13handshake__ClientPostCertificateVerify_6
      )
    ) = bertie__tls13handshake__ClientPostCertificateVerify_3.
reduc forall 
  bertie__tls13handshake__ClientPostCertificateVerify_0: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostCertificateVerify_1: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostCertificateVerify_2: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__ClientPostCertificateVerify_3: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostCertificateVerify_4: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostCertificateVerify_5: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostCertificateVerify_6: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__ClientPostCertificateVerify_4(
      bertie__tls13handshake__ClientPostCertificateVerify_c(
        bertie__tls13handshake__ClientPostCertificateVerify_0,
        bertie__tls13handshake__ClientPostCertificateVerify_1,
        bertie__tls13handshake__ClientPostCertificateVerify_2,
        bertie__tls13handshake__ClientPostCertificateVerify_3,
        bertie__tls13handshake__ClientPostCertificateVerify_4,
        bertie__tls13handshake__ClientPostCertificateVerify_5,
        bertie__tls13handshake__ClientPostCertificateVerify_6
      )
    ) = bertie__tls13handshake__ClientPostCertificateVerify_4.
reduc forall 
  bertie__tls13handshake__ClientPostCertificateVerify_0: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostCertificateVerify_1: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostCertificateVerify_2: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__ClientPostCertificateVerify_3: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostCertificateVerify_4: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostCertificateVerify_5: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostCertificateVerify_6: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__ClientPostCertificateVerify_5(
      bertie__tls13handshake__ClientPostCertificateVerify_c(
        bertie__tls13handshake__ClientPostCertificateVerify_0,
        bertie__tls13handshake__ClientPostCertificateVerify_1,
        bertie__tls13handshake__ClientPostCertificateVerify_2,
        bertie__tls13handshake__ClientPostCertificateVerify_3,
        bertie__tls13handshake__ClientPostCertificateVerify_4,
        bertie__tls13handshake__ClientPostCertificateVerify_5,
        bertie__tls13handshake__ClientPostCertificateVerify_6
      )
    ) = bertie__tls13handshake__ClientPostCertificateVerify_5.
reduc forall 
  bertie__tls13handshake__ClientPostCertificateVerify_0: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostCertificateVerify_1: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostCertificateVerify_2: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__ClientPostCertificateVerify_3: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostCertificateVerify_4: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostCertificateVerify_5: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostCertificateVerify_6: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__ClientPostCertificateVerify_6(
      bertie__tls13handshake__ClientPostCertificateVerify_c(
        bertie__tls13handshake__ClientPostCertificateVerify_0,
        bertie__tls13handshake__ClientPostCertificateVerify_1,
        bertie__tls13handshake__ClientPostCertificateVerify_2,
        bertie__tls13handshake__ClientPostCertificateVerify_3,
        bertie__tls13handshake__ClientPostCertificateVerify_4,
        bertie__tls13handshake__ClientPostCertificateVerify_5,
        bertie__tls13handshake__ClientPostCertificateVerify_6
      )
    ) = bertie__tls13handshake__ClientPostCertificateVerify_6.

type bertie__tls13handshake__t_ClientPostClientFinished.

fun bertie__tls13handshake__t_ClientPostClientFinished_to_bitstring(
      bertie__tls13handshake__t_ClientPostClientFinished
    )
    : bitstring [typeConverter].
fun bertie__tls13handshake__t_ClientPostClientFinished_from_bitstring(bitstring)
    : bertie__tls13handshake__t_ClientPostClientFinished [typeConverter].
const bertie__tls13handshake__t_ClientPostClientFinished_default_value: bertie__tls13handshake__t_ClientPostClientFinished.
letfun bertie__tls13handshake__t_ClientPostClientFinished_default() =
       bertie__tls13handshake__t_ClientPostClientFinished_default_value.
letfun bertie__tls13handshake__t_ClientPostClientFinished_err() =
       let x = construct_fail() in bertie__tls13handshake__t_ClientPostClientFinished_default_value.
fun bertie__tls13handshake__ClientPostClientFinished_c(
      bertie__tls13utils__t_Bytes,
      bertie__tls13utils__t_Bytes,
      bertie__tls13crypto__t_Algorithms,
      bertie__tls13utils__t_Bytes,
      bertie__tls13formats__t_Transcript
    )
    : bertie__tls13handshake__t_ClientPostClientFinished [data].
reduc forall 
  bertie__tls13handshake__ClientPostClientFinished_0: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostClientFinished_1: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostClientFinished_2: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__ClientPostClientFinished_3: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostClientFinished_4: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__ClientPostClientFinished_0(
      bertie__tls13handshake__ClientPostClientFinished_c(
        bertie__tls13handshake__ClientPostClientFinished_0,
        bertie__tls13handshake__ClientPostClientFinished_1,
        bertie__tls13handshake__ClientPostClientFinished_2,
        bertie__tls13handshake__ClientPostClientFinished_3,
        bertie__tls13handshake__ClientPostClientFinished_4
      )
    ) = bertie__tls13handshake__ClientPostClientFinished_0.
reduc forall 
  bertie__tls13handshake__ClientPostClientFinished_0: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostClientFinished_1: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostClientFinished_2: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__ClientPostClientFinished_3: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostClientFinished_4: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__ClientPostClientFinished_1(
      bertie__tls13handshake__ClientPostClientFinished_c(
        bertie__tls13handshake__ClientPostClientFinished_0,
        bertie__tls13handshake__ClientPostClientFinished_1,
        bertie__tls13handshake__ClientPostClientFinished_2,
        bertie__tls13handshake__ClientPostClientFinished_3,
        bertie__tls13handshake__ClientPostClientFinished_4
      )
    ) = bertie__tls13handshake__ClientPostClientFinished_1.
reduc forall 
  bertie__tls13handshake__ClientPostClientFinished_0: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostClientFinished_1: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostClientFinished_2: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__ClientPostClientFinished_3: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostClientFinished_4: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__ClientPostClientFinished_2(
      bertie__tls13handshake__ClientPostClientFinished_c(
        bertie__tls13handshake__ClientPostClientFinished_0,
        bertie__tls13handshake__ClientPostClientFinished_1,
        bertie__tls13handshake__ClientPostClientFinished_2,
        bertie__tls13handshake__ClientPostClientFinished_3,
        bertie__tls13handshake__ClientPostClientFinished_4
      )
    ) = bertie__tls13handshake__ClientPostClientFinished_2.
reduc forall 
  bertie__tls13handshake__ClientPostClientFinished_0: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostClientFinished_1: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostClientFinished_2: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__ClientPostClientFinished_3: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostClientFinished_4: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__ClientPostClientFinished_3(
      bertie__tls13handshake__ClientPostClientFinished_c(
        bertie__tls13handshake__ClientPostClientFinished_0,
        bertie__tls13handshake__ClientPostClientFinished_1,
        bertie__tls13handshake__ClientPostClientFinished_2,
        bertie__tls13handshake__ClientPostClientFinished_3,
        bertie__tls13handshake__ClientPostClientFinished_4
      )
    ) = bertie__tls13handshake__ClientPostClientFinished_3.
reduc forall 
  bertie__tls13handshake__ClientPostClientFinished_0: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostClientFinished_1: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostClientFinished_2: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__ClientPostClientFinished_3: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostClientFinished_4: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__ClientPostClientFinished_4(
      bertie__tls13handshake__ClientPostClientFinished_c(
        bertie__tls13handshake__ClientPostClientFinished_0,
        bertie__tls13handshake__ClientPostClientFinished_1,
        bertie__tls13handshake__ClientPostClientFinished_2,
        bertie__tls13handshake__ClientPostClientFinished_3,
        bertie__tls13handshake__ClientPostClientFinished_4
      )
    ) = bertie__tls13handshake__ClientPostClientFinished_4.

type bertie__tls13handshake__t_ClientPostClientHello.

fun bertie__tls13handshake__t_ClientPostClientHello_to_bitstring(
      bertie__tls13handshake__t_ClientPostClientHello
    )
    : bitstring [typeConverter].
fun bertie__tls13handshake__t_ClientPostClientHello_from_bitstring(bitstring)
    : bertie__tls13handshake__t_ClientPostClientHello [typeConverter].
const bertie__tls13handshake__t_ClientPostClientHello_default_value: bertie__tls13handshake__t_ClientPostClientHello.
letfun bertie__tls13handshake__t_ClientPostClientHello_default() =
       bertie__tls13handshake__t_ClientPostClientHello_default_value.
letfun bertie__tls13handshake__t_ClientPostClientHello_err() =
       let x = construct_fail() in bertie__tls13handshake__t_ClientPostClientHello_default_value.
fun bertie__tls13handshake__ClientPostClientHello_c(
      bertie__tls13utils__t_Bytes,
      bertie__tls13crypto__t_Algorithms,
      bertie__tls13utils__t_Bytes,
      Option,
      bertie__tls13formats__t_Transcript
    )
    : bertie__tls13handshake__t_ClientPostClientHello [data].
reduc forall 
  bertie__tls13handshake__ClientPostClientHello_0: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostClientHello_1: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__ClientPostClientHello_2: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostClientHello_3: Option,
  bertie__tls13handshake__ClientPostClientHello_4: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__ClientPostClientHello_0(
      bertie__tls13handshake__ClientPostClientHello_c(
        bertie__tls13handshake__ClientPostClientHello_0,
        bertie__tls13handshake__ClientPostClientHello_1,
        bertie__tls13handshake__ClientPostClientHello_2,
        bertie__tls13handshake__ClientPostClientHello_3,
        bertie__tls13handshake__ClientPostClientHello_4
      )
    ) = bertie__tls13handshake__ClientPostClientHello_0.
reduc forall 
  bertie__tls13handshake__ClientPostClientHello_0: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostClientHello_1: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__ClientPostClientHello_2: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostClientHello_3: Option,
  bertie__tls13handshake__ClientPostClientHello_4: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__ClientPostClientHello_1(
      bertie__tls13handshake__ClientPostClientHello_c(
        bertie__tls13handshake__ClientPostClientHello_0,
        bertie__tls13handshake__ClientPostClientHello_1,
        bertie__tls13handshake__ClientPostClientHello_2,
        bertie__tls13handshake__ClientPostClientHello_3,
        bertie__tls13handshake__ClientPostClientHello_4
      )
    ) = bertie__tls13handshake__ClientPostClientHello_1.
reduc forall 
  bertie__tls13handshake__ClientPostClientHello_0: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostClientHello_1: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__ClientPostClientHello_2: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostClientHello_3: Option,
  bertie__tls13handshake__ClientPostClientHello_4: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__ClientPostClientHello_2(
      bertie__tls13handshake__ClientPostClientHello_c(
        bertie__tls13handshake__ClientPostClientHello_0,
        bertie__tls13handshake__ClientPostClientHello_1,
        bertie__tls13handshake__ClientPostClientHello_2,
        bertie__tls13handshake__ClientPostClientHello_3,
        bertie__tls13handshake__ClientPostClientHello_4
      )
    ) = bertie__tls13handshake__ClientPostClientHello_2.
reduc forall 
  bertie__tls13handshake__ClientPostClientHello_0: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostClientHello_1: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__ClientPostClientHello_2: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostClientHello_3: Option,
  bertie__tls13handshake__ClientPostClientHello_4: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__ClientPostClientHello_3(
      bertie__tls13handshake__ClientPostClientHello_c(
        bertie__tls13handshake__ClientPostClientHello_0,
        bertie__tls13handshake__ClientPostClientHello_1,
        bertie__tls13handshake__ClientPostClientHello_2,
        bertie__tls13handshake__ClientPostClientHello_3,
        bertie__tls13handshake__ClientPostClientHello_4
      )
    ) = bertie__tls13handshake__ClientPostClientHello_3.
reduc forall 
  bertie__tls13handshake__ClientPostClientHello_0: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostClientHello_1: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__ClientPostClientHello_2: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostClientHello_3: Option,
  bertie__tls13handshake__ClientPostClientHello_4: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__ClientPostClientHello_4(
      bertie__tls13handshake__ClientPostClientHello_c(
        bertie__tls13handshake__ClientPostClientHello_0,
        bertie__tls13handshake__ClientPostClientHello_1,
        bertie__tls13handshake__ClientPostClientHello_2,
        bertie__tls13handshake__ClientPostClientHello_3,
        bertie__tls13handshake__ClientPostClientHello_4
      )
    ) = bertie__tls13handshake__ClientPostClientHello_4.

type bertie__tls13handshake__t_ClientPostServerFinished.

fun bertie__tls13handshake__t_ClientPostServerFinished_to_bitstring(
      bertie__tls13handshake__t_ClientPostServerFinished
    )
    : bitstring [typeConverter].
fun bertie__tls13handshake__t_ClientPostServerFinished_from_bitstring(bitstring)
    : bertie__tls13handshake__t_ClientPostServerFinished [typeConverter].
const bertie__tls13handshake__t_ClientPostServerFinished_default_value: bertie__tls13handshake__t_ClientPostServerFinished.
letfun bertie__tls13handshake__t_ClientPostServerFinished_default() =
       bertie__tls13handshake__t_ClientPostServerFinished_default_value.
letfun bertie__tls13handshake__t_ClientPostServerFinished_err() =
       let x = construct_fail() in bertie__tls13handshake__t_ClientPostServerFinished_default_value.
fun bertie__tls13handshake__ClientPostServerFinished_c(
      bertie__tls13utils__t_Bytes,
      bertie__tls13utils__t_Bytes,
      bertie__tls13crypto__t_Algorithms,
      bertie__tls13utils__t_Bytes,
      bertie__tls13utils__t_Bytes,
      bertie__tls13formats__t_Transcript
    )
    : bertie__tls13handshake__t_ClientPostServerFinished [data].
reduc forall 
  bertie__tls13handshake__ClientPostServerFinished_0: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostServerFinished_1: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostServerFinished_2: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__ClientPostServerFinished_3: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostServerFinished_4: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostServerFinished_5: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__ClientPostServerFinished_0(
      bertie__tls13handshake__ClientPostServerFinished_c(
        bertie__tls13handshake__ClientPostServerFinished_0,
        bertie__tls13handshake__ClientPostServerFinished_1,
        bertie__tls13handshake__ClientPostServerFinished_2,
        bertie__tls13handshake__ClientPostServerFinished_3,
        bertie__tls13handshake__ClientPostServerFinished_4,
        bertie__tls13handshake__ClientPostServerFinished_5
      )
    ) = bertie__tls13handshake__ClientPostServerFinished_0.
reduc forall 
  bertie__tls13handshake__ClientPostServerFinished_0: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostServerFinished_1: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostServerFinished_2: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__ClientPostServerFinished_3: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostServerFinished_4: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostServerFinished_5: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__ClientPostServerFinished_1(
      bertie__tls13handshake__ClientPostServerFinished_c(
        bertie__tls13handshake__ClientPostServerFinished_0,
        bertie__tls13handshake__ClientPostServerFinished_1,
        bertie__tls13handshake__ClientPostServerFinished_2,
        bertie__tls13handshake__ClientPostServerFinished_3,
        bertie__tls13handshake__ClientPostServerFinished_4,
        bertie__tls13handshake__ClientPostServerFinished_5
      )
    ) = bertie__tls13handshake__ClientPostServerFinished_1.
reduc forall 
  bertie__tls13handshake__ClientPostServerFinished_0: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostServerFinished_1: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostServerFinished_2: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__ClientPostServerFinished_3: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostServerFinished_4: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostServerFinished_5: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__ClientPostServerFinished_2(
      bertie__tls13handshake__ClientPostServerFinished_c(
        bertie__tls13handshake__ClientPostServerFinished_0,
        bertie__tls13handshake__ClientPostServerFinished_1,
        bertie__tls13handshake__ClientPostServerFinished_2,
        bertie__tls13handshake__ClientPostServerFinished_3,
        bertie__tls13handshake__ClientPostServerFinished_4,
        bertie__tls13handshake__ClientPostServerFinished_5
      )
    ) = bertie__tls13handshake__ClientPostServerFinished_2.
reduc forall 
  bertie__tls13handshake__ClientPostServerFinished_0: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostServerFinished_1: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostServerFinished_2: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__ClientPostServerFinished_3: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostServerFinished_4: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostServerFinished_5: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__ClientPostServerFinished_3(
      bertie__tls13handshake__ClientPostServerFinished_c(
        bertie__tls13handshake__ClientPostServerFinished_0,
        bertie__tls13handshake__ClientPostServerFinished_1,
        bertie__tls13handshake__ClientPostServerFinished_2,
        bertie__tls13handshake__ClientPostServerFinished_3,
        bertie__tls13handshake__ClientPostServerFinished_4,
        bertie__tls13handshake__ClientPostServerFinished_5
      )
    ) = bertie__tls13handshake__ClientPostServerFinished_3.
reduc forall 
  bertie__tls13handshake__ClientPostServerFinished_0: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostServerFinished_1: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostServerFinished_2: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__ClientPostServerFinished_3: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostServerFinished_4: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostServerFinished_5: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__ClientPostServerFinished_4(
      bertie__tls13handshake__ClientPostServerFinished_c(
        bertie__tls13handshake__ClientPostServerFinished_0,
        bertie__tls13handshake__ClientPostServerFinished_1,
        bertie__tls13handshake__ClientPostServerFinished_2,
        bertie__tls13handshake__ClientPostServerFinished_3,
        bertie__tls13handshake__ClientPostServerFinished_4,
        bertie__tls13handshake__ClientPostServerFinished_5
      )
    ) = bertie__tls13handshake__ClientPostServerFinished_4.
reduc forall 
  bertie__tls13handshake__ClientPostServerFinished_0: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostServerFinished_1: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostServerFinished_2: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__ClientPostServerFinished_3: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostServerFinished_4: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostServerFinished_5: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__ClientPostServerFinished_5(
      bertie__tls13handshake__ClientPostServerFinished_c(
        bertie__tls13handshake__ClientPostServerFinished_0,
        bertie__tls13handshake__ClientPostServerFinished_1,
        bertie__tls13handshake__ClientPostServerFinished_2,
        bertie__tls13handshake__ClientPostServerFinished_3,
        bertie__tls13handshake__ClientPostServerFinished_4,
        bertie__tls13handshake__ClientPostServerFinished_5
      )
    ) = bertie__tls13handshake__ClientPostServerFinished_5.

type bertie__tls13handshake__t_ClientPostServerHello.

fun bertie__tls13handshake__t_ClientPostServerHello_to_bitstring(
      bertie__tls13handshake__t_ClientPostServerHello
    )
    : bitstring [typeConverter].
fun bertie__tls13handshake__t_ClientPostServerHello_from_bitstring(bitstring)
    : bertie__tls13handshake__t_ClientPostServerHello [typeConverter].
const bertie__tls13handshake__t_ClientPostServerHello_default_value: bertie__tls13handshake__t_ClientPostServerHello.
letfun bertie__tls13handshake__t_ClientPostServerHello_default() =
       bertie__tls13handshake__t_ClientPostServerHello_default_value.
letfun bertie__tls13handshake__t_ClientPostServerHello_err() =
       let x = construct_fail() in bertie__tls13handshake__t_ClientPostServerHello_default_value.
fun bertie__tls13handshake__ClientPostServerHello_c(
      bertie__tls13utils__t_Bytes,
      bertie__tls13utils__t_Bytes,
      bertie__tls13crypto__t_Algorithms,
      bertie__tls13utils__t_Bytes,
      bertie__tls13utils__t_Bytes,
      bertie__tls13utils__t_Bytes,
      bertie__tls13formats__t_Transcript
    )
    : bertie__tls13handshake__t_ClientPostServerHello [data].
reduc forall 
  bertie__tls13handshake__ClientPostServerHello_0: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostServerHello_1: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostServerHello_2: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__ClientPostServerHello_3: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostServerHello_4: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostServerHello_5: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostServerHello_6: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__ClientPostServerHello_0(
      bertie__tls13handshake__ClientPostServerHello_c(
        bertie__tls13handshake__ClientPostServerHello_0,
        bertie__tls13handshake__ClientPostServerHello_1,
        bertie__tls13handshake__ClientPostServerHello_2,
        bertie__tls13handshake__ClientPostServerHello_3,
        bertie__tls13handshake__ClientPostServerHello_4,
        bertie__tls13handshake__ClientPostServerHello_5,
        bertie__tls13handshake__ClientPostServerHello_6
      )
    ) = bertie__tls13handshake__ClientPostServerHello_0.
reduc forall 
  bertie__tls13handshake__ClientPostServerHello_0: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostServerHello_1: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostServerHello_2: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__ClientPostServerHello_3: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostServerHello_4: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostServerHello_5: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostServerHello_6: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__ClientPostServerHello_1(
      bertie__tls13handshake__ClientPostServerHello_c(
        bertie__tls13handshake__ClientPostServerHello_0,
        bertie__tls13handshake__ClientPostServerHello_1,
        bertie__tls13handshake__ClientPostServerHello_2,
        bertie__tls13handshake__ClientPostServerHello_3,
        bertie__tls13handshake__ClientPostServerHello_4,
        bertie__tls13handshake__ClientPostServerHello_5,
        bertie__tls13handshake__ClientPostServerHello_6
      )
    ) = bertie__tls13handshake__ClientPostServerHello_1.
reduc forall 
  bertie__tls13handshake__ClientPostServerHello_0: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostServerHello_1: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostServerHello_2: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__ClientPostServerHello_3: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostServerHello_4: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostServerHello_5: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostServerHello_6: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__ClientPostServerHello_2(
      bertie__tls13handshake__ClientPostServerHello_c(
        bertie__tls13handshake__ClientPostServerHello_0,
        bertie__tls13handshake__ClientPostServerHello_1,
        bertie__tls13handshake__ClientPostServerHello_2,
        bertie__tls13handshake__ClientPostServerHello_3,
        bertie__tls13handshake__ClientPostServerHello_4,
        bertie__tls13handshake__ClientPostServerHello_5,
        bertie__tls13handshake__ClientPostServerHello_6
      )
    ) = bertie__tls13handshake__ClientPostServerHello_2.
reduc forall 
  bertie__tls13handshake__ClientPostServerHello_0: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostServerHello_1: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostServerHello_2: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__ClientPostServerHello_3: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostServerHello_4: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostServerHello_5: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostServerHello_6: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__ClientPostServerHello_3(
      bertie__tls13handshake__ClientPostServerHello_c(
        bertie__tls13handshake__ClientPostServerHello_0,
        bertie__tls13handshake__ClientPostServerHello_1,
        bertie__tls13handshake__ClientPostServerHello_2,
        bertie__tls13handshake__ClientPostServerHello_3,
        bertie__tls13handshake__ClientPostServerHello_4,
        bertie__tls13handshake__ClientPostServerHello_5,
        bertie__tls13handshake__ClientPostServerHello_6
      )
    ) = bertie__tls13handshake__ClientPostServerHello_3.
reduc forall 
  bertie__tls13handshake__ClientPostServerHello_0: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostServerHello_1: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostServerHello_2: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__ClientPostServerHello_3: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostServerHello_4: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostServerHello_5: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostServerHello_6: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__ClientPostServerHello_4(
      bertie__tls13handshake__ClientPostServerHello_c(
        bertie__tls13handshake__ClientPostServerHello_0,
        bertie__tls13handshake__ClientPostServerHello_1,
        bertie__tls13handshake__ClientPostServerHello_2,
        bertie__tls13handshake__ClientPostServerHello_3,
        bertie__tls13handshake__ClientPostServerHello_4,
        bertie__tls13handshake__ClientPostServerHello_5,
        bertie__tls13handshake__ClientPostServerHello_6
      )
    ) = bertie__tls13handshake__ClientPostServerHello_4.
reduc forall 
  bertie__tls13handshake__ClientPostServerHello_0: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostServerHello_1: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostServerHello_2: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__ClientPostServerHello_3: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostServerHello_4: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostServerHello_5: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostServerHello_6: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__ClientPostServerHello_5(
      bertie__tls13handshake__ClientPostServerHello_c(
        bertie__tls13handshake__ClientPostServerHello_0,
        bertie__tls13handshake__ClientPostServerHello_1,
        bertie__tls13handshake__ClientPostServerHello_2,
        bertie__tls13handshake__ClientPostServerHello_3,
        bertie__tls13handshake__ClientPostServerHello_4,
        bertie__tls13handshake__ClientPostServerHello_5,
        bertie__tls13handshake__ClientPostServerHello_6
      )
    ) = bertie__tls13handshake__ClientPostServerHello_5.
reduc forall 
  bertie__tls13handshake__ClientPostServerHello_0: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostServerHello_1: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostServerHello_2: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__ClientPostServerHello_3: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostServerHello_4: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostServerHello_5: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ClientPostServerHello_6: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__ClientPostServerHello_6(
      bertie__tls13handshake__ClientPostServerHello_c(
        bertie__tls13handshake__ClientPostServerHello_0,
        bertie__tls13handshake__ClientPostServerHello_1,
        bertie__tls13handshake__ClientPostServerHello_2,
        bertie__tls13handshake__ClientPostServerHello_3,
        bertie__tls13handshake__ClientPostServerHello_4,
        bertie__tls13handshake__ClientPostServerHello_5,
        bertie__tls13handshake__ClientPostServerHello_6
      )
    ) = bertie__tls13handshake__ClientPostServerHello_6.

type bertie__tls13handshake__t_ServerPostCertificateVerify.

fun bertie__tls13handshake__t_ServerPostCertificateVerify_to_bitstring(
      bertie__tls13handshake__t_ServerPostCertificateVerify
    )
    : bitstring [typeConverter].
fun bertie__tls13handshake__t_ServerPostCertificateVerify_from_bitstring(
      bitstring
    )
    : bertie__tls13handshake__t_ServerPostCertificateVerify [typeConverter].
const bertie__tls13handshake__t_ServerPostCertificateVerify_default_value: bertie__tls13handshake__t_ServerPostCertificateVerify.
letfun bertie__tls13handshake__t_ServerPostCertificateVerify_default() =
       bertie__tls13handshake__t_ServerPostCertificateVerify_default_value.
letfun bertie__tls13handshake__t_ServerPostCertificateVerify_err() =
       let x = construct_fail() in bertie__tls13handshake__t_ServerPostCertificateVerify_default_value.
fun bertie__tls13handshake__ServerPostCertificateVerify_c(
      bertie__tls13utils__t_Bytes,
      bertie__tls13utils__t_Bytes,
      bertie__tls13crypto__t_Algorithms,
      bertie__tls13utils__t_Bytes,
      bertie__tls13utils__t_Bytes,
      bertie__tls13utils__t_Bytes,
      bertie__tls13formats__t_Transcript
    )
    : bertie__tls13handshake__t_ServerPostCertificateVerify [data].
reduc forall 
  bertie__tls13handshake__ServerPostCertificateVerify_0: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostCertificateVerify_1: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostCertificateVerify_2: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__ServerPostCertificateVerify_3: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostCertificateVerify_4: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostCertificateVerify_5: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostCertificateVerify_6: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__ServerPostCertificateVerify_0(
      bertie__tls13handshake__ServerPostCertificateVerify_c(
        bertie__tls13handshake__ServerPostCertificateVerify_0,
        bertie__tls13handshake__ServerPostCertificateVerify_1,
        bertie__tls13handshake__ServerPostCertificateVerify_2,
        bertie__tls13handshake__ServerPostCertificateVerify_3,
        bertie__tls13handshake__ServerPostCertificateVerify_4,
        bertie__tls13handshake__ServerPostCertificateVerify_5,
        bertie__tls13handshake__ServerPostCertificateVerify_6
      )
    ) = bertie__tls13handshake__ServerPostCertificateVerify_0.
reduc forall 
  bertie__tls13handshake__ServerPostCertificateVerify_0: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostCertificateVerify_1: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostCertificateVerify_2: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__ServerPostCertificateVerify_3: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostCertificateVerify_4: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostCertificateVerify_5: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostCertificateVerify_6: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__ServerPostCertificateVerify_1(
      bertie__tls13handshake__ServerPostCertificateVerify_c(
        bertie__tls13handshake__ServerPostCertificateVerify_0,
        bertie__tls13handshake__ServerPostCertificateVerify_1,
        bertie__tls13handshake__ServerPostCertificateVerify_2,
        bertie__tls13handshake__ServerPostCertificateVerify_3,
        bertie__tls13handshake__ServerPostCertificateVerify_4,
        bertie__tls13handshake__ServerPostCertificateVerify_5,
        bertie__tls13handshake__ServerPostCertificateVerify_6
      )
    ) = bertie__tls13handshake__ServerPostCertificateVerify_1.
reduc forall 
  bertie__tls13handshake__ServerPostCertificateVerify_0: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostCertificateVerify_1: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostCertificateVerify_2: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__ServerPostCertificateVerify_3: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostCertificateVerify_4: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostCertificateVerify_5: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostCertificateVerify_6: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__ServerPostCertificateVerify_2(
      bertie__tls13handshake__ServerPostCertificateVerify_c(
        bertie__tls13handshake__ServerPostCertificateVerify_0,
        bertie__tls13handshake__ServerPostCertificateVerify_1,
        bertie__tls13handshake__ServerPostCertificateVerify_2,
        bertie__tls13handshake__ServerPostCertificateVerify_3,
        bertie__tls13handshake__ServerPostCertificateVerify_4,
        bertie__tls13handshake__ServerPostCertificateVerify_5,
        bertie__tls13handshake__ServerPostCertificateVerify_6
      )
    ) = bertie__tls13handshake__ServerPostCertificateVerify_2.
reduc forall 
  bertie__tls13handshake__ServerPostCertificateVerify_0: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostCertificateVerify_1: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostCertificateVerify_2: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__ServerPostCertificateVerify_3: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostCertificateVerify_4: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostCertificateVerify_5: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostCertificateVerify_6: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__ServerPostCertificateVerify_3(
      bertie__tls13handshake__ServerPostCertificateVerify_c(
        bertie__tls13handshake__ServerPostCertificateVerify_0,
        bertie__tls13handshake__ServerPostCertificateVerify_1,
        bertie__tls13handshake__ServerPostCertificateVerify_2,
        bertie__tls13handshake__ServerPostCertificateVerify_3,
        bertie__tls13handshake__ServerPostCertificateVerify_4,
        bertie__tls13handshake__ServerPostCertificateVerify_5,
        bertie__tls13handshake__ServerPostCertificateVerify_6
      )
    ) = bertie__tls13handshake__ServerPostCertificateVerify_3.
reduc forall 
  bertie__tls13handshake__ServerPostCertificateVerify_0: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostCertificateVerify_1: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostCertificateVerify_2: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__ServerPostCertificateVerify_3: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostCertificateVerify_4: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostCertificateVerify_5: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostCertificateVerify_6: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__ServerPostCertificateVerify_4(
      bertie__tls13handshake__ServerPostCertificateVerify_c(
        bertie__tls13handshake__ServerPostCertificateVerify_0,
        bertie__tls13handshake__ServerPostCertificateVerify_1,
        bertie__tls13handshake__ServerPostCertificateVerify_2,
        bertie__tls13handshake__ServerPostCertificateVerify_3,
        bertie__tls13handshake__ServerPostCertificateVerify_4,
        bertie__tls13handshake__ServerPostCertificateVerify_5,
        bertie__tls13handshake__ServerPostCertificateVerify_6
      )
    ) = bertie__tls13handshake__ServerPostCertificateVerify_4.
reduc forall 
  bertie__tls13handshake__ServerPostCertificateVerify_0: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostCertificateVerify_1: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostCertificateVerify_2: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__ServerPostCertificateVerify_3: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostCertificateVerify_4: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostCertificateVerify_5: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostCertificateVerify_6: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__ServerPostCertificateVerify_5(
      bertie__tls13handshake__ServerPostCertificateVerify_c(
        bertie__tls13handshake__ServerPostCertificateVerify_0,
        bertie__tls13handshake__ServerPostCertificateVerify_1,
        bertie__tls13handshake__ServerPostCertificateVerify_2,
        bertie__tls13handshake__ServerPostCertificateVerify_3,
        bertie__tls13handshake__ServerPostCertificateVerify_4,
        bertie__tls13handshake__ServerPostCertificateVerify_5,
        bertie__tls13handshake__ServerPostCertificateVerify_6
      )
    ) = bertie__tls13handshake__ServerPostCertificateVerify_5.
reduc forall 
  bertie__tls13handshake__ServerPostCertificateVerify_0: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostCertificateVerify_1: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostCertificateVerify_2: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__ServerPostCertificateVerify_3: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostCertificateVerify_4: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostCertificateVerify_5: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostCertificateVerify_6: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__ServerPostCertificateVerify_6(
      bertie__tls13handshake__ServerPostCertificateVerify_c(
        bertie__tls13handshake__ServerPostCertificateVerify_0,
        bertie__tls13handshake__ServerPostCertificateVerify_1,
        bertie__tls13handshake__ServerPostCertificateVerify_2,
        bertie__tls13handshake__ServerPostCertificateVerify_3,
        bertie__tls13handshake__ServerPostCertificateVerify_4,
        bertie__tls13handshake__ServerPostCertificateVerify_5,
        bertie__tls13handshake__ServerPostCertificateVerify_6
      )
    ) = bertie__tls13handshake__ServerPostCertificateVerify_6.

type bertie__tls13handshake__t_ServerPostClientFinished.

fun bertie__tls13handshake__t_ServerPostClientFinished_to_bitstring(
      bertie__tls13handshake__t_ServerPostClientFinished
    )
    : bitstring [typeConverter].
fun bertie__tls13handshake__t_ServerPostClientFinished_from_bitstring(bitstring)
    : bertie__tls13handshake__t_ServerPostClientFinished [typeConverter].
const bertie__tls13handshake__t_ServerPostClientFinished_default_value: bertie__tls13handshake__t_ServerPostClientFinished.
letfun bertie__tls13handshake__t_ServerPostClientFinished_default() =
       bertie__tls13handshake__t_ServerPostClientFinished_default_value.
letfun bertie__tls13handshake__t_ServerPostClientFinished_err() =
       let x = construct_fail() in bertie__tls13handshake__t_ServerPostClientFinished_default_value.
fun bertie__tls13handshake__ServerPostClientFinished_c(
      bertie__tls13utils__t_Bytes,
      bertie__tls13utils__t_Bytes,
      bertie__tls13crypto__t_Algorithms,
      bertie__tls13utils__t_Bytes,
      bertie__tls13formats__t_Transcript
    )
    : bertie__tls13handshake__t_ServerPostClientFinished [data].
reduc forall 
  bertie__tls13handshake__ServerPostClientFinished_0: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostClientFinished_1: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostClientFinished_2: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__ServerPostClientFinished_3: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostClientFinished_4: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__ServerPostClientFinished_0(
      bertie__tls13handshake__ServerPostClientFinished_c(
        bertie__tls13handshake__ServerPostClientFinished_0,
        bertie__tls13handshake__ServerPostClientFinished_1,
        bertie__tls13handshake__ServerPostClientFinished_2,
        bertie__tls13handshake__ServerPostClientFinished_3,
        bertie__tls13handshake__ServerPostClientFinished_4
      )
    ) = bertie__tls13handshake__ServerPostClientFinished_0.
reduc forall 
  bertie__tls13handshake__ServerPostClientFinished_0: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostClientFinished_1: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostClientFinished_2: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__ServerPostClientFinished_3: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostClientFinished_4: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__ServerPostClientFinished_1(
      bertie__tls13handshake__ServerPostClientFinished_c(
        bertie__tls13handshake__ServerPostClientFinished_0,
        bertie__tls13handshake__ServerPostClientFinished_1,
        bertie__tls13handshake__ServerPostClientFinished_2,
        bertie__tls13handshake__ServerPostClientFinished_3,
        bertie__tls13handshake__ServerPostClientFinished_4
      )
    ) = bertie__tls13handshake__ServerPostClientFinished_1.
reduc forall 
  bertie__tls13handshake__ServerPostClientFinished_0: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostClientFinished_1: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostClientFinished_2: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__ServerPostClientFinished_3: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostClientFinished_4: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__ServerPostClientFinished_2(
      bertie__tls13handshake__ServerPostClientFinished_c(
        bertie__tls13handshake__ServerPostClientFinished_0,
        bertie__tls13handshake__ServerPostClientFinished_1,
        bertie__tls13handshake__ServerPostClientFinished_2,
        bertie__tls13handshake__ServerPostClientFinished_3,
        bertie__tls13handshake__ServerPostClientFinished_4
      )
    ) = bertie__tls13handshake__ServerPostClientFinished_2.
reduc forall 
  bertie__tls13handshake__ServerPostClientFinished_0: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostClientFinished_1: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostClientFinished_2: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__ServerPostClientFinished_3: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostClientFinished_4: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__ServerPostClientFinished_3(
      bertie__tls13handshake__ServerPostClientFinished_c(
        bertie__tls13handshake__ServerPostClientFinished_0,
        bertie__tls13handshake__ServerPostClientFinished_1,
        bertie__tls13handshake__ServerPostClientFinished_2,
        bertie__tls13handshake__ServerPostClientFinished_3,
        bertie__tls13handshake__ServerPostClientFinished_4
      )
    ) = bertie__tls13handshake__ServerPostClientFinished_3.
reduc forall 
  bertie__tls13handshake__ServerPostClientFinished_0: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostClientFinished_1: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostClientFinished_2: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__ServerPostClientFinished_3: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostClientFinished_4: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__ServerPostClientFinished_4(
      bertie__tls13handshake__ServerPostClientFinished_c(
        bertie__tls13handshake__ServerPostClientFinished_0,
        bertie__tls13handshake__ServerPostClientFinished_1,
        bertie__tls13handshake__ServerPostClientFinished_2,
        bertie__tls13handshake__ServerPostClientFinished_3,
        bertie__tls13handshake__ServerPostClientFinished_4
      )
    ) = bertie__tls13handshake__ServerPostClientFinished_4.

type bertie__tls13handshake__t_ServerPostClientHello.

fun bertie__tls13handshake__t_ServerPostClientHello_to_bitstring(
      bertie__tls13handshake__t_ServerPostClientHello
    )
    : bitstring [typeConverter].
fun bertie__tls13handshake__t_ServerPostClientHello_from_bitstring(bitstring)
    : bertie__tls13handshake__t_ServerPostClientHello [typeConverter].
const bertie__tls13handshake__t_ServerPostClientHello_default_value: bertie__tls13handshake__t_ServerPostClientHello.
letfun bertie__tls13handshake__t_ServerPostClientHello_default() =
       bertie__tls13handshake__t_ServerPostClientHello_default_value.
letfun bertie__tls13handshake__t_ServerPostClientHello_err() =
       let x = construct_fail() in bertie__tls13handshake__t_ServerPostClientHello_default_value.
fun bertie__tls13handshake__ServerPostClientHello_c(
      bertie__tls13utils__t_Bytes,
      bertie__tls13crypto__t_Algorithms,
      bertie__tls13utils__t_Bytes,
      bertie__tls13utils__t_Bytes,
      bertie__server__t_ServerInfo,
      bertie__tls13formats__t_Transcript
    )
    : bertie__tls13handshake__t_ServerPostClientHello [data].
reduc forall 
  bertie__tls13handshake__ServerPostClientHello_f_client_randomness: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostClientHello_f_ciphersuite: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__ServerPostClientHello_f_session_id: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostClientHello_f_gx: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostClientHello_f_server: bertie__server__t_ServerInfo,
  bertie__tls13handshake__ServerPostClientHello_f_transcript: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__ServerPostClientHello_f_client_randomness(
      bertie__tls13handshake__ServerPostClientHello_c(
        bertie__tls13handshake__ServerPostClientHello_f_client_randomness,
        bertie__tls13handshake__ServerPostClientHello_f_ciphersuite,
        bertie__tls13handshake__ServerPostClientHello_f_session_id,
        bertie__tls13handshake__ServerPostClientHello_f_gx,
        bertie__tls13handshake__ServerPostClientHello_f_server,
        bertie__tls13handshake__ServerPostClientHello_f_transcript
      )
    ) = bertie__tls13handshake__ServerPostClientHello_f_client_randomness.
reduc forall 
  bertie__tls13handshake__ServerPostClientHello_f_client_randomness: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostClientHello_f_ciphersuite: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__ServerPostClientHello_f_session_id: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostClientHello_f_gx: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostClientHello_f_server: bertie__server__t_ServerInfo,
  bertie__tls13handshake__ServerPostClientHello_f_transcript: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__ServerPostClientHello_f_ciphersuite(
      bertie__tls13handshake__ServerPostClientHello_c(
        bertie__tls13handshake__ServerPostClientHello_f_client_randomness,
        bertie__tls13handshake__ServerPostClientHello_f_ciphersuite,
        bertie__tls13handshake__ServerPostClientHello_f_session_id,
        bertie__tls13handshake__ServerPostClientHello_f_gx,
        bertie__tls13handshake__ServerPostClientHello_f_server,
        bertie__tls13handshake__ServerPostClientHello_f_transcript
      )
    ) = bertie__tls13handshake__ServerPostClientHello_f_ciphersuite.
reduc forall 
  bertie__tls13handshake__ServerPostClientHello_f_client_randomness: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostClientHello_f_ciphersuite: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__ServerPostClientHello_f_session_id: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostClientHello_f_gx: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostClientHello_f_server: bertie__server__t_ServerInfo,
  bertie__tls13handshake__ServerPostClientHello_f_transcript: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__ServerPostClientHello_f_session_id(
      bertie__tls13handshake__ServerPostClientHello_c(
        bertie__tls13handshake__ServerPostClientHello_f_client_randomness,
        bertie__tls13handshake__ServerPostClientHello_f_ciphersuite,
        bertie__tls13handshake__ServerPostClientHello_f_session_id,
        bertie__tls13handshake__ServerPostClientHello_f_gx,
        bertie__tls13handshake__ServerPostClientHello_f_server,
        bertie__tls13handshake__ServerPostClientHello_f_transcript
      )
    ) = bertie__tls13handshake__ServerPostClientHello_f_session_id.
reduc forall 
  bertie__tls13handshake__ServerPostClientHello_f_client_randomness: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostClientHello_f_ciphersuite: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__ServerPostClientHello_f_session_id: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostClientHello_f_gx: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostClientHello_f_server: bertie__server__t_ServerInfo,
  bertie__tls13handshake__ServerPostClientHello_f_transcript: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__ServerPostClientHello_f_gx(
      bertie__tls13handshake__ServerPostClientHello_c(
        bertie__tls13handshake__ServerPostClientHello_f_client_randomness,
        bertie__tls13handshake__ServerPostClientHello_f_ciphersuite,
        bertie__tls13handshake__ServerPostClientHello_f_session_id,
        bertie__tls13handshake__ServerPostClientHello_f_gx,
        bertie__tls13handshake__ServerPostClientHello_f_server,
        bertie__tls13handshake__ServerPostClientHello_f_transcript
      )
    ) = bertie__tls13handshake__ServerPostClientHello_f_gx.
reduc forall 
  bertie__tls13handshake__ServerPostClientHello_f_client_randomness: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostClientHello_f_ciphersuite: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__ServerPostClientHello_f_session_id: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostClientHello_f_gx: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostClientHello_f_server: bertie__server__t_ServerInfo,
  bertie__tls13handshake__ServerPostClientHello_f_transcript: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__ServerPostClientHello_f_server(
      bertie__tls13handshake__ServerPostClientHello_c(
        bertie__tls13handshake__ServerPostClientHello_f_client_randomness,
        bertie__tls13handshake__ServerPostClientHello_f_ciphersuite,
        bertie__tls13handshake__ServerPostClientHello_f_session_id,
        bertie__tls13handshake__ServerPostClientHello_f_gx,
        bertie__tls13handshake__ServerPostClientHello_f_server,
        bertie__tls13handshake__ServerPostClientHello_f_transcript
      )
    ) = bertie__tls13handshake__ServerPostClientHello_f_server.
reduc forall 
  bertie__tls13handshake__ServerPostClientHello_f_client_randomness: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostClientHello_f_ciphersuite: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__ServerPostClientHello_f_session_id: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostClientHello_f_gx: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostClientHello_f_server: bertie__server__t_ServerInfo,
  bertie__tls13handshake__ServerPostClientHello_f_transcript: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__ServerPostClientHello_f_transcript(
      bertie__tls13handshake__ServerPostClientHello_c(
        bertie__tls13handshake__ServerPostClientHello_f_client_randomness,
        bertie__tls13handshake__ServerPostClientHello_f_ciphersuite,
        bertie__tls13handshake__ServerPostClientHello_f_session_id,
        bertie__tls13handshake__ServerPostClientHello_f_gx,
        bertie__tls13handshake__ServerPostClientHello_f_server,
        bertie__tls13handshake__ServerPostClientHello_f_transcript
      )
    ) = bertie__tls13handshake__ServerPostClientHello_f_transcript.

type bertie__tls13handshake__t_ServerPostServerFinished.

fun bertie__tls13handshake__t_ServerPostServerFinished_to_bitstring(
      bertie__tls13handshake__t_ServerPostServerFinished
    )
    : bitstring [typeConverter].
fun bertie__tls13handshake__t_ServerPostServerFinished_from_bitstring(bitstring)
    : bertie__tls13handshake__t_ServerPostServerFinished [typeConverter].
const bertie__tls13handshake__t_ServerPostServerFinished_default_value: bertie__tls13handshake__t_ServerPostServerFinished.
letfun bertie__tls13handshake__t_ServerPostServerFinished_default() =
       bertie__tls13handshake__t_ServerPostServerFinished_default_value.
letfun bertie__tls13handshake__t_ServerPostServerFinished_err() =
       let x = construct_fail() in bertie__tls13handshake__t_ServerPostServerFinished_default_value.
fun bertie__tls13handshake__ServerPostServerFinished_c(
      bertie__tls13utils__t_Bytes,
      bertie__tls13utils__t_Bytes,
      bertie__tls13crypto__t_Algorithms,
      bertie__tls13utils__t_Bytes,
      bertie__tls13utils__t_Bytes,
      bertie__tls13formats__t_Transcript
    )
    : bertie__tls13handshake__t_ServerPostServerFinished [data].
reduc forall 
  bertie__tls13handshake__ServerPostServerFinished_0: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostServerFinished_1: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostServerFinished_2: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__ServerPostServerFinished_3: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostServerFinished_4: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostServerFinished_5: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__ServerPostServerFinished_0(
      bertie__tls13handshake__ServerPostServerFinished_c(
        bertie__tls13handshake__ServerPostServerFinished_0,
        bertie__tls13handshake__ServerPostServerFinished_1,
        bertie__tls13handshake__ServerPostServerFinished_2,
        bertie__tls13handshake__ServerPostServerFinished_3,
        bertie__tls13handshake__ServerPostServerFinished_4,
        bertie__tls13handshake__ServerPostServerFinished_5
      )
    ) = bertie__tls13handshake__ServerPostServerFinished_0.
reduc forall 
  bertie__tls13handshake__ServerPostServerFinished_0: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostServerFinished_1: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostServerFinished_2: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__ServerPostServerFinished_3: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostServerFinished_4: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostServerFinished_5: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__ServerPostServerFinished_1(
      bertie__tls13handshake__ServerPostServerFinished_c(
        bertie__tls13handshake__ServerPostServerFinished_0,
        bertie__tls13handshake__ServerPostServerFinished_1,
        bertie__tls13handshake__ServerPostServerFinished_2,
        bertie__tls13handshake__ServerPostServerFinished_3,
        bertie__tls13handshake__ServerPostServerFinished_4,
        bertie__tls13handshake__ServerPostServerFinished_5
      )
    ) = bertie__tls13handshake__ServerPostServerFinished_1.
reduc forall 
  bertie__tls13handshake__ServerPostServerFinished_0: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostServerFinished_1: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostServerFinished_2: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__ServerPostServerFinished_3: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostServerFinished_4: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostServerFinished_5: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__ServerPostServerFinished_2(
      bertie__tls13handshake__ServerPostServerFinished_c(
        bertie__tls13handshake__ServerPostServerFinished_0,
        bertie__tls13handshake__ServerPostServerFinished_1,
        bertie__tls13handshake__ServerPostServerFinished_2,
        bertie__tls13handshake__ServerPostServerFinished_3,
        bertie__tls13handshake__ServerPostServerFinished_4,
        bertie__tls13handshake__ServerPostServerFinished_5
      )
    ) = bertie__tls13handshake__ServerPostServerFinished_2.
reduc forall 
  bertie__tls13handshake__ServerPostServerFinished_0: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostServerFinished_1: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostServerFinished_2: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__ServerPostServerFinished_3: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostServerFinished_4: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostServerFinished_5: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__ServerPostServerFinished_3(
      bertie__tls13handshake__ServerPostServerFinished_c(
        bertie__tls13handshake__ServerPostServerFinished_0,
        bertie__tls13handshake__ServerPostServerFinished_1,
        bertie__tls13handshake__ServerPostServerFinished_2,
        bertie__tls13handshake__ServerPostServerFinished_3,
        bertie__tls13handshake__ServerPostServerFinished_4,
        bertie__tls13handshake__ServerPostServerFinished_5
      )
    ) = bertie__tls13handshake__ServerPostServerFinished_3.
reduc forall 
  bertie__tls13handshake__ServerPostServerFinished_0: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostServerFinished_1: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostServerFinished_2: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__ServerPostServerFinished_3: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostServerFinished_4: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostServerFinished_5: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__ServerPostServerFinished_4(
      bertie__tls13handshake__ServerPostServerFinished_c(
        bertie__tls13handshake__ServerPostServerFinished_0,
        bertie__tls13handshake__ServerPostServerFinished_1,
        bertie__tls13handshake__ServerPostServerFinished_2,
        bertie__tls13handshake__ServerPostServerFinished_3,
        bertie__tls13handshake__ServerPostServerFinished_4,
        bertie__tls13handshake__ServerPostServerFinished_5
      )
    ) = bertie__tls13handshake__ServerPostServerFinished_4.
reduc forall 
  bertie__tls13handshake__ServerPostServerFinished_0: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostServerFinished_1: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostServerFinished_2: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__ServerPostServerFinished_3: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostServerFinished_4: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostServerFinished_5: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__ServerPostServerFinished_5(
      bertie__tls13handshake__ServerPostServerFinished_c(
        bertie__tls13handshake__ServerPostServerFinished_0,
        bertie__tls13handshake__ServerPostServerFinished_1,
        bertie__tls13handshake__ServerPostServerFinished_2,
        bertie__tls13handshake__ServerPostServerFinished_3,
        bertie__tls13handshake__ServerPostServerFinished_4,
        bertie__tls13handshake__ServerPostServerFinished_5
      )
    ) = bertie__tls13handshake__ServerPostServerFinished_5.

type bertie__tls13handshake__t_ServerPostServerHello.

fun bertie__tls13handshake__t_ServerPostServerHello_to_bitstring(
      bertie__tls13handshake__t_ServerPostServerHello
    )
    : bitstring [typeConverter].
fun bertie__tls13handshake__t_ServerPostServerHello_from_bitstring(bitstring)
    : bertie__tls13handshake__t_ServerPostServerHello [typeConverter].
const bertie__tls13handshake__t_ServerPostServerHello_default_value: bertie__tls13handshake__t_ServerPostServerHello.
letfun bertie__tls13handshake__t_ServerPostServerHello_default() =
       bertie__tls13handshake__t_ServerPostServerHello_default_value.
letfun bertie__tls13handshake__t_ServerPostServerHello_err() =
       let x = construct_fail() in bertie__tls13handshake__t_ServerPostServerHello_default_value.
fun bertie__tls13handshake__ServerPostServerHello_c(
      bertie__tls13utils__t_Bytes,
      bertie__tls13utils__t_Bytes,
      bertie__tls13crypto__t_Algorithms,
      bertie__server__t_ServerInfo,
      bertie__tls13utils__t_Bytes,
      bertie__tls13utils__t_Bytes,
      bertie__tls13utils__t_Bytes,
      bertie__tls13formats__t_Transcript
    )
    : bertie__tls13handshake__t_ServerPostServerHello [data].
reduc forall 
  bertie__tls13handshake__ServerPostServerHello_f_client_random: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostServerHello_f_server_random: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostServerHello_f_ciphersuite: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__ServerPostServerHello_f_server: bertie__server__t_ServerInfo,
  bertie__tls13handshake__ServerPostServerHello_f_master_secret: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostServerHello_f_cfk: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostServerHello_f_sfk: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostServerHello_f_transcript: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__ServerPostServerHello_f_client_random(
      bertie__tls13handshake__ServerPostServerHello_c(
        bertie__tls13handshake__ServerPostServerHello_f_client_random,
        bertie__tls13handshake__ServerPostServerHello_f_server_random,
        bertie__tls13handshake__ServerPostServerHello_f_ciphersuite,
        bertie__tls13handshake__ServerPostServerHello_f_server,
        bertie__tls13handshake__ServerPostServerHello_f_master_secret,
        bertie__tls13handshake__ServerPostServerHello_f_cfk,
        bertie__tls13handshake__ServerPostServerHello_f_sfk,
        bertie__tls13handshake__ServerPostServerHello_f_transcript
      )
    ) = bertie__tls13handshake__ServerPostServerHello_f_client_random.
reduc forall 
  bertie__tls13handshake__ServerPostServerHello_f_client_random: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostServerHello_f_server_random: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostServerHello_f_ciphersuite: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__ServerPostServerHello_f_server: bertie__server__t_ServerInfo,
  bertie__tls13handshake__ServerPostServerHello_f_master_secret: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostServerHello_f_cfk: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostServerHello_f_sfk: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostServerHello_f_transcript: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__ServerPostServerHello_f_server_random(
      bertie__tls13handshake__ServerPostServerHello_c(
        bertie__tls13handshake__ServerPostServerHello_f_client_random,
        bertie__tls13handshake__ServerPostServerHello_f_server_random,
        bertie__tls13handshake__ServerPostServerHello_f_ciphersuite,
        bertie__tls13handshake__ServerPostServerHello_f_server,
        bertie__tls13handshake__ServerPostServerHello_f_master_secret,
        bertie__tls13handshake__ServerPostServerHello_f_cfk,
        bertie__tls13handshake__ServerPostServerHello_f_sfk,
        bertie__tls13handshake__ServerPostServerHello_f_transcript
      )
    ) = bertie__tls13handshake__ServerPostServerHello_f_server_random.
reduc forall 
  bertie__tls13handshake__ServerPostServerHello_f_client_random: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostServerHello_f_server_random: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostServerHello_f_ciphersuite: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__ServerPostServerHello_f_server: bertie__server__t_ServerInfo,
  bertie__tls13handshake__ServerPostServerHello_f_master_secret: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostServerHello_f_cfk: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostServerHello_f_sfk: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostServerHello_f_transcript: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__ServerPostServerHello_f_ciphersuite(
      bertie__tls13handshake__ServerPostServerHello_c(
        bertie__tls13handshake__ServerPostServerHello_f_client_random,
        bertie__tls13handshake__ServerPostServerHello_f_server_random,
        bertie__tls13handshake__ServerPostServerHello_f_ciphersuite,
        bertie__tls13handshake__ServerPostServerHello_f_server,
        bertie__tls13handshake__ServerPostServerHello_f_master_secret,
        bertie__tls13handshake__ServerPostServerHello_f_cfk,
        bertie__tls13handshake__ServerPostServerHello_f_sfk,
        bertie__tls13handshake__ServerPostServerHello_f_transcript
      )
    ) = bertie__tls13handshake__ServerPostServerHello_f_ciphersuite.
reduc forall 
  bertie__tls13handshake__ServerPostServerHello_f_client_random: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostServerHello_f_server_random: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostServerHello_f_ciphersuite: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__ServerPostServerHello_f_server: bertie__server__t_ServerInfo,
  bertie__tls13handshake__ServerPostServerHello_f_master_secret: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostServerHello_f_cfk: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostServerHello_f_sfk: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostServerHello_f_transcript: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__ServerPostServerHello_f_server(
      bertie__tls13handshake__ServerPostServerHello_c(
        bertie__tls13handshake__ServerPostServerHello_f_client_random,
        bertie__tls13handshake__ServerPostServerHello_f_server_random,
        bertie__tls13handshake__ServerPostServerHello_f_ciphersuite,
        bertie__tls13handshake__ServerPostServerHello_f_server,
        bertie__tls13handshake__ServerPostServerHello_f_master_secret,
        bertie__tls13handshake__ServerPostServerHello_f_cfk,
        bertie__tls13handshake__ServerPostServerHello_f_sfk,
        bertie__tls13handshake__ServerPostServerHello_f_transcript
      )
    ) = bertie__tls13handshake__ServerPostServerHello_f_server.
reduc forall 
  bertie__tls13handshake__ServerPostServerHello_f_client_random: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostServerHello_f_server_random: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostServerHello_f_ciphersuite: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__ServerPostServerHello_f_server: bertie__server__t_ServerInfo,
  bertie__tls13handshake__ServerPostServerHello_f_master_secret: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostServerHello_f_cfk: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostServerHello_f_sfk: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostServerHello_f_transcript: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__ServerPostServerHello_f_master_secret(
      bertie__tls13handshake__ServerPostServerHello_c(
        bertie__tls13handshake__ServerPostServerHello_f_client_random,
        bertie__tls13handshake__ServerPostServerHello_f_server_random,
        bertie__tls13handshake__ServerPostServerHello_f_ciphersuite,
        bertie__tls13handshake__ServerPostServerHello_f_server,
        bertie__tls13handshake__ServerPostServerHello_f_master_secret,
        bertie__tls13handshake__ServerPostServerHello_f_cfk,
        bertie__tls13handshake__ServerPostServerHello_f_sfk,
        bertie__tls13handshake__ServerPostServerHello_f_transcript
      )
    ) = bertie__tls13handshake__ServerPostServerHello_f_master_secret.
reduc forall 
  bertie__tls13handshake__ServerPostServerHello_f_client_random: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostServerHello_f_server_random: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostServerHello_f_ciphersuite: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__ServerPostServerHello_f_server: bertie__server__t_ServerInfo,
  bertie__tls13handshake__ServerPostServerHello_f_master_secret: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostServerHello_f_cfk: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostServerHello_f_sfk: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostServerHello_f_transcript: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__ServerPostServerHello_f_cfk(
      bertie__tls13handshake__ServerPostServerHello_c(
        bertie__tls13handshake__ServerPostServerHello_f_client_random,
        bertie__tls13handshake__ServerPostServerHello_f_server_random,
        bertie__tls13handshake__ServerPostServerHello_f_ciphersuite,
        bertie__tls13handshake__ServerPostServerHello_f_server,
        bertie__tls13handshake__ServerPostServerHello_f_master_secret,
        bertie__tls13handshake__ServerPostServerHello_f_cfk,
        bertie__tls13handshake__ServerPostServerHello_f_sfk,
        bertie__tls13handshake__ServerPostServerHello_f_transcript
      )
    ) = bertie__tls13handshake__ServerPostServerHello_f_cfk.
reduc forall 
  bertie__tls13handshake__ServerPostServerHello_f_client_random: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostServerHello_f_server_random: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostServerHello_f_ciphersuite: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__ServerPostServerHello_f_server: bertie__server__t_ServerInfo,
  bertie__tls13handshake__ServerPostServerHello_f_master_secret: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostServerHello_f_cfk: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostServerHello_f_sfk: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostServerHello_f_transcript: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__ServerPostServerHello_f_sfk(
      bertie__tls13handshake__ServerPostServerHello_c(
        bertie__tls13handshake__ServerPostServerHello_f_client_random,
        bertie__tls13handshake__ServerPostServerHello_f_server_random,
        bertie__tls13handshake__ServerPostServerHello_f_ciphersuite,
        bertie__tls13handshake__ServerPostServerHello_f_server,
        bertie__tls13handshake__ServerPostServerHello_f_master_secret,
        bertie__tls13handshake__ServerPostServerHello_f_cfk,
        bertie__tls13handshake__ServerPostServerHello_f_sfk,
        bertie__tls13handshake__ServerPostServerHello_f_transcript
      )
    ) = bertie__tls13handshake__ServerPostServerHello_f_sfk.
reduc forall 
  bertie__tls13handshake__ServerPostServerHello_f_client_random: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostServerHello_f_server_random: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostServerHello_f_ciphersuite: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__ServerPostServerHello_f_server: bertie__server__t_ServerInfo,
  bertie__tls13handshake__ServerPostServerHello_f_master_secret: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostServerHello_f_cfk: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostServerHello_f_sfk: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__ServerPostServerHello_f_transcript: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__ServerPostServerHello_f_transcript(
      bertie__tls13handshake__ServerPostServerHello_c(
        bertie__tls13handshake__ServerPostServerHello_f_client_random,
        bertie__tls13handshake__ServerPostServerHello_f_server_random,
        bertie__tls13handshake__ServerPostServerHello_f_ciphersuite,
        bertie__tls13handshake__ServerPostServerHello_f_server,
        bertie__tls13handshake__ServerPostServerHello_f_master_secret,
        bertie__tls13handshake__ServerPostServerHello_f_cfk,
        bertie__tls13handshake__ServerPostServerHello_f_sfk,
        bertie__tls13handshake__ServerPostServerHello_f_transcript
      )
    ) = bertie__tls13handshake__ServerPostServerHello_f_transcript.

type bertie__tls13record__t_ClientCipherState0.

fun bertie__tls13record__t_ClientCipherState0_to_bitstring(
      bertie__tls13record__t_ClientCipherState0
    )
    : bitstring [typeConverter].
fun bertie__tls13record__t_ClientCipherState0_from_bitstring(bitstring)
    : bertie__tls13record__t_ClientCipherState0 [typeConverter].
const bertie__tls13record__t_ClientCipherState0_default_value: bertie__tls13record__t_ClientCipherState0.
letfun bertie__tls13record__t_ClientCipherState0_default() =
       bertie__tls13record__t_ClientCipherState0_default_value.
letfun bertie__tls13record__t_ClientCipherState0_err() =
       let x = construct_fail() in bertie__tls13record__t_ClientCipherState0_default_value.
fun bertie__tls13record__ClientCipherState0_c(
      bertie__tls13crypto__t_AeadAlgorithm,
      bertie__tls13crypto__t_AeadKeyIV,
      nat,
      bertie__tls13utils__t_Bytes
    )
    : bertie__tls13record__t_ClientCipherState0 [data].
reduc forall 
  bertie__tls13record__ClientCipherState0_0: bertie__tls13crypto__t_AeadAlgorithm,
  bertie__tls13record__ClientCipherState0_1: bertie__tls13crypto__t_AeadKeyIV,
  bertie__tls13record__ClientCipherState0_2: nat,
  bertie__tls13record__ClientCipherState0_3: bertie__tls13utils__t_Bytes
;
    accessor_bertie__tls13record__ClientCipherState0_0(
      bertie__tls13record__ClientCipherState0_c(
        bertie__tls13record__ClientCipherState0_0,
        bertie__tls13record__ClientCipherState0_1,
        bertie__tls13record__ClientCipherState0_2,
        bertie__tls13record__ClientCipherState0_3
      )
    ) = bertie__tls13record__ClientCipherState0_0.
reduc forall 
  bertie__tls13record__ClientCipherState0_0: bertie__tls13crypto__t_AeadAlgorithm,
  bertie__tls13record__ClientCipherState0_1: bertie__tls13crypto__t_AeadKeyIV,
  bertie__tls13record__ClientCipherState0_2: nat,
  bertie__tls13record__ClientCipherState0_3: bertie__tls13utils__t_Bytes
;
    accessor_bertie__tls13record__ClientCipherState0_1(
      bertie__tls13record__ClientCipherState0_c(
        bertie__tls13record__ClientCipherState0_0,
        bertie__tls13record__ClientCipherState0_1,
        bertie__tls13record__ClientCipherState0_2,
        bertie__tls13record__ClientCipherState0_3
      )
    ) = bertie__tls13record__ClientCipherState0_1.
reduc forall 
  bertie__tls13record__ClientCipherState0_0: bertie__tls13crypto__t_AeadAlgorithm,
  bertie__tls13record__ClientCipherState0_1: bertie__tls13crypto__t_AeadKeyIV,
  bertie__tls13record__ClientCipherState0_2: nat,
  bertie__tls13record__ClientCipherState0_3: bertie__tls13utils__t_Bytes
;
    accessor_bertie__tls13record__ClientCipherState0_2(
      bertie__tls13record__ClientCipherState0_c(
        bertie__tls13record__ClientCipherState0_0,
        bertie__tls13record__ClientCipherState0_1,
        bertie__tls13record__ClientCipherState0_2,
        bertie__tls13record__ClientCipherState0_3
      )
    ) = bertie__tls13record__ClientCipherState0_2.
reduc forall 
  bertie__tls13record__ClientCipherState0_0: bertie__tls13crypto__t_AeadAlgorithm,
  bertie__tls13record__ClientCipherState0_1: bertie__tls13crypto__t_AeadKeyIV,
  bertie__tls13record__ClientCipherState0_2: nat,
  bertie__tls13record__ClientCipherState0_3: bertie__tls13utils__t_Bytes
;
    accessor_bertie__tls13record__ClientCipherState0_3(
      bertie__tls13record__ClientCipherState0_c(
        bertie__tls13record__ClientCipherState0_0,
        bertie__tls13record__ClientCipherState0_1,
        bertie__tls13record__ClientCipherState0_2,
        bertie__tls13record__ClientCipherState0_3
      )
    ) = bertie__tls13record__ClientCipherState0_3.

type bertie__tls13record__t_DuplexCipherState1.

fun bertie__tls13record__t_DuplexCipherState1_to_bitstring(
      bertie__tls13record__t_DuplexCipherState1
    )
    : bitstring [typeConverter].
fun bertie__tls13record__t_DuplexCipherState1_from_bitstring(bitstring)
    : bertie__tls13record__t_DuplexCipherState1 [typeConverter].
const bertie__tls13record__t_DuplexCipherState1_default_value: bertie__tls13record__t_DuplexCipherState1.
letfun bertie__tls13record__t_DuplexCipherState1_default() =
       bertie__tls13record__t_DuplexCipherState1_default_value.
letfun bertie__tls13record__t_DuplexCipherState1_err() =
       let x = construct_fail() in bertie__tls13record__t_DuplexCipherState1_default_value.
fun bertie__tls13record__DuplexCipherState1_c(
      bertie__tls13crypto__t_AeadAlgorithm,
      bertie__tls13crypto__t_AeadKeyIV,
      nat,
      bertie__tls13crypto__t_AeadKeyIV,
      nat,
      bertie__tls13utils__t_Bytes
    )
    : bertie__tls13record__t_DuplexCipherState1 [data].
reduc forall 
  bertie__tls13record__DuplexCipherState1_0: bertie__tls13crypto__t_AeadAlgorithm,
  bertie__tls13record__DuplexCipherState1_1: bertie__tls13crypto__t_AeadKeyIV,
  bertie__tls13record__DuplexCipherState1_2: nat,
  bertie__tls13record__DuplexCipherState1_3: bertie__tls13crypto__t_AeadKeyIV,
  bertie__tls13record__DuplexCipherState1_4: nat,
  bertie__tls13record__DuplexCipherState1_5: bertie__tls13utils__t_Bytes
;
    accessor_bertie__tls13record__DuplexCipherState1_0(
      bertie__tls13record__DuplexCipherState1_c(
        bertie__tls13record__DuplexCipherState1_0,
        bertie__tls13record__DuplexCipherState1_1,
        bertie__tls13record__DuplexCipherState1_2,
        bertie__tls13record__DuplexCipherState1_3,
        bertie__tls13record__DuplexCipherState1_4,
        bertie__tls13record__DuplexCipherState1_5
      )
    ) = bertie__tls13record__DuplexCipherState1_0.
reduc forall 
  bertie__tls13record__DuplexCipherState1_0: bertie__tls13crypto__t_AeadAlgorithm,
  bertie__tls13record__DuplexCipherState1_1: bertie__tls13crypto__t_AeadKeyIV,
  bertie__tls13record__DuplexCipherState1_2: nat,
  bertie__tls13record__DuplexCipherState1_3: bertie__tls13crypto__t_AeadKeyIV,
  bertie__tls13record__DuplexCipherState1_4: nat,
  bertie__tls13record__DuplexCipherState1_5: bertie__tls13utils__t_Bytes
;
    accessor_bertie__tls13record__DuplexCipherState1_1(
      bertie__tls13record__DuplexCipherState1_c(
        bertie__tls13record__DuplexCipherState1_0,
        bertie__tls13record__DuplexCipherState1_1,
        bertie__tls13record__DuplexCipherState1_2,
        bertie__tls13record__DuplexCipherState1_3,
        bertie__tls13record__DuplexCipherState1_4,
        bertie__tls13record__DuplexCipherState1_5
      )
    ) = bertie__tls13record__DuplexCipherState1_1.
reduc forall 
  bertie__tls13record__DuplexCipherState1_0: bertie__tls13crypto__t_AeadAlgorithm,
  bertie__tls13record__DuplexCipherState1_1: bertie__tls13crypto__t_AeadKeyIV,
  bertie__tls13record__DuplexCipherState1_2: nat,
  bertie__tls13record__DuplexCipherState1_3: bertie__tls13crypto__t_AeadKeyIV,
  bertie__tls13record__DuplexCipherState1_4: nat,
  bertie__tls13record__DuplexCipherState1_5: bertie__tls13utils__t_Bytes
;
    accessor_bertie__tls13record__DuplexCipherState1_2(
      bertie__tls13record__DuplexCipherState1_c(
        bertie__tls13record__DuplexCipherState1_0,
        bertie__tls13record__DuplexCipherState1_1,
        bertie__tls13record__DuplexCipherState1_2,
        bertie__tls13record__DuplexCipherState1_3,
        bertie__tls13record__DuplexCipherState1_4,
        bertie__tls13record__DuplexCipherState1_5
      )
    ) = bertie__tls13record__DuplexCipherState1_2.
reduc forall 
  bertie__tls13record__DuplexCipherState1_0: bertie__tls13crypto__t_AeadAlgorithm,
  bertie__tls13record__DuplexCipherState1_1: bertie__tls13crypto__t_AeadKeyIV,
  bertie__tls13record__DuplexCipherState1_2: nat,
  bertie__tls13record__DuplexCipherState1_3: bertie__tls13crypto__t_AeadKeyIV,
  bertie__tls13record__DuplexCipherState1_4: nat,
  bertie__tls13record__DuplexCipherState1_5: bertie__tls13utils__t_Bytes
;
    accessor_bertie__tls13record__DuplexCipherState1_3(
      bertie__tls13record__DuplexCipherState1_c(
        bertie__tls13record__DuplexCipherState1_0,
        bertie__tls13record__DuplexCipherState1_1,
        bertie__tls13record__DuplexCipherState1_2,
        bertie__tls13record__DuplexCipherState1_3,
        bertie__tls13record__DuplexCipherState1_4,
        bertie__tls13record__DuplexCipherState1_5
      )
    ) = bertie__tls13record__DuplexCipherState1_3.
reduc forall 
  bertie__tls13record__DuplexCipherState1_0: bertie__tls13crypto__t_AeadAlgorithm,
  bertie__tls13record__DuplexCipherState1_1: bertie__tls13crypto__t_AeadKeyIV,
  bertie__tls13record__DuplexCipherState1_2: nat,
  bertie__tls13record__DuplexCipherState1_3: bertie__tls13crypto__t_AeadKeyIV,
  bertie__tls13record__DuplexCipherState1_4: nat,
  bertie__tls13record__DuplexCipherState1_5: bertie__tls13utils__t_Bytes
;
    accessor_bertie__tls13record__DuplexCipherState1_4(
      bertie__tls13record__DuplexCipherState1_c(
        bertie__tls13record__DuplexCipherState1_0,
        bertie__tls13record__DuplexCipherState1_1,
        bertie__tls13record__DuplexCipherState1_2,
        bertie__tls13record__DuplexCipherState1_3,
        bertie__tls13record__DuplexCipherState1_4,
        bertie__tls13record__DuplexCipherState1_5
      )
    ) = bertie__tls13record__DuplexCipherState1_4.
reduc forall 
  bertie__tls13record__DuplexCipherState1_0: bertie__tls13crypto__t_AeadAlgorithm,
  bertie__tls13record__DuplexCipherState1_1: bertie__tls13crypto__t_AeadKeyIV,
  bertie__tls13record__DuplexCipherState1_2: nat,
  bertie__tls13record__DuplexCipherState1_3: bertie__tls13crypto__t_AeadKeyIV,
  bertie__tls13record__DuplexCipherState1_4: nat,
  bertie__tls13record__DuplexCipherState1_5: bertie__tls13utils__t_Bytes
;
    accessor_bertie__tls13record__DuplexCipherState1_5(
      bertie__tls13record__DuplexCipherState1_c(
        bertie__tls13record__DuplexCipherState1_0,
        bertie__tls13record__DuplexCipherState1_1,
        bertie__tls13record__DuplexCipherState1_2,
        bertie__tls13record__DuplexCipherState1_3,
        bertie__tls13record__DuplexCipherState1_4,
        bertie__tls13record__DuplexCipherState1_5
      )
    ) = bertie__tls13record__DuplexCipherState1_5.

type bertie__tls13record__t_DuplexCipherStateH.

fun bertie__tls13record__t_DuplexCipherStateH_to_bitstring(
      bertie__tls13record__t_DuplexCipherStateH
    )
    : bitstring [typeConverter].
fun bertie__tls13record__t_DuplexCipherStateH_from_bitstring(bitstring)
    : bertie__tls13record__t_DuplexCipherStateH [typeConverter].
const bertie__tls13record__t_DuplexCipherStateH_default_value: bertie__tls13record__t_DuplexCipherStateH.
letfun bertie__tls13record__t_DuplexCipherStateH_default() =
       bertie__tls13record__t_DuplexCipherStateH_default_value.
letfun bertie__tls13record__t_DuplexCipherStateH_err() =
       let x = construct_fail() in bertie__tls13record__t_DuplexCipherStateH_default_value.
fun bertie__tls13record__DuplexCipherStateH_c(
      bertie__tls13crypto__t_AeadKeyIV,
      nat,
      bertie__tls13crypto__t_AeadKeyIV,
      nat
    )
    : bertie__tls13record__t_DuplexCipherStateH [data].
reduc forall 
  bertie__tls13record__DuplexCipherStateH_f_sender_key_iv: bertie__tls13crypto__t_AeadKeyIV,
  bertie__tls13record__DuplexCipherStateH_f_sender_counter: nat,
  bertie__tls13record__DuplexCipherStateH_f_receiver_key_iv: bertie__tls13crypto__t_AeadKeyIV,
  bertie__tls13record__DuplexCipherStateH_f_receiver_counter: nat
;
    accessor_bertie__tls13record__DuplexCipherStateH_f_sender_key_iv(
      bertie__tls13record__DuplexCipherStateH_c(
        bertie__tls13record__DuplexCipherStateH_f_sender_key_iv,
        bertie__tls13record__DuplexCipherStateH_f_sender_counter,
        bertie__tls13record__DuplexCipherStateH_f_receiver_key_iv,
        bertie__tls13record__DuplexCipherStateH_f_receiver_counter
      )
    ) = bertie__tls13record__DuplexCipherStateH_f_sender_key_iv.
reduc forall 
  bertie__tls13record__DuplexCipherStateH_f_sender_key_iv: bertie__tls13crypto__t_AeadKeyIV,
  bertie__tls13record__DuplexCipherStateH_f_sender_counter: nat,
  bertie__tls13record__DuplexCipherStateH_f_receiver_key_iv: bertie__tls13crypto__t_AeadKeyIV,
  bertie__tls13record__DuplexCipherStateH_f_receiver_counter: nat
;
    accessor_bertie__tls13record__DuplexCipherStateH_f_sender_counter(
      bertie__tls13record__DuplexCipherStateH_c(
        bertie__tls13record__DuplexCipherStateH_f_sender_key_iv,
        bertie__tls13record__DuplexCipherStateH_f_sender_counter,
        bertie__tls13record__DuplexCipherStateH_f_receiver_key_iv,
        bertie__tls13record__DuplexCipherStateH_f_receiver_counter
      )
    ) = bertie__tls13record__DuplexCipherStateH_f_sender_counter.
reduc forall 
  bertie__tls13record__DuplexCipherStateH_f_sender_key_iv: bertie__tls13crypto__t_AeadKeyIV,
  bertie__tls13record__DuplexCipherStateH_f_sender_counter: nat,
  bertie__tls13record__DuplexCipherStateH_f_receiver_key_iv: bertie__tls13crypto__t_AeadKeyIV,
  bertie__tls13record__DuplexCipherStateH_f_receiver_counter: nat
;
    accessor_bertie__tls13record__DuplexCipherStateH_f_receiver_key_iv(
      bertie__tls13record__DuplexCipherStateH_c(
        bertie__tls13record__DuplexCipherStateH_f_sender_key_iv,
        bertie__tls13record__DuplexCipherStateH_f_sender_counter,
        bertie__tls13record__DuplexCipherStateH_f_receiver_key_iv,
        bertie__tls13record__DuplexCipherStateH_f_receiver_counter
      )
    ) = bertie__tls13record__DuplexCipherStateH_f_receiver_key_iv.
reduc forall 
  bertie__tls13record__DuplexCipherStateH_f_sender_key_iv: bertie__tls13crypto__t_AeadKeyIV,
  bertie__tls13record__DuplexCipherStateH_f_sender_counter: nat,
  bertie__tls13record__DuplexCipherStateH_f_receiver_key_iv: bertie__tls13crypto__t_AeadKeyIV,
  bertie__tls13record__DuplexCipherStateH_f_receiver_counter: nat
;
    accessor_bertie__tls13record__DuplexCipherStateH_f_receiver_counter(
      bertie__tls13record__DuplexCipherStateH_c(
        bertie__tls13record__DuplexCipherStateH_f_sender_key_iv,
        bertie__tls13record__DuplexCipherStateH_f_sender_counter,
        bertie__tls13record__DuplexCipherStateH_f_receiver_key_iv,
        bertie__tls13record__DuplexCipherStateH_f_receiver_counter
      )
    ) = bertie__tls13record__DuplexCipherStateH_f_receiver_counter.

type bertie__tls13record__t_ServerCipherState0.

fun bertie__tls13record__t_ServerCipherState0_to_bitstring(
      bertie__tls13record__t_ServerCipherState0
    )
    : bitstring [typeConverter].
fun bertie__tls13record__t_ServerCipherState0_from_bitstring(bitstring)
    : bertie__tls13record__t_ServerCipherState0 [typeConverter].
const bertie__tls13record__t_ServerCipherState0_default_value: bertie__tls13record__t_ServerCipherState0.
letfun bertie__tls13record__t_ServerCipherState0_default() =
       bertie__tls13record__t_ServerCipherState0_default_value.
letfun bertie__tls13record__t_ServerCipherState0_err() =
       let x = construct_fail() in bertie__tls13record__t_ServerCipherState0_default_value.
fun bertie__tls13record__ServerCipherState0_c(
      bertie__tls13crypto__t_AeadKeyIV, nat, bertie__tls13utils__t_Bytes
    )
    : bertie__tls13record__t_ServerCipherState0 [data].
reduc forall 
  bertie__tls13record__ServerCipherState0_f_key_iv: bertie__tls13crypto__t_AeadKeyIV,
  bertie__tls13record__ServerCipherState0_f_counter: nat,
  bertie__tls13record__ServerCipherState0_f_early_exporter_ms: bertie__tls13utils__t_Bytes
;
    accessor_bertie__tls13record__ServerCipherState0_f_key_iv(
      bertie__tls13record__ServerCipherState0_c(
        bertie__tls13record__ServerCipherState0_f_key_iv,
        bertie__tls13record__ServerCipherState0_f_counter,
        bertie__tls13record__ServerCipherState0_f_early_exporter_ms
      )
    ) = bertie__tls13record__ServerCipherState0_f_key_iv.
reduc forall 
  bertie__tls13record__ServerCipherState0_f_key_iv: bertie__tls13crypto__t_AeadKeyIV,
  bertie__tls13record__ServerCipherState0_f_counter: nat,
  bertie__tls13record__ServerCipherState0_f_early_exporter_ms: bertie__tls13utils__t_Bytes
;
    accessor_bertie__tls13record__ServerCipherState0_f_counter(
      bertie__tls13record__ServerCipherState0_c(
        bertie__tls13record__ServerCipherState0_f_key_iv,
        bertie__tls13record__ServerCipherState0_f_counter,
        bertie__tls13record__ServerCipherState0_f_early_exporter_ms
      )
    ) = bertie__tls13record__ServerCipherState0_f_counter.
reduc forall 
  bertie__tls13record__ServerCipherState0_f_key_iv: bertie__tls13crypto__t_AeadKeyIV,
  bertie__tls13record__ServerCipherState0_f_counter: nat,
  bertie__tls13record__ServerCipherState0_f_early_exporter_ms: bertie__tls13utils__t_Bytes
;
    accessor_bertie__tls13record__ServerCipherState0_f_early_exporter_ms(
      bertie__tls13record__ServerCipherState0_c(
        bertie__tls13record__ServerCipherState0_f_key_iv,
        bertie__tls13record__ServerCipherState0_f_counter,
        bertie__tls13record__ServerCipherState0_f_early_exporter_ms
      )
    ) = bertie__tls13record__ServerCipherState0_f_early_exporter_ms.

(*****************************************)
(* Functions *)
(*****************************************)

event Reached_bertie__tls13crypto__impl__AeadAlgorithm__iv_len.
letfun bertie__tls13crypto__impl__AeadAlgorithm__iv_len(
         self : bertie__tls13crypto__t_AeadAlgorithm
       ) =
       event Reached_bertie__tls13crypto__impl__AeadAlgorithm__iv_len;
       let bertie__tls13crypto__AeadAlgorithm_AeadAlgorithm_Chacha20Poly1305_c() = self in 12
       else let bertie__tls13crypto__AeadAlgorithm_AeadAlgorithm_Aes128Gcm_c() = self in 12
       else let bertie__tls13crypto__AeadAlgorithm_AeadAlgorithm_Aes256Gcm_c() = self in 12.

event Reached_bertie__tls13crypto__impl__AeadAlgorithm__key_len.
letfun bertie__tls13crypto__impl__AeadAlgorithm__key_len(
         self : bertie__tls13crypto__t_AeadAlgorithm
       ) =
       event Reached_bertie__tls13crypto__impl__AeadAlgorithm__key_len;
       let bertie__tls13crypto__AeadAlgorithm_AeadAlgorithm_Chacha20Poly1305_c() = self in 32
       else let bertie__tls13crypto__AeadAlgorithm_AeadAlgorithm_Aes128Gcm_c() = self in 16
       else let bertie__tls13crypto__AeadAlgorithm_AeadAlgorithm_Aes256Gcm_c() = self in 32.

const bertie__tls13formats__v_LABEL_C_AP_TRAFFIC: bitstring.

const bertie__tls13formats__v_LABEL_C_E_TRAFFIC: bitstring.

const bertie__tls13formats__v_LABEL_C_HS_TRAFFIC: bitstring.

const bertie__tls13formats__v_LABEL_DERIVED: bitstring.

const bertie__tls13formats__v_LABEL_EXP_MASTER: bitstring.

const bertie__tls13formats__v_LABEL_E_EXP_MASTER: bitstring.

const bertie__tls13formats__v_LABEL_FINISHED: bitstring.

const bertie__tls13formats__v_LABEL_IV: bitstring.

const bertie__tls13formats__v_LABEL_KEY: bitstring.

const bertie__tls13formats__v_LABEL_RES_BINDER: bitstring.

const bertie__tls13formats__v_LABEL_RES_MASTER: bitstring.

const bertie__tls13formats__v_LABEL_S_AP_TRAFFIC: bitstring.

const bertie__tls13formats__v_LABEL_S_HS_TRAFFIC: bitstring.

const bertie__tls13formats__v_LABEL_TLS13: bitstring.

const bertie__tls13formats__v_PREFIX_SERVER_SIGNATURE: bitstring.

const bertie__tls13utils__v_PARSE_FAILED: bitstring.

const bertie__tls13utils__v_PAYLOAD_TOO_LONG: bitstring.

const bertie__tls13utils__v_PSK_MODE_MISMATCH: bitstring.

event Reached_bertie__tls13utils__v_U16.
letfun bertie__tls13utils__v_U16(x : nat) =
       event Reached_bertie__tls13utils__v_U16;
       x.

const bertie__tls13utils__v_UNSUPPORTED_ALGORITHM: bitstring.

event Reached_bertie__tls13utils__parse_failed.
letfun bertie__tls13utils__parse_failed(wildcard1 : bitstring) =
       event Reached_bertie__tls13utils__parse_failed;
       bertie__tls13utils__v_PARSE_FAILED.

event Reached_bertie__tls13utils__u16_as_be_bytes.
letfun bertie__tls13utils__u16_as_be_bytes(val : nat) =
       event Reached_bertie__tls13utils__u16_as_be_bytes;
       let val = core__num__impl__u16__to_be_bytes(val) in
       [bertie__tls13utils__v_U8(core__ops__index__Index__index(val, 0)),bertie__tls13utils__v_U8(
         core__ops__index__Index__index(val, 1)
       )].

event Reached_bertie__tls13crypto__impl__HashAlgorithm__hash_len.
letfun bertie__tls13crypto__impl__HashAlgorithm__hash_len(
         self : bertie__tls13crypto__t_HashAlgorithm
       ) =
       event Reached_bertie__tls13crypto__impl__HashAlgorithm__hash_len;
       let bertie__tls13crypto__HashAlgorithm_HashAlgorithm_SHA256_c() = self in libcrux__digest__digest_size(
         libcrux__digest__Algorithm_Algorithm_Sha256_c()
       )
       else let bertie__tls13crypto__HashAlgorithm_HashAlgorithm_SHA384_c() = self in libcrux__digest__digest_size(
         libcrux__digest__Algorithm_Algorithm_Sha384_c()
       )
       else let bertie__tls13crypto__HashAlgorithm_HashAlgorithm_SHA512_c() = self in libcrux__digest__digest_size(
         libcrux__digest__Algorithm_Algorithm_Sha512_c()
       ).

event Reached_bertie__tls13crypto__impl__HashAlgorithm__hmac_tag_len.
letfun bertie__tls13crypto__impl__HashAlgorithm__hmac_tag_len(
         self : bertie__tls13crypto__t_HashAlgorithm
       ) =
       event Reached_bertie__tls13crypto__impl__HashAlgorithm__hmac_tag_len;
       bertie__tls13crypto__impl__HashAlgorithm__hash_len(self).

event Reached_bertie__tls13crypto__impl__Algorithms__hash.
letfun bertie__tls13crypto__impl__Algorithms__hash(
         self : bertie__tls13crypto__t_Algorithms
       ) =
       event Reached_bertie__tls13crypto__impl__Algorithms__hash;
       accessor_bertie__tls13crypto__Algorithms_f_hash(self).

event Reached_bertie__tls13crypto__impl__Algorithms__kem.
letfun bertie__tls13crypto__impl__Algorithms__kem(
         self : bertie__tls13crypto__t_Algorithms
       ) =
       event Reached_bertie__tls13crypto__impl__Algorithms__kem;
       accessor_bertie__tls13crypto__Algorithms_f_kem(self).

event Reached_bertie__tls13crypto__impl__Algorithms__psk_mode.
letfun bertie__tls13crypto__impl__Algorithms__psk_mode(
         self : bertie__tls13crypto__t_Algorithms
       ) =
       event Reached_bertie__tls13crypto__impl__Algorithms__psk_mode;
       accessor_bertie__tls13crypto__Algorithms_f_psk_mode(self).

event Reached_bertie__tls13crypto__impl__Algorithms__signature.
letfun bertie__tls13crypto__impl__Algorithms__signature(
         self : bertie__tls13crypto__t_Algorithms
       ) =
       event Reached_bertie__tls13crypto__impl__Algorithms__signature;
       accessor_bertie__tls13crypto__Algorithms_f_signature(self).

event Reached_bertie__tls13cert__verification_key_from_cert.
letfun bertie__tls13cert__verification_key_from_cert(
         cert : bertie__tls13utils__t_Bytes
       ) =
       event Reached_bertie__tls13cert__verification_key_from_cert;
       let offset = bertie__tls13cert__read_sequence_header(cert, 0) in let hoist1 = bertie__tls13cert__read_sequence_header(
         cert, offset
       ) in (
         let offset = hoist1 in
         let hoist2 = bertie__tls13cert__read_version_number(cert, offset) in (
           let offset = hoist2 in
           let hoist3 = bertie__tls13cert__skip_integer(cert, offset) in (
             let offset = hoist3 in
             let hoist4 = bertie__tls13cert__skip_sequence(cert, offset) in (
               let offset = hoist4 in
               let hoist5 = bertie__tls13cert__skip_sequence(cert, offset) in (
                 let offset = hoist5 in
                 let hoist6 = bertie__tls13cert__skip_sequence(cert, offset) in (
                   let offset = hoist6 in
                   let hoist7 = bertie__tls13cert__skip_sequence(cert, offset) in (
                     let offset = hoist7 in
                     bertie__tls13cert__read_spki(cert, offset)
                   )
                   else bitstring_err()
                 )
                 else bitstring_err()
               )
               else bitstring_err()
             )
             else bitstring_err()
           )
           else bitstring_err()
         )
         else bitstring_err()
       )
       else bitstring_err()
       else bitstring_err().

event Reached_bertie__tls13crypto__sign_rsa.
letfun bertie__tls13crypto__sign_rsa(
         sk : bertie__tls13utils__t_Bytes,
         pk_modulus : bertie__tls13utils__t_Bytes,
         pk_exponent : bertie__tls13utils__t_Bytes,
         cert_scheme : bertie__tls13crypto__t_SignatureScheme,
         input : bertie__tls13utils__t_Bytes,
         rng : impl_CryptoRng___RngCore
       ) =
       event Reached_bertie__tls13crypto__sign_rsa;
       let salt = rust_primitives__hax__repeat(0, 32) in
       let (tmp0: impl_CryptoRng___RngCore, tmp1: bitstring) =
         rand_core__RngCore_f_fill_bytes(rng, salt)
        in
       let rng = tmp0 in
       let salt = tmp1 in
       let wildcard7: bitstring = () in
       let wildcard6: bitstring =
         if
           core__ops__bit__Not__v_not(
               let bertie__tls13crypto__SignatureScheme_SignatureScheme_RsaPssRsaSha256_c(

               ) = cert_scheme in true
               else false
             )
         then
           (let hoist8 = todo return; in
            bitstring_err())
         else (())
        in
       let wildcard5: bitstring =
         if
           core__ops__bit__Not__v_not(
               bertie__tls13crypto__valid_rsa_exponent(
                 bertie__tls13utils__impl__Bytes__declassify(pk_exponent)
               )
             )
         then
           (let hoist9 = todo return; in
            bitstring_err())
         else (())
        in
       let key_size = bertie__tls13crypto__supported_rsa_key_size(pk_modulus) in let pk = core__result__impl__map_err(
         libcrux__signature__rsa_pss__impl__RsaPssPublicKey__new(
           key_size,
           core__ops__index__Index_f_index(
             bertie__tls13utils__impl__Bytes__declassify(pk_modulus),
             core__ops__range__RangeFrom_c(1)
           )
         ),
         |wildcard4: bitstring|bertie__tls13utils__v_CRYPTO_ERROR
       ) in let sk = core__result__impl__map_err(
         libcrux__signature__rsa_pss__impl_5__new(
           pk, bertie__tls13utils__impl__Bytes__declassify(sk)
         ),
         |wildcard3: bitstring|bertie__tls13utils__v_CRYPTO_ERROR
       ) in (
         let msg = bertie__tls13utils__impl__Bytes__declassify(input) in
         let sig =
           libcrux__signature__rsa_pss__impl_5__sign(
             sk,
             libcrux__signature__DigestAlgorithm_DigestAlgorithm_Sha256_c(),
             salt,
             msg
           )
          in
         let hax_temp_output =
           core__result__impl__map_err(
             core__result__impl__map(
               sig,
               |sig|bertie__tls13utils__t_Bytes_from_bitstring(
                 libcrux__signature__rsa_pss__impl__RsaPssSignature__as_bytes(
                   sig
                 )
               )
             ),
             |wildcard2: bitstring|bertie__tls13utils__v_CRYPTO_ERROR
           )
          in
         (rng, hax_temp_output)
       )
       else bitstring_err()
       else bitstring_err()
       else bitstring_err().

event Reached_bertie__tls13crypto__impl__HashAlgorithm__hash.
letfun bertie__tls13crypto__impl__HashAlgorithm__hash(
         self : bertie__tls13crypto__t_HashAlgorithm,
         data : bertie__tls13utils__t_Bytes
       ) =
       event Reached_bertie__tls13crypto__impl__HashAlgorithm__hash;
       let hoist10 = bertie__tls13crypto__impl__HashAlgorithm__libcrux_algorithm(
         self
       ) in (
         let hoist11 =
           libcrux__digest__hash(
             hoist10, bertie__tls13utils__impl__Bytes__declassify(data)
           )
          in
         let hoist12 = bertie__tls13utils__t_Bytes_from_bitstring(hoist11) in
         hoist12
       )
       else bertie__tls13utils__t_Bytes_err().

event Reached_bertie__tls13crypto__hkdf_expand.
letfun bertie__tls13crypto__hkdf_expand(
         alg : bertie__tls13crypto__t_HashAlgorithm,
         prk : bertie__tls13utils__t_Bytes,
         info : bertie__tls13utils__t_Bytes,
         len : nat
       ) =
       event Reached_bertie__tls13crypto__hkdf_expand;
       let hoist13 = bertie__tls13crypto__hkdf_algorithm(alg) in (
         let hoist14 =
           libcrux__hkdf__v_expand(
             hoist13,
             bertie__tls13utils__impl__Bytes__declassify(prk),
             bertie__tls13utils__impl__Bytes__declassify(info),
             len
           )
          in
         let x = hoist14 in core__convert__Into_f_into(x)
         else bertie__tls13utils__t_Bytes_err()
       )
       else bertie__tls13utils__t_Bytes_err().

event Reached_bertie__tls13crypto__hkdf_extract.
letfun bertie__tls13crypto__hkdf_extract(
         alg : bertie__tls13crypto__t_HashAlgorithm,
         ikm : bertie__tls13utils__t_Bytes,
         salt : bertie__tls13utils__t_Bytes
       ) =
       event Reached_bertie__tls13crypto__hkdf_extract;
       let hoist15 = bertie__tls13crypto__hkdf_algorithm(alg) in (
         let hoist16 =
           libcrux__hkdf__extract(
             hoist15,
             bertie__tls13utils__impl__Bytes__declassify(salt),
             bertie__tls13utils__impl__Bytes__declassify(ikm)
           )
          in
         let hoist17 = bertie__tls13utils__t_Bytes_from_bitstring(hoist16) in
         hoist17
       )
       else bertie__tls13utils__t_Bytes_err().

event Reached_bertie__tls13crypto__hmac_tag.
letfun bertie__tls13crypto__hmac_tag(
         alg : bertie__tls13crypto__t_HashAlgorithm,
         mk : bertie__tls13utils__t_Bytes,
         input : bertie__tls13utils__t_Bytes
       ) =
       event Reached_bertie__tls13crypto__hmac_tag;
       let hoist18 = bertie__tls13crypto__impl__HashAlgorithm__hmac_algorithm(
         alg
       ) in (
         let hoist19 =
           libcrux__hmac__hmac(
             hoist18,
             bertie__tls13utils__impl__Bytes__declassify(mk),
             bertie__tls13utils__impl__Bytes__declassify(input),
             None()
           )
          in
         let hoist20 = bertie__tls13utils__t_Bytes_from_bitstring(hoist19) in
         hoist20
       )
       else bertie__tls13utils__t_Bytes_err().

event Reached_bertie__tls13crypto__kem_decap.
letfun bertie__tls13crypto__kem_decap(
         alg : bertie__tls13crypto__t_KemScheme,
         ct : bertie__tls13utils__t_Bytes,
         sk : bertie__tls13utils__t_Bytes
       ) =
       event Reached_bertie__tls13crypto__kem_decap;
       let librux_algorithm = bertie__tls13crypto__impl__KemScheme__libcrux_algorithm(
         alg
       ) in (
         let sk =
           core__result__impl__unwrap(
             libcrux__kem__impl__PrivateKey__decode(
               librux_algorithm, bertie__tls13utils__impl__Bytes__declassify(sk)
             )
           )
          in
         let ct =
           bertie__tls13utils__impl__Bytes__declassify(
             bertie__tls13crypto__into_raw(alg, ct)
           )
          in
         let ct =
           core__result__impl__unwrap(
             libcrux__kem__impl__Ct__decode(librux_algorithm, ct)
           )
          in
         let res = libcrux__kem__impl__Ct__decapsulate(ct, sk) in
         let shared_secret = res in (
           let shared_secret:bertie__tls13utils__t_Bytes =
             bertie__tls13utils__t_Bytes_from_bitstring(
               libcrux__kem__impl__Ss__encode(shared_secret)
             )
            in
           let shared_secret =
             bertie__tls13crypto__to_shared_secret(alg, shared_secret)
            in
           shared_secret
         )
         else bertie__tls13utils__t_Bytes_err()
       )
       else bertie__tls13utils__t_Bytes_err().

event Reached_bertie__tls13utils__impl__Bytes__as_raw.
letfun bertie__tls13utils__impl__Bytes__as_raw(
         self : bertie__tls13utils__t_Bytes
       ) =
       event Reached_bertie__tls13utils__impl__Bytes__as_raw;
       accessor_bertie__tls13utils__Bytes_0(self).

event Reached_bertie__tls13utils__impl__Bytes__prefix.
letfun bertie__tls13utils__impl__Bytes__prefix(
         self : bertie__tls13utils__t_Bytes, prefix : bitstring
       ) =
       event Reached_bertie__tls13utils__impl__Bytes__prefix;
       let v_out =
         alloc__vec__impl__with_capacity(
           core__ops__arith__Add__add(
             core__slice__impl__len(prefix),
             bertie__tls13utils__impl__Bytes__len(self)
           )
         )
        in
       let v_out = alloc__vec__impl_2__extend_from_slice(v_out, prefix) in
       let (tmp0: bitstring, tmp1: bitstring) =
         alloc__vec__impl_1__append(
           v_out, accessor_bertie__tls13utils__Bytes_0(self)
         )
        in
       let v_out = tmp0 in
       let self = bertie__tls13utils__t_Bytes(tmp1) in
       let wildcard8: bitstring = () in
       bertie__tls13utils__Bytes_c(v_out).

event Reached_bertie__tls13utils__impl__Bytes__concat.
letfun bertie__tls13utils__impl__Bytes__concat(
         self : bertie__tls13utils__t_Bytes, other : bertie__tls13utils__t_Bytes
       ) =
       event Reached_bertie__tls13utils__impl__Bytes__concat;
       let (tmp0: bitstring, tmp1: bitstring) =
         alloc__vec__impl_1__append(
           accessor_bertie__tls13utils__Bytes_0(self),
           accessor_bertie__tls13utils__Bytes_0(other)
         )
        in
       let self = bertie__tls13utils__t_Bytes(tmp0) in
       let other = bertie__tls13utils__t_Bytes(tmp1) in
       let wildcard9: bitstring = () in
       self.

event Reached_bertie__tls13crypto__kem_encap.
letfun bertie__tls13crypto__kem_encap(
         alg : bertie__tls13crypto__t_KemScheme,
         pk : bertie__tls13utils__t_Bytes,
         rng : impl_CryptoRng___RngCore
       ) =
       event Reached_bertie__tls13crypto__kem_encap;
       let pk = bertie__tls13crypto__into_raw(alg, pk) in
       let hoist21 = bertie__tls13crypto__impl__KemScheme__libcrux_algorithm(alg
       ) in (
         let hoist22 =
           libcrux__kem__impl__PublicKey__decode(
             hoist21, bertie__tls13utils__impl__Bytes__declassify(pk)
           )
          in
         let pk = core__result__impl__unwrap(hoist22) in
         let (tmp0: impl_CryptoRng___RngCore, v_out: bitstring) =
           libcrux__kem__impl__PublicKey__encapsulate(pk, rng)
          in
         let rng = tmp0 in
         let res = v_out in
         let hax_temp_output =
           let (shared_secret: libcrux__kem__t_Ss, ct: libcrux__kem__t_Ct) = res in (
             let ct =
               bertie__tls13utils__impl__Bytes__concat(
                 bertie__tls13crypto__encoding_prefix(alg),
                 core__convert__From_f_from(libcrux__kem__impl__Ct__encode(ct))
               )
              in
             let shared_secret =
               bertie__tls13crypto__to_shared_secret(
                 alg,
                 core__convert__From_f_from(
                   libcrux__kem__impl__Ss__encode(shared_secret)
                 )
               )
              in
             (shared_secret, ct)
           )
           else bitstring_err()
          in
         (rng, hax_temp_output)
       )
       else bitstring_err().

event Reached_bertie__tls13crypto__kem_keygen.
letfun bertie__tls13crypto__kem_keygen(
         alg : bertie__tls13crypto__t_KemScheme, rng : impl_CryptoRng___RngCore
       ) =
       event Reached_bertie__tls13crypto__kem_keygen;
       let hoist23 = bertie__tls13crypto__impl__KemScheme__libcrux_algorithm(alg
       ) in (
         let (tmp0: impl_CryptoRng___RngCore, v_out: bitstring) =
           libcrux__kem__key_gen(hoist23, rng)
          in
         let rng = tmp0 in
         let res = v_out in
         let hax_temp_output =
           let (sk: libcrux__kem__t_PrivateKey, pk: libcrux__kem__t_PublicKey) = res in (
             core__convert__From_f_from(
               libcrux__kem__impl__PrivateKey__encode(sk)
             ),
             bertie__tls13utils__impl__Bytes__concat(
               bertie__tls13crypto__encoding_prefix(alg),
               core__convert__From_f_from(
                 libcrux__kem__impl__PublicKey__encode(pk)
               )
             )
           )
           else bitstring_err()
          in
         (rng, hax_temp_output)
       )
       else bitstring_err().

event Reached_bertie__tls13crypto__sign.
letfun bertie__tls13crypto__sign(
         algorithm : bertie__tls13crypto__t_SignatureScheme,
         sk : bertie__tls13utils__t_Bytes,
         input : bertie__tls13utils__t_Bytes,
         rng : impl_CryptoRng___RngCore
       ) =
       event Reached_bertie__tls13crypto__sign;
       let (rng: impl_CryptoRng___RngCore, sig: libcrux__signature__t_Signature) =
         let bertie__tls13crypto__SignatureScheme_SignatureScheme_EcdsaSecp256r1Sha256_c(

         ) = algorithm in let hoist24 = bertie__tls13crypto__impl__SignatureScheme__libcrux_scheme(
           algorithm
         ) in (
           let
             (
               tmp0: impl_CryptoRng___RngCore,
               v_out: libcrux__signature__t_Signature
             )
            =
             libcrux__signature__sign(
               hoist24,
               bertie__tls13utils__impl__Bytes__declassify(input),
               bertie__tls13utils__impl__Bytes__declassify(sk),
               rng
             )
            in
           let rng = tmp0 in
           (rng, v_out)
         )
         else bitstring_err()
         else let bertie__tls13crypto__SignatureScheme_SignatureScheme_ED25519_c(

         ) = algorithm in let hoist25 = bertie__tls13crypto__impl__SignatureScheme__libcrux_scheme(
           algorithm
         ) in (
           let
             (
               tmp0: impl_CryptoRng___RngCore,
               v_out: libcrux__signature__t_Signature
             )
            =
             libcrux__signature__sign(
               hoist25,
               bertie__tls13utils__impl__Bytes__declassify(input),
               bertie__tls13utils__impl__Bytes__declassify(sk),
               rng
             )
            in
           let rng = tmp0 in
           (rng, v_out)
         )
         else bitstring_err()
         else let bertie__tls13crypto__SignatureScheme_SignatureScheme_RsaPssRsaSha256_c(

         ) = algorithm in (rng, libcrux__signature__t_Signature_err())
        in
       let hax_temp_output =
         let libcrux__signature__Signature_Signature_Ed25519_c(sig) = sig in core__convert__Into_f_into(
           libcrux__signature__impl__Ed25519Signature__as_bytes(sig)
         )
         else let libcrux__signature__Signature_Signature_EcDsaP256_c(sig) = sig in (
           let (r: bitstring, s: bitstring) =
             libcrux__signature__impl__EcDsaP256Signature__as_bytes(sig)
            in
           bertie__tls13utils__impl__Bytes__concat(
             core__convert__From_f_from(r), core__convert__From_f_from(s)
           )
         )
         else let libcrux__signature__Signature_Signature_RsaPss_c(sig) = sig in bertie__tls13utils__t_Bytes_err()
         else bertie__tls13utils__t_Bytes_err()
        in
       (rng, hax_temp_output).

event Reached_bertie__tls13utils__impl__Bytes__from_slice.
letfun bertie__tls13utils__impl__Bytes__from_slice(s : bitstring) =
       event Reached_bertie__tls13utils__impl__Bytes__from_slice;
       bertie__tls13utils__t_Bytes_from_bitstring(s).

event Reached_bertie__tls13utils__impl__Bytes__new.
letfun bertie__tls13utils__impl__Bytes__new(wildcard10 : bitstring) =
       event Reached_bertie__tls13utils__impl__Bytes__new;
       bertie__tls13utils__Bytes_c(alloc__vec__impl__new(())).

event Reached_bertie__tls13handshake__hash_empty.
letfun bertie__tls13handshake__hash_empty(
         algorithm : bertie__tls13crypto__t_HashAlgorithm
       ) =
       event Reached_bertie__tls13handshake__hash_empty;
       bertie__tls13crypto__impl__HashAlgorithm__hash(
         algorithm, bertie__tls13utils__impl__Bytes__new(())
       ).

event Reached_bertie__tls13utils__impl__Bytes__zeroes.
letfun bertie__tls13utils__impl__Bytes__zeroes(len : nat) =
       event Reached_bertie__tls13utils__impl__Bytes__zeroes;
       bertie__tls13utils__Bytes_c(
         alloc__vec__from_elem(bertie__tls13utils__v_U8(0), len)
       ).

event Reached_bertie__tls13crypto__zero_key.
letfun bertie__tls13crypto__zero_key(alg : bertie__tls13crypto__t_HashAlgorithm) =
       event Reached_bertie__tls13crypto__zero_key;
       bertie__tls13utils__impl__Bytes__zeroes(
         bertie__tls13crypto__impl__HashAlgorithm__hash_len(alg)
       ).

event Reached_bertie__tls13utils__bytes.
letfun bertie__tls13utils__bytes(x : bitstring) =
       event Reached_bertie__tls13utils__bytes;
       bertie__tls13utils__t_Bytes_from_bitstring(x).

event Reached_bertie__tls13utils__check_eq.
letfun bertie__tls13utils__check_eq(
         b1 : bertie__tls13utils__t_Bytes, b2 : bertie__tls13utils__t_Bytes
       ) =
       event Reached_bertie__tls13utils__check_eq;
       bertie__tls13utils__check_eq_slice(
         bertie__tls13utils__impl__Bytes__as_raw(b1),
         bertie__tls13utils__impl__Bytes__as_raw(b2)
       ).

event Reached_bertie__tls13utils__encode_length_u8.
letfun bertie__tls13utils__encode_length_u8(bytes : bitstring) =
       event Reached_bertie__tls13utils__encode_length_u8;
       let len = core__slice__impl__len(bytes) in
       if core__cmp__PartialOrd__ge(len, 256)
       then (bertie__tls13utils__t_Bytes_err())
       else (
         let lenb =
           bertie__tls13utils__impl__Bytes__new_alloc(
             core__ops__arith__Add__add(1, core__slice__impl__len(bytes))
           )
          in
         let lenb =
           bertie__tls13utils__impl__Bytes__push(
             lenb, bertie__tls13utils__v_U8(len)
           )
          in
         let lenb =
           bertie__tls13utils__t_Bytes(

               alloc__vec__impl_2__extend_from_slice(
                 accessor_bertie__tls13utils__Bytes_0(lenb), bytes
               )

           )
          in
         lenb
       ).

event Reached_bertie__tls13handshake__hkdf_expand_label.
letfun bertie__tls13handshake__hkdf_expand_label(
         hash_algorithm : bertie__tls13crypto__t_HashAlgorithm,
         key : bertie__tls13utils__t_Bytes,
         label : bertie__tls13utils__t_Bytes,
         context : bertie__tls13utils__t_Bytes,
         len : nat
       ) =
       event Reached_bertie__tls13handshake__hkdf_expand_label;
       if core__cmp__PartialOrd__ge(len, 65536)
       then (bertie__tls13utils__t_Bytes_err())
       else (
         let lenb =
           bertie__tls13utils__u16_as_be_bytes(bertie__tls13utils__v_U16(len))
          in
         let tls13_label =
           bertie__tls13utils__impl__Bytes__concat(
             bertie__tls13utils__impl__Bytes__from_slice(
               bertie__tls13formats__v_LABEL_TLS13
             ),
             label
           )
          in
         let hoist27 = bertie__tls13utils__encode_length_u8(
           bertie__tls13utils__impl__Bytes__as_raw(tls13_label)
         ) in let hoist26 = bertie__tls13utils__encode_length_u8(
           bertie__tls13utils__impl__Bytes__as_raw(context)
         ) in (
           let hoist28 =
             bertie__tls13utils__impl__Bytes__concat(hoist27, hoist26)
            in
           let info = bertie__tls13utils__impl__Bytes__prefix(hoist28, lenb) in
           bertie__tls13crypto__hkdf_expand(hash_algorithm, key, info, len)
         )
         else bertie__tls13utils__t_Bytes_err()
         else bertie__tls13utils__t_Bytes_err()
       ).

event Reached_bertie__tls13handshake__derive_finished_key.
letfun bertie__tls13handshake__derive_finished_key(
         ha : bertie__tls13crypto__t_HashAlgorithm,
         k : bertie__tls13utils__t_Bytes
       ) =
       event Reached_bertie__tls13handshake__derive_finished_key;
       bertie__tls13handshake__hkdf_expand_label(
         ha,
         k,
         bertie__tls13utils__bytes(bertie__tls13formats__v_LABEL_FINISHED),
         bertie__tls13utils__impl__Bytes__new(()),
         bertie__tls13crypto__impl__HashAlgorithm__hmac_tag_len(ha)
       ).

event Reached_bertie__tls13handshake__derive_secret.
letfun bertie__tls13handshake__derive_secret(
         hash_algorithm : bertie__tls13crypto__t_HashAlgorithm,
         key : bertie__tls13utils__t_Bytes,
         label : bertie__tls13utils__t_Bytes,
         transcript_hash : bertie__tls13utils__t_Bytes
       ) =
       event Reached_bertie__tls13handshake__derive_secret;
       bertie__tls13handshake__hkdf_expand_label(
         hash_algorithm,
         key,
         label,
         transcript_hash,
         bertie__tls13crypto__impl__HashAlgorithm__hash_len(hash_algorithm)
       ).

event Reached_bertie__tls13handshake__derive_binder_key.
letfun bertie__tls13handshake__derive_binder_key(
         ha : bertie__tls13crypto__t_HashAlgorithm,
         k : bertie__tls13utils__t_Bytes
       ) =
       event Reached_bertie__tls13handshake__derive_binder_key;
       let early_secret = bertie__tls13crypto__hkdf_extract(
         ha, k, bertie__tls13crypto__zero_key(ha)
       ) in let hoist29 = bertie__tls13handshake__hash_empty(ha) in bertie__tls13handshake__derive_secret(
         ha,
         early_secret,
         bertie__tls13utils__bytes(bertie__tls13formats__v_LABEL_RES_BINDER),
         hoist29
       )
       else bertie__tls13utils__t_Bytes_err()
       else bertie__tls13utils__t_Bytes_err().

event Reached_bertie__tls13handshake__derive_rms.
letfun bertie__tls13handshake__derive_rms(
         ha : bertie__tls13crypto__t_HashAlgorithm,
         master_secret : bertie__tls13utils__t_Bytes,
         tx : bertie__tls13utils__t_Bytes
       ) =
       event Reached_bertie__tls13handshake__derive_rms;
       bertie__tls13handshake__derive_secret(
         ha,
         master_secret,
         bertie__tls13utils__bytes(bertie__tls13formats__v_LABEL_RES_MASTER),
         tx
       ).

event Reached_bertie__tls13utils__eq.
letfun bertie__tls13utils__eq(
         b1 : bertie__tls13utils__t_Bytes, b2 : bertie__tls13utils__t_Bytes
       ) =
       event Reached_bertie__tls13utils__eq;
       bertie__tls13utils__eq_slice(
         accessor_bertie__tls13utils__Bytes_0(b1),
         accessor_bertie__tls13utils__Bytes_0(b2)
       ).

event Reached_bertie__tls13crypto__hmac_verify.
letfun bertie__tls13crypto__hmac_verify(
         alg : bertie__tls13crypto__t_HashAlgorithm,
         mk : bertie__tls13utils__t_Bytes,
         input : bertie__tls13utils__t_Bytes,
         tag : bertie__tls13utils__t_Bytes
       ) =
       event Reached_bertie__tls13crypto__hmac_verify;
       let hoist30 = bertie__tls13crypto__hmac_tag(alg, mk, input) in (
         let hoist31 = bertie__tls13utils__eq(hoist30, tag) in
         if hoist31
         then (())
         else (bertie__tls13utils__tlserr(bertie__tls13utils__v_CRYPTO_ERROR))
       )
       else bitstring_err().

event Reached_bertie__server__lookup_db.
letfun bertie__server__lookup_db(
         ciphersuite : bertie__tls13crypto__t_Algorithms,
         db : bertie__server__t_ServerDB,
         sni : bertie__tls13utils__t_Bytes,
         tkt : Option
       ) =
       event Reached_bertie__server__lookup_db;
       if
         bertie__tls13utils__eq(sni, bertie__tls13utils__impl__Bytes__new(())) || bertie__tls13utils__eq(
             sni, accessor_bertie__server__ServerDB_f_server_name(db)
           )
       then
         (let (
            =true,
            Some(bertie__tls13utils__t_Bytes_to_bitstring(ctkt)),
            Some(
              (
                stkt: bertie__tls13utils__t_Bytes,
                psk: bertie__tls13utils__t_Bytes
              )
            )
          ) = (
            bertie__tls13crypto__impl__Algorithms__psk_mode(ciphersuite),
            tkt,
            accessor_bertie__server__ServerDB_f_psk_opt(db)
          ) in let wildcard11: bitstring = bertie__tls13utils__check_eq(
            ctkt, stkt
          ) in (
            let server =
              bertie__server__ServerInfo_c(
                accessor_bertie__server__ServerDB_f_cert(db)
                ,accessor_bertie__server__ServerDB_f_sk(db)
                ,Some(bertie__tls13utils__t_Bytes_to_bitstring(psk))
              )
             in
            server
          )
          else bertie__server__t_ServerInfo_err()
          else let (=false, wildcard12: bitstring, wildcard13: bitstring) = (
            bertie__tls13crypto__impl__Algorithms__psk_mode(ciphersuite),
            tkt,
            accessor_bertie__server__ServerDB_f_psk_opt(db)
          ) in (
            let server =
              bertie__server__ServerInfo_c(
                accessor_bertie__server__ServerDB_f_cert(db)
                ,accessor_bertie__server__ServerDB_f_sk(db)
                ,None()
              )
             in
            server
          )
          else bertie__server__t_ServerInfo_err())
       else (bertie__server__t_ServerInfo_err()).

event Reached_bertie__tls13crypto__impl__AeadKey__new.
letfun bertie__tls13crypto__impl__AeadKey__new(
         bytes : bertie__tls13utils__t_Bytes,
         alg : bertie__tls13crypto__t_AeadAlgorithm
       ) =
       event Reached_bertie__tls13crypto__impl__AeadKey__new;
       bertie__tls13crypto__AeadKey_c(bytes,alg).

event Reached_bertie__tls13cert__rsa_public_key.
letfun bertie__tls13cert__rsa_public_key(
         cert : bertie__tls13utils__t_Bytes,
         indices : bertie__tls13cert__t_CertificateKey
       ) =
       event Reached_bertie__tls13cert__rsa_public_key;
       let bertie__tls13cert__CertificateKey_c(offset, v__len) = indices in
       let wildcard16: bitstring = bertie__tls13cert__check_tag(cert, offset, 48
       ) in (
         let offset = core__ops__arith__Add__add(offset, 1) in
         let (offset: nat, v__seq_len: nat) = bertie__tls13cert__length(
           cert, offset
         ) in let wildcard15: bitstring = bertie__tls13cert__check_tag(
           cert, offset, 2
         ) in (
           let offset = core__ops__arith__Add__add(offset, 1) in
           let (offset: nat, int_len: nat) = bertie__tls13cert__length(
             cert, offset
           ) in (
             let n =
               bertie__tls13utils__impl__Bytes__slice(cert, offset, int_len)
              in
             let offset = core__ops__arith__Add__add(offset, int_len) in
             let wildcard14: bitstring = bertie__tls13cert__check_tag(
               cert, offset, 2
             ) in (
               let offset = core__ops__arith__Add__add(offset, 1) in
               let (offset: nat, int_len: nat) = bertie__tls13cert__length(
                 cert, offset
               ) in (
                 let e =
                   bertie__tls13utils__impl__Bytes__slice(cert, offset, int_len)
                  in
                 bertie__tls13crypto__RsaVerificationKey_c(n,e)
               )
               else bertie__tls13crypto__t_RsaVerificationKey_err()
             )
             else bertie__tls13crypto__t_RsaVerificationKey_err()
           )
           else bertie__tls13crypto__t_RsaVerificationKey_err()
         )
         else bertie__tls13crypto__t_RsaVerificationKey_err()
         else bertie__tls13crypto__t_RsaVerificationKey_err()
       )
       else bertie__tls13crypto__t_RsaVerificationKey_err().

event Reached_bertie__tls13cert__cert_public_key.
letfun bertie__tls13cert__cert_public_key(
         certificate : bertie__tls13utils__t_Bytes, spki : bitstring
       ) =
       event Reached_bertie__tls13cert__cert_public_key;
       let bertie__tls13crypto__SignatureScheme_SignatureScheme_ED25519_c() = spki.0 in bertie__tls13cert__asn1_error(
         bertie__tls13cert__v_ASN1_UNSUPPORTED_ALGORITHM
       )
       else let bertie__tls13crypto__SignatureScheme_SignatureScheme_EcdsaSecp256r1Sha256_c(

       ) = spki.0 in let pk = bertie__tls13cert__ecdsa_public_key(
         certificate, spki.1
       ) in bertie__tls13crypto__PublicVerificationKey_PublicVerificationKey_EcDsa_c(
         pk
       )
       else bertie__tls13crypto__t_PublicVerificationKey_err()
       else let bertie__tls13crypto__SignatureScheme_SignatureScheme_RsaPssRsaSha256_c(

       ) = spki.0 in let pk = bertie__tls13cert__rsa_public_key(
         certificate, spki.1
       ) in bertie__tls13crypto__PublicVerificationKey_PublicVerificationKey_Rsa_c(
         pk
       )
       else bertie__tls13crypto__t_PublicVerificationKey_err().

event Reached_bertie__tls13crypto__verify.
letfun bertie__tls13crypto__verify(
         alg : bertie__tls13crypto__t_SignatureScheme,
         pk : bertie__tls13crypto__t_PublicVerificationKey,
         input : bertie__tls13utils__t_Bytes,
         sig : bertie__tls13utils__t_Bytes
       ) =
       event Reached_bertie__tls13crypto__verify;
       let (
         bertie__tls13crypto__SignatureScheme_SignatureScheme_ED25519_c(),
         bertie__tls13crypto__PublicVerificationKey_PublicVerificationKey_EcDsa_c(
           pk
         )
       ) = (alg, pk) in let hoist32 = bertie__tls13utils__impl__Bytes__declassify_array(
         sig
       ) in (
         let hoist33 =
           libcrux__signature__impl__Ed25519Signature__from_bytes(hoist32)
          in
         let hoist34 =
           libcrux__signature__Signature_Signature_Ed25519_c(hoist33)
          in
         let res =
           libcrux__signature__verify(
             bertie__tls13utils__impl__Bytes__declassify(input),
             hoist34,
             bertie__tls13utils__impl__Bytes__declassify(pk)
           )
          in
         let res = res in res
         else bitstring_err()
       )
       else bitstring_err()
       else let (
         bertie__tls13crypto__SignatureScheme_SignatureScheme_EcdsaSecp256r1Sha256_c(

         ),
         bertie__tls13crypto__PublicVerificationKey_PublicVerificationKey_EcDsa_c(
           pk
         )
       ) = (alg, pk) in let hoist35 = bertie__tls13utils__impl__Bytes__declassify_array(
         sig
       ) in (
         let hoist36 =
           libcrux__signature__impl__EcDsaP256Signature__from_bytes(
             hoist35,
             libcrux__signature__Algorithm_Algorithm_EcDsaP256_c(
               libcrux__signature__DigestAlgorithm_DigestAlgorithm_Sha256_c()
             )
           )
          in
         let hoist37 =
           libcrux__signature__Signature_Signature_EcDsaP256_c(hoist36)
          in
         let res =
           libcrux__signature__verify(
             bertie__tls13utils__impl__Bytes__declassify(input),
             hoist37,
             bertie__tls13utils__impl__Bytes__declassify(pk)
           )
          in
         let res = res in res
         else bitstring_err()
       )
       else bitstring_err()
       else let (
         bertie__tls13crypto__SignatureScheme_SignatureScheme_RsaPssRsaSha256_c(
         ),
         bertie__tls13crypto__PublicVerificationKey_PublicVerificationKey_Rsa_c(
           bertie__tls13crypto__RsaVerificationKey_c(n,e)
         )
       ) = (alg, pk) in (
         if
           core__ops__bit__Not__v_not(
               bertie__tls13crypto__valid_rsa_exponent(
                 bertie__tls13utils__impl__Bytes__declassify(e)
               )
             )
         then
           (bertie__tls13utils__tlserr(
              bertie__tls13utils__v_UNSUPPORTED_ALGORITHM
            ))
         else (
           let key_size = bertie__tls13crypto__supported_rsa_key_size(n) in let pk = core__result__impl__map_err(
             libcrux__signature__rsa_pss__impl__RsaPssPublicKey__new(
               key_size,
               core__ops__index__Index_f_index(
                 bertie__tls13utils__impl__Bytes__declassify(n),
                 core__ops__range__RangeFrom_c(1)
               )
             ),
             |wildcard17: bitstring|bertie__tls13utils__v_CRYPTO_ERROR
           ) in (
             let res =
               libcrux__signature__rsa_pss__impl__RsaPssPublicKey__verify(
                 pk,
                 libcrux__signature__DigestAlgorithm_DigestAlgorithm_Sha256_c(),
                 libcrux__signature__rsa_pss__t_RsaPssSignature_from_bitstring(
                   bertie__tls13utils__impl__Bytes__declassify(sig)
                 ),
                 bertie__tls13utils__impl__Bytes__declassify(input),
                 32
               )
              in
             let res = res in res
             else bitstring_err()
           )
           else bitstring_err()
           else bitstring_err()
         )
       )
       else bertie__tls13utils__tlserr(
         bertie__tls13utils__v_UNSUPPORTED_ALGORITHM
       ).

event Reached_bertie__tls13formats__handshake_data__impl__HandshakeData__concat.
letfun bertie__tls13formats__handshake_data__impl__HandshakeData__concat(
         self : bertie__tls13formats__handshake_data__t_HandshakeData,
         other : bertie__tls13formats__handshake_data__t_HandshakeData
       ) =
       event Reached_bertie__tls13formats__handshake_data__impl__HandshakeData__concat;
       let message1 =
         bertie__tls13formats__handshake_data__impl__HandshakeData__to_bytes(
           self
         )
        in
       let message2 =
         bertie__tls13formats__handshake_data__impl__HandshakeData__to_bytes(
           other
         )
        in
       let message1 =
         bertie__tls13utils__impl__Bytes__extend_from_slice(message1, message2)
        in
       core__convert__From_f_from(message1).

event Reached_bertie__tls13formats__handshake_data__impl__HandshakeData__to_four.
letfun bertie__tls13formats__handshake_data__impl__HandshakeData__to_four(
         self : bertie__tls13formats__handshake_data__t_HandshakeData
       ) =
       event Reached_bertie__tls13formats__handshake_data__impl__HandshakeData__to_four;
       let (
         message1: bertie__tls13formats__handshake_data__t_HandshakeData,
         payload_rest: bertie__tls13formats__handshake_data__t_HandshakeData
       ) = bertie__tls13formats__handshake_data__impl__HandshakeData__next_handshake_message(
         self
       ) in let (
         message2: bertie__tls13formats__handshake_data__t_HandshakeData,
         payload_rest: bertie__tls13formats__handshake_data__t_HandshakeData
       ) = bertie__tls13formats__handshake_data__impl__HandshakeData__next_handshake_message(
         payload_rest
       ) in let (
         message3: bertie__tls13formats__handshake_data__t_HandshakeData,
         payload_rest: bertie__tls13formats__handshake_data__t_HandshakeData
       ) = bertie__tls13formats__handshake_data__impl__HandshakeData__next_handshake_message(
         payload_rest
       ) in let (
         message4: bertie__tls13formats__handshake_data__t_HandshakeData,
         payload_rest: bertie__tls13formats__handshake_data__t_HandshakeData
       ) = bertie__tls13formats__handshake_data__impl__HandshakeData__next_handshake_message(
         payload_rest
       ) in (
         if
           core__cmp__PartialEq__ne(
               bertie__tls13formats__handshake_data__impl__HandshakeData__len(
                 payload_rest
               ),
               0
             )
         then (bertie__tls13utils__tlserr(bertie__tls13utils__parse_failed(())))
         else ((message1, message2, message3, message4))
       )
       else bitstring_err()
       else bitstring_err()
       else bitstring_err()
       else bitstring_err().

event Reached_bertie__tls13formats__handshake_data__impl__HandshakeData__to_two.
letfun bertie__tls13formats__handshake_data__impl__HandshakeData__to_two(
         self : bertie__tls13formats__handshake_data__t_HandshakeData
       ) =
       event Reached_bertie__tls13formats__handshake_data__impl__HandshakeData__to_two;
       let (
         message1: bertie__tls13formats__handshake_data__t_HandshakeData,
         payload_rest: bertie__tls13formats__handshake_data__t_HandshakeData
       ) = bertie__tls13formats__handshake_data__impl__HandshakeData__next_handshake_message(
         self
       ) in let (
         message2: bertie__tls13formats__handshake_data__t_HandshakeData,
         payload_rest: bertie__tls13formats__handshake_data__t_HandshakeData
       ) = bertie__tls13formats__handshake_data__impl__HandshakeData__next_handshake_message(
         payload_rest
       ) in (
         if
           core__cmp__PartialEq__ne(
               bertie__tls13formats__handshake_data__impl__HandshakeData__len(
                 payload_rest
               ),
               0
             )
         then (bertie__tls13utils__tlserr(bertie__tls13utils__parse_failed(())))
         else ((message1, message2))
       )
       else bitstring_err()
       else bitstring_err().

event Reached_bertie__tls13formats__certificate_verify.
letfun bertie__tls13formats__certificate_verify(
         algs : bertie__tls13crypto__t_Algorithms,
         cv : bertie__tls13utils__t_Bytes
       ) =
       event Reached_bertie__tls13formats__certificate_verify;
       let sv =
         let bertie__tls13crypto__SignatureScheme_SignatureScheme_RsaPssRsaSha256_c(

         ) = accessor_bertie__tls13crypto__Algorithms_f_signature(algs) in cv
         else let bertie__tls13crypto__SignatureScheme_SignatureScheme_EcdsaSecp256r1Sha256_c(

         ) = accessor_bertie__tls13crypto__Algorithms_f_signature(algs) in (
           if
             core__cmp__PartialEq__ne(
                 bertie__tls13utils__impl__Bytes__len(cv), 64
               )
           then
             (let hoist38 = todo return; in
              bertie__tls13utils__t_Bytes_err())
           else (
             let ok = bertie__tls13formats__ecdsa_signature(cv) in ok
             else bertie__tls13utils__t_Bytes_err()
           )
         )
         else let bertie__tls13crypto__SignatureScheme_SignatureScheme_ED25519_c(

         ) = accessor_bertie__tls13crypto__Algorithms_f_signature(algs) in bertie__tls13utils__t_Bytes_err()
        in
       let hoist40 = bertie__tls13crypto__impl__Algorithms__signature_algorithm(
         algs
       ) in let hoist39 = bertie__tls13utils__encode_length_u16(sv) in (
         let sig = bertie__tls13utils__impl__Bytes__concat(hoist40, hoist39) in
         bertie__tls13formats__handshake_data__impl__HandshakeData__from_bytes(
           bertie__tls13formats__handshake_data__HandshakeType_HandshakeType_CertificateVerify_c(

           ),
           sig
         )
       )
       else bertie__tls13formats__handshake_data__t_HandshakeData_err()
       else bertie__tls13formats__handshake_data__t_HandshakeData_err().

event Reached_bertie__tls13formats__client_hello.
letfun bertie__tls13formats__client_hello(
         algorithms : bertie__tls13crypto__t_Algorithms,
         client_random : bertie__tls13utils__t_Bytes,
         kem_pk : bertie__tls13utils__t_Bytes,
         server_name : bertie__tls13utils__t_Bytes,
         session_ticket : Option
       ) =
       event Reached_bertie__tls13formats__client_hello;
       let version = bertie__tls13utils__bytes2(3, 3) in
       let compression_methods = bertie__tls13utils__bytes2(1, 0) in
       let legacy_session_id = bertie__tls13utils__encode_length_u8(
         rust_primitives__hax__repeat(bertie__tls13utils__v_U8(0), 32)
       ) in let hoist41 = bertie__tls13crypto__impl__Algorithms__ciphersuite(
         algorithms
       ) in (
         let hoist42 = bertie__tls13utils__encode_length_u16(hoist41) in
         let cipher_suites = hoist42 in let server_name = bertie__tls13formats__build_server_name(
           server_name
         ) in let supported_versions = bertie__tls13formats__supported_versions(
           ()
         ) in let supported_groups = bertie__tls13formats__supported_groups(
           algorithms
         ) in let signature_algorithms = bertie__tls13formats__signature_algorithms(
           algorithms
         ) in let key_shares = bertie__tls13formats__key_shares(
           algorithms, kem_pk
         ) in (
           let len =
             core__ops__arith__Add__add(
               bertie__tls13utils__impl__Bytes__len(server_name),
               bertie__tls13utils__impl__Bytes__len(supported_versions)
             )
            in
           let len =
             core__ops__arith__Add__add(
               len, bertie__tls13utils__impl__Bytes__len(supported_groups)
             )
            in
           let len =
             core__ops__arith__Add__add(
               len, bertie__tls13utils__impl__Bytes__len(signature_algorithms)
             )
            in
           let len =
             core__ops__arith__Add__add(
               len, bertie__tls13utils__impl__Bytes__len(key_shares)
             )
            in
           let v_out = bertie__tls13utils__impl__Bytes__new_alloc(len) in
           let v_out =
             bertie__tls13utils__impl__Bytes__append(v_out, server_name)
            in
           let v_out =
             bertie__tls13utils__impl__Bytes__append(v_out, supported_versions)
            in
           let v_out =
             bertie__tls13utils__impl__Bytes__append(v_out, supported_groups)
            in
           let v_out =
             bertie__tls13utils__impl__Bytes__append(v_out, signature_algorithms
             )
            in
           let v_out =
             bertie__tls13utils__impl__Bytes__append(v_out, key_shares)
            in
           let extensions = v_out in
           let (trunc_len: nat, extensions: bertie__tls13utils__t_Bytes) = let (
             =true,
             Some(bertie__tls13utils__t_Bytes_to_bitstring(session_ticket))
           ) = (
             bertie__tls13crypto__impl__Algorithms__psk_mode(algorithms),
             session_ticket
           ) in bertie__tls13formats__get_psk_extensions(
             algorithms, session_ticket, extensions
           )
           else let (=false, None()) = (
             bertie__tls13crypto__impl__Algorithms__psk_mode(algorithms),
             session_ticket
           ) in (0, extensions)
           else bertie__tls13utils__tlserr(
             bertie__tls13utils__v_PSK_MODE_MISMATCH
           ) in let encoded_extensions = bertie__tls13utils__encode_length_u16(
             extensions
           ) in (
             let len =
               core__ops__arith__Add__add(
                 bertie__tls13utils__impl__Bytes__len(version),
                 bertie__tls13utils__impl__Bytes__len(client_random)
               )
              in
             let len =
               core__ops__arith__Add__add(
                 len, bertie__tls13utils__impl__Bytes__len(legacy_session_id)
               )
              in
             let len =
               core__ops__arith__Add__add(
                 len, bertie__tls13utils__impl__Bytes__len(cipher_suites)
               )
              in
             let len =
               core__ops__arith__Add__add(
                 len, bertie__tls13utils__impl__Bytes__len(compression_methods)
               )
              in
             let len =
               core__ops__arith__Add__add(
                 len, bertie__tls13utils__impl__Bytes__len(encoded_extensions)
               )
              in
             let v_out = bertie__tls13utils__impl__Bytes__new_alloc(len) in
             let v_out = bertie__tls13utils__impl__Bytes__append(v_out, version) in
             let v_out =
               bertie__tls13utils__impl__Bytes__append(v_out, client_random)
              in
             let v_out =
               bertie__tls13utils__impl__Bytes__append(v_out, legacy_session_id)
              in
             let v_out =
               bertie__tls13utils__impl__Bytes__append(v_out, cipher_suites)
              in
             let v_out =
               bertie__tls13utils__impl__Bytes__append(
                 v_out, compression_methods
               )
              in
             let v_out =
               bertie__tls13utils__impl__Bytes__append(v_out, encoded_extensions
               )
              in
             let handshake_bytes = v_out in
             let client_hello = bertie__tls13formats__handshake_data__impl__HandshakeData__from_bytes(
               bertie__tls13formats__handshake_data__HandshakeType_HandshakeType_ClientHello_c(

               ),
               handshake_bytes
             ) in (client_hello, trunc_len)
             else bitstring_err()
           )
           else bitstring_err()
           else bitstring_err()
         )
         else bitstring_err()
         else bitstring_err()
         else bitstring_err()
         else bitstring_err()
         else bitstring_err()
         else bitstring_err()
       )
       else bitstring_err()
       else bitstring_err().

event Reached_bertie__tls13formats__encrypted_extensions.
letfun bertie__tls13formats__encrypted_extensions(
         v__algs : bertie__tls13crypto__t_Algorithms
       ) =
       event Reached_bertie__tls13formats__encrypted_extensions;
       let handshake_type =
         bertie__tls13utils__bytes1(
           core__ops__arith__Add__add(
             bertie__tls13formats__handshake_data__discriminant_HandshakeType_HandshakeType_EncryptedExtensions_c,
             0
           )
         )
        in
       let hoist43 = bertie__tls13utils__encode_length_u16(
         bertie__tls13utils__impl__Bytes__new(())
       ) in (
         let hoist44 = bertie__tls13utils__encode_length_u24(hoist43) in
         let hoist45 = hoist44 in (
           let hoist46 =
             bertie__tls13utils__impl__Bytes__concat(handshake_type, hoist45)
            in
           let hoist47 =
             bertie__tls13formats__handshake_data__HandshakeData_c(hoist46)
            in
           hoist47
         )
         else bertie__tls13formats__handshake_data__t_HandshakeData_err()
       )
       else bertie__tls13formats__handshake_data__t_HandshakeData_err().

event Reached_bertie__tls13formats__finished.
letfun bertie__tls13formats__finished(vd : bertie__tls13utils__t_Bytes) =
       event Reached_bertie__tls13formats__finished;
       bertie__tls13formats__handshake_data__impl__HandshakeData__from_bytes(
         bertie__tls13formats__handshake_data__HandshakeType_HandshakeType_Finished_c(

         ),
         vd
       ).

event Reached_bertie__tls13formats__parse_certificate_verify.
letfun bertie__tls13formats__parse_certificate_verify(
         algs : bertie__tls13crypto__t_Algorithms,
         certificate_verify : bertie__tls13formats__handshake_data__t_HandshakeData
       ) =
       event Reached_bertie__tls13formats__parse_certificate_verify;
       let bertie__tls13formats__handshake_data__HandshakeData_c(cv) = bertie__tls13formats__handshake_data__impl__HandshakeData__as_handshake_message(
         certificate_verify,
         bertie__tls13formats__handshake_data__HandshakeType_HandshakeType_CertificateVerify_c(

         )
       ) in (
         let sa = bertie__tls13crypto__impl__Algorithms__signature(algs) in
         let hoist48 = bertie__tls13crypto__impl__Algorithms__signature_algorithm(
           algs
         ) in (
           let hoist49 =
             bertie__tls13utils__check_eq(
               hoist48,
               bertie__tls13utils__impl__Bytes__slice_range(
                 cv, core__ops__range__Range_c(0,2)
               )
             )
            in
           let wildcard19: bitstring = hoist49 in let wildcard18: bitstring = bertie__tls13utils__check_length_encoding_u16(
             bertie__tls13utils__impl__Bytes__slice_range(
               cv,
               core__ops__range__Range_c(
                 2,bertie__tls13utils__impl__Bytes__len(cv)
               )
             )
           ) in let bertie__tls13crypto__SignatureScheme_SignatureScheme_EcdsaSecp256r1Sha256_c(

           ) = sa in bertie__tls13formats__parse_ecdsa_signature(
             bertie__tls13utils__impl__Bytes__slice_range(
               cv,
               core__ops__range__Range_c(
                 4,bertie__tls13utils__impl__Bytes__len(cv)
               )
             )
           )
           else let bertie__tls13crypto__SignatureScheme_SignatureScheme_RsaPssRsaSha256_c(

           ) = sa in bertie__tls13utils__impl__Bytes__slice_range(
             cv,
             core__ops__range__Range_c(
               4,bertie__tls13utils__impl__Bytes__len(cv)
             )
           )
           else let bertie__tls13crypto__SignatureScheme_SignatureScheme_ED25519_c(

           ) = sa in (
             if
               core__cmp__PartialEq__eq(
                   core__ops__arith__Sub__sub(
                     bertie__tls13utils__impl__Bytes__len(cv), 4
                   ),
                   64
                 )
             then
               (bertie__tls13utils__impl__Bytes__slice_range(
                  cv,
                  core__ops__range__Range_c(
                    8,bertie__tls13utils__impl__Bytes__len(cv)
                  )
                ))
             else (bertie__tls13utils__t_Bytes_err())
           )
           else bertie__tls13utils__t_Bytes_err()
           else bertie__tls13utils__t_Bytes_err()
         )
         else bertie__tls13utils__t_Bytes_err()
       )
       else bertie__tls13utils__t_Bytes_err().

event Reached_bertie__tls13formats__parse_client_hello.
letfun bertie__tls13formats__parse_client_hello(
         ciphersuite : bertie__tls13crypto__t_Algorithms,
         client_hello : bertie__tls13formats__handshake_data__t_HandshakeData
       ) =
       event Reached_bertie__tls13formats__parse_client_hello;
       let bertie__tls13formats__handshake_data__HandshakeData_c(ch) = bertie__tls13formats__handshake_data__impl__HandshakeData__as_handshake_message(
         client_hello,
         bertie__tls13formats__handshake_data__HandshakeType_HandshakeType_ClientHello_c(

         )
       ) in (
         let ver = bertie__tls13utils__bytes2(3, 3) in
         let comp = bertie__tls13utils__bytes2(1, 0) in
         let next = 0 in
         let wildcard27: bitstring = bertie__tls13utils__check_eq(
           ver,
           bertie__tls13utils__impl__Bytes__slice_range(
             ch,
             core__ops__range__Range_c(next,core__ops__arith__Add__add(next, 2))
           )
         ) in (
           let next = core__ops__arith__Add__add(next, 2) in
           let crand =
             bertie__tls13utils__impl__Bytes__slice_range(
               ch,
               core__ops__range__Range_c(
                 next,core__ops__arith__Add__add(next, 32)
               )
             )
            in
           let next = core__ops__arith__Add__add(next, 32) in
           let sidlen = bertie__tls13utils__length_u8_encoded(
             core__ops__index__Index_f_index(
               ch,
               core__ops__range__Range_c(
                 next,bertie__tls13utils__impl__Bytes__len(ch)
               )
             )
           ) in (
             let sid =
               bertie__tls13utils__impl__Bytes__slice_range(
                 ch,
                 core__ops__range__Range_c(
                   core__ops__arith__Add__add(next, 1)
                   ,
                     core__ops__arith__Add__add(
                       core__ops__arith__Add__add(next, 1), sidlen
                     )

                 )
               )
              in
             let next =
               core__ops__arith__Add__add(
                 core__ops__arith__Add__add(next, 1), sidlen
               )
              in
             let cslen = bertie__tls13crypto__impl__Algorithms__check(
               ciphersuite,
               bertie__tls13utils__impl__Bytes__raw_slice(
                 ch,
                 core__ops__range__Range_c(
                   next,bertie__tls13utils__impl__Bytes__len(ch)
                 )
               )
             ) in (
               let next = core__ops__arith__Add__add(next, cslen) in
               let wildcard26: bitstring =
                 let wildcard25: bitstring = bertie__tls13utils__check_eq(
                   comp,
                   bertie__tls13utils__impl__Bytes__slice_range(
                     ch,
                     core__ops__range__Range_c(
                       next,core__ops__arith__Add__add(next, 2)
                     )
                   )
                 ) in ()
                 else bitstring_err()
                in
               let next = core__ops__arith__Add__add(next, 2) in
               let wildcard24: bitstring = bertie__tls13utils__check_length_encoding_u16(
                 bertie__tls13utils__impl__Bytes__slice_range(
                   ch,
                   core__ops__range__Range_c(
                     next,bertie__tls13utils__impl__Bytes__len(ch)
                   )
                 )
               ) in (
                 let next = core__ops__arith__Add__add(next, 2) in
                 let exts = bertie__tls13formats__check_extensions(
                   ciphersuite,
                   bertie__tls13utils__impl__Bytes__slice_range(
                     ch,
                     core__ops__range__Range_c(
                       next,bertie__tls13utils__impl__Bytes__len(ch)
                     )
                   )
                 ) in (
                   let trunc_len =
                     core__ops__arith__Sub__sub(
                       core__ops__arith__Sub__sub(
                         bertie__tls13utils__impl__Bytes__len(ch),
                         bertie__tls13crypto__impl__HashAlgorithm__hash_len(
                           bertie__tls13crypto__impl__Algorithms__hash(
                             ciphersuite
                           )
                         )
                       ),
                       3
                     )
                    in
                   let (
                     wildcard20: bitstring,
                     bertie__tls13formats__Extensions_c(
                       wildcard21: bitstring
                       ,None()
                       ,wildcard22: bitstring
                       ,wildcard23: bitstring
                     )
                   ) = (
                     bertie__tls13crypto__impl__Algorithms__psk_mode(ciphersuite
                     ),
                     exts
                   ) in bitstring_err()
                   else let (
                     =true,
                     bertie__tls13formats__Extensions_c(
                       Some(bertie__tls13utils__t_Bytes_to_bitstring(sn))
                       ,Some(bertie__tls13utils__t_Bytes_to_bitstring(gx))
                       ,Some(bertie__tls13utils__t_Bytes_to_bitstring(tkt))
                       ,Some(bertie__tls13utils__t_Bytes_to_bitstring(binder))
                     )
                   ) = (
                     bertie__tls13crypto__impl__Algorithms__psk_mode(ciphersuite
                     ),
                     exts
                   ) in (
                     crand,
                     sid,
                     sn,
                     gx,
                     Some(bertie__tls13utils__t_Bytes_to_bitstring(tkt)),
                     Some(bertie__tls13utils__t_Bytes_to_bitstring(binder)),
                     trunc_len
                   )
                   else let (
                     =true,
                     bertie__tls13formats__Extensions_c(
                       None()
                       ,Some(bertie__tls13utils__t_Bytes_to_bitstring(gx))
                       ,Some(bertie__tls13utils__t_Bytes_to_bitstring(tkt))
                       ,Some(bertie__tls13utils__t_Bytes_to_bitstring(binder))
                     )
                   ) = (
                     bertie__tls13crypto__impl__Algorithms__psk_mode(ciphersuite
                     ),
                     exts
                   ) in (
                     crand,
                     sid,
                     bertie__tls13utils__impl__Bytes__new(()),
                     gx,
                     Some(bertie__tls13utils__t_Bytes_to_bitstring(tkt)),
                     Some(bertie__tls13utils__t_Bytes_to_bitstring(binder)),
                     trunc_len
                   )
                   else let (
                     =false,
                     bertie__tls13formats__Extensions_c(
                       Some(bertie__tls13utils__t_Bytes_to_bitstring(sn))
                       ,Some(bertie__tls13utils__t_Bytes_to_bitstring(gx))
                       ,None()
                       ,None()
                     )
                   ) = (
                     bertie__tls13crypto__impl__Algorithms__psk_mode(ciphersuite
                     ),
                     exts
                   ) in (crand, sid, sn, gx, None(), None(), 0)
                   else let (
                     =false,
                     bertie__tls13formats__Extensions_c(
                       None()
                       ,Some(bertie__tls13utils__t_Bytes_to_bitstring(gx))
                       ,None()
                       ,None()
                     )
                   ) = (
                     bertie__tls13crypto__impl__Algorithms__psk_mode(ciphersuite
                     ),
                     exts
                   ) in (
                     crand,
                     sid,
                     bertie__tls13utils__impl__Bytes__new(()),
                     gx,
                     None(),
                     None(),
                     0
                   )
                   else bitstring_err()
                 )
                 else bitstring_err()
               )
               else bitstring_err()
             )
             else bitstring_err()
           )
           else bitstring_err()
         )
         else bitstring_err()
       )
       else bitstring_err().

event Reached_bertie__tls13formats__parse_encrypted_extensions.
letfun bertie__tls13formats__parse_encrypted_extensions(
         v__algs : bertie__tls13crypto__t_Algorithms,
         encrypted_extensions : bertie__tls13formats__handshake_data__t_HandshakeData
       ) =
       event Reached_bertie__tls13formats__parse_encrypted_extensions;
       let
         bertie__tls13formats__handshake_data__HandshakeData_c(
           encrypted_extension_bytes
         )
        = encrypted_extensions in
       let expected_handshake_type =
         bertie__tls13utils__bytes1(
           core__ops__arith__Add__add(
             bertie__tls13formats__handshake_data__discriminant_HandshakeType_HandshakeType_EncryptedExtensions_c,
             0
           )
         )
        in
       let wildcard28: bitstring = bertie__tls13utils__check_eq(
         expected_handshake_type,
         bertie__tls13utils__impl__Bytes__slice_range(
           encrypted_extension_bytes, core__ops__range__Range_c(0,1)
         )
       ) in bertie__tls13utils__check_length_encoding_u24(
         bertie__tls13utils__impl__Bytes__raw_slice(
           encrypted_extension_bytes,
           core__ops__range__Range_c(
             1,bertie__tls13utils__impl__Bytes__len(encrypted_extension_bytes)
           )
         )
       )
       else bitstring_err().

event Reached_bertie__tls13formats__parse_finished.
letfun bertie__tls13formats__parse_finished(
         finished : bertie__tls13formats__handshake_data__t_HandshakeData
       ) =
       event Reached_bertie__tls13formats__parse_finished;
       let bertie__tls13formats__handshake_data__HandshakeData_c(fin) = bertie__tls13formats__handshake_data__impl__HandshakeData__as_handshake_message(
         finished,
         bertie__tls13formats__handshake_data__HandshakeType_HandshakeType_Finished_c(

         )
       ) in fin
       else bertie__tls13utils__t_Bytes_err().

event Reached_bertie__tls13formats__parse_server_certificate.
letfun bertie__tls13formats__parse_server_certificate(
         certificate : bertie__tls13formats__handshake_data__t_HandshakeData
       ) =
       event Reached_bertie__tls13formats__parse_server_certificate;
       let bertie__tls13formats__handshake_data__HandshakeData_c(sc) = bertie__tls13formats__handshake_data__impl__HandshakeData__as_handshake_message(
         certificate,
         bertie__tls13formats__handshake_data__HandshakeType_HandshakeType_Certificate_c(

         )
       ) in (
         let next = 0 in
         let creqlen = bertie__tls13utils__length_u8_encoded(
           core__ops__index__Index_f_index(
             sc,
             core__ops__range__Range_c(
               4,bertie__tls13utils__impl__Bytes__len(sc)
             )
           )
         ) in (
           let next =
             core__ops__arith__Add__add(
               core__ops__arith__Add__add(next, 1), creqlen
             )
            in
           let wildcard29: bitstring = bertie__tls13utils__check_length_encoding_u24(
             bertie__tls13utils__impl__Bytes__raw_slice(
               sc,
               core__ops__range__Range_c(
                 next,bertie__tls13utils__impl__Bytes__len(sc)
               )
             )
           ) in (
             let next = core__ops__arith__Add__add(next, 3) in
             let crtlen = bertie__tls13utils__length_u24_encoded(
               bertie__tls13utils__impl__Bytes__raw_slice(
                 sc,
                 core__ops__range__Range_c(
                   next,bertie__tls13utils__impl__Bytes__len(sc)
                 )
               )
             ) in (
               let next = core__ops__arith__Add__add(next, 3) in
               let crt =
                 bertie__tls13utils__impl__Bytes__slice_range(
                   sc,
                   core__ops__range__Range_c(
                     next,core__ops__arith__Add__add(next, crtlen)
                   )
                 )
                in
               let next = core__ops__arith__Add__add(next, crtlen) in
               let v__extlen = bertie__tls13utils__length_u16_encoded(
                 core__ops__index__Index_f_index(
                   sc,
                   core__ops__range__Range_c(
                     next,bertie__tls13utils__impl__Bytes__len(sc)
                   )
                 )
               ) in crt
               else bertie__tls13utils__t_Bytes_err()
             )
             else bertie__tls13utils__t_Bytes_err()
           )
           else bertie__tls13utils__t_Bytes_err()
         )
         else bertie__tls13utils__t_Bytes_err()
       )
       else bertie__tls13utils__t_Bytes_err().

event Reached_bertie__tls13formats__parse_server_hello.
letfun bertie__tls13formats__parse_server_hello(
         algs : bertie__tls13crypto__t_Algorithms,
         server_hello : bertie__tls13formats__handshake_data__t_HandshakeData
       ) =
       event Reached_bertie__tls13formats__parse_server_hello;
       let bertie__tls13formats__handshake_data__HandshakeData_c(server_hello) = bertie__tls13formats__handshake_data__impl__HandshakeData__as_handshake_message(
         server_hello,
         bertie__tls13formats__handshake_data__HandshakeType_HandshakeType_ServerHello_c(

         )
       ) in (
         let ver = bertie__tls13utils__bytes2(3, 3) in
         let cip = bertie__tls13crypto__impl__Algorithms__ciphersuite(algs) in (
           let comp = bertie__tls13utils__bytes1(0) in
           let next = 0 in
           let wildcard36: bitstring =
             let wildcard35: bitstring = bertie__tls13utils__check_eq(
               ver,
               bertie__tls13utils__impl__Bytes__slice_range(
                 server_hello,
                 core__ops__range__Range_c(
                   next,core__ops__arith__Add__add(next, 2)
                 )
               )
             ) in ()
             else bitstring_err()
            in
           let next = core__ops__arith__Add__add(next, 2) in
           let srand =
             bertie__tls13utils__impl__Bytes__slice_range(
               server_hello,
               core__ops__range__Range_c(
                 next,core__ops__arith__Add__add(next, 32)
               )
             )
            in
           let next = core__ops__arith__Add__add(next, 32) in
           let sidlen = bertie__tls13utils__length_u8_encoded(
             core__ops__index__Index_f_index(
               server_hello,
               core__ops__range__Range_c(
                 next,bertie__tls13utils__impl__Bytes__len(server_hello)
               )
             )
           ) in (
             let next =
               core__ops__arith__Add__add(
                 core__ops__arith__Add__add(next, 1), sidlen
               )
              in
             let wildcard34: bitstring =
               let wildcard33: bitstring = bertie__tls13utils__check_eq(
                 cip,
                 bertie__tls13utils__impl__Bytes__slice_range(
                   server_hello,
                   core__ops__range__Range_c(
                     next,core__ops__arith__Add__add(next, 2)
                   )
                 )
               ) in ()
               else bitstring_err()
              in
             let next = core__ops__arith__Add__add(next, 2) in
             let wildcard32: bitstring =
               let wildcard31: bitstring = bertie__tls13utils__check_eq(
                 comp,
                 bertie__tls13utils__impl__Bytes__slice_range(
                   server_hello,
                   core__ops__range__Range_c(
                     next,core__ops__arith__Add__add(next, 1)
                   )
                 )
               ) in ()
               else bitstring_err()
              in
             let next = core__ops__arith__Add__add(next, 1) in
             let wildcard30: bitstring = bertie__tls13utils__check_length_encoding_u16(
               bertie__tls13utils__impl__Bytes__slice_range(
                 server_hello,
                 core__ops__range__Range_c(
                   next,bertie__tls13utils__impl__Bytes__len(server_hello)
                 )
               )
             ) in (
               let next = core__ops__arith__Add__add(next, 2) in
               let gy = bertie__tls13formats__check_server_extensions(
                 algs,
                 core__ops__index__Index_f_index(
                   server_hello,
                   core__ops__range__Range_c(
                     next,bertie__tls13utils__impl__Bytes__len(server_hello)
                   )
                 )
               ) in let Some(bertie__tls13utils__t_Bytes_to_bitstring(gy)) = gy in (
                 srand, gy
               )
               else bitstring_err()
               else bitstring_err()
             )
             else bitstring_err()
           )
           else bitstring_err()
         )
         else bitstring_err()
       )
       else bitstring_err().

event Reached_bertie__tls13formats__server_certificate.
letfun bertie__tls13formats__server_certificate(
         v__algs : bertie__tls13crypto__t_Algorithms,
         cert : bertie__tls13utils__t_Bytes
       ) =
       event Reached_bertie__tls13formats__server_certificate;
       let creq = bertie__tls13utils__encode_length_u8([]) in let crt = bertie__tls13utils__encode_length_u24(
         cert
       ) in let ext = bertie__tls13utils__encode_length_u16(
         bertie__tls13utils__impl__Bytes__new(())
       ) in let crts = bertie__tls13utils__encode_length_u24(
         bertie__tls13utils__impl__Bytes__concat(crt, ext)
       ) in bertie__tls13formats__handshake_data__impl__HandshakeData__from_bytes(
         bertie__tls13formats__handshake_data__HandshakeType_HandshakeType_Certificate_c(

         ),
         bertie__tls13utils__impl__Bytes__concat(creq, crts)
       )
       else bertie__tls13formats__handshake_data__t_HandshakeData_err()
       else bertie__tls13formats__handshake_data__t_HandshakeData_err()
       else bertie__tls13formats__handshake_data__t_HandshakeData_err()
       else bertie__tls13formats__handshake_data__t_HandshakeData_err().

event Reached_bertie__tls13formats__server_hello.
letfun bertie__tls13formats__server_hello(
         algs : bertie__tls13crypto__t_Algorithms,
         sr : bertie__tls13utils__t_Bytes,
         sid : bertie__tls13utils__t_Bytes,
         gy : bertie__tls13utils__t_Bytes
       ) =
       event Reached_bertie__tls13formats__server_hello;
       let ver = bertie__tls13utils__bytes2(3, 3) in
       let sid = bertie__tls13utils__encode_length_u8(
         bertie__tls13utils__impl__Bytes__as_raw(sid)
       ) in let cip = bertie__tls13crypto__impl__Algorithms__ciphersuite(algs) in (
         let comp = bertie__tls13utils__bytes1(0) in
         let ks = bertie__tls13formats__server_key_shares(algs, gy) in let sv = bertie__tls13formats__server_supported_version(
           algs
         ) in (
           let exts = bertie__tls13utils__impl__Bytes__concat(ks, sv) in
           let exts =
             let (=true) = bertie__tls13crypto__impl__Algorithms__psk_mode(algs) in let hoist50 = bertie__tls13formats__server_pre_shared_key(
               algs
             ) in (
               let hoist51 =
                 bertie__tls13utils__impl__Bytes__concat(exts, hoist50)
                in
               hoist51
             )
             else bertie__tls13utils__t_Bytes_err()
             else let (=false) = bertie__tls13crypto__impl__Algorithms__psk_mode(
               algs
             ) in exts
            in
           let encoded_extensions = bertie__tls13utils__encode_length_u16(exts) in (
             let len =
               core__ops__arith__Add__add(
                 bertie__tls13utils__impl__Bytes__len(ver),
                 bertie__tls13utils__impl__Bytes__len(sr)
               )
              in
             let len =
               core__ops__arith__Add__add(
                 len, bertie__tls13utils__impl__Bytes__len(sid)
               )
              in
             let len =
               core__ops__arith__Add__add(
                 len, bertie__tls13utils__impl__Bytes__len(cip)
               )
              in
             let len =
               core__ops__arith__Add__add(
                 len, bertie__tls13utils__impl__Bytes__len(comp)
               )
              in
             let len =
               core__ops__arith__Add__add(
                 len, bertie__tls13utils__impl__Bytes__len(encoded_extensions)
               )
              in
             let v_out = bertie__tls13utils__impl__Bytes__new_alloc(len) in
             let v_out = bertie__tls13utils__impl__Bytes__append(v_out, ver) in
             let v_out = bertie__tls13utils__impl__Bytes__append(v_out, sr) in
             let v_out = bertie__tls13utils__impl__Bytes__append(v_out, sid) in
             let v_out = bertie__tls13utils__impl__Bytes__append(v_out, cip) in
             let v_out = bertie__tls13utils__impl__Bytes__append(v_out, comp) in
             let v_out =
               bertie__tls13utils__impl__Bytes__append(v_out, encoded_extensions
               )
              in
             let hoist52 = v_out in
             let hoist53 =
               bertie__tls13formats__handshake_data__impl__HandshakeData__from_bytes(
                 bertie__tls13formats__handshake_data__HandshakeType_HandshakeType_ServerHello_c(

                 ),
                 hoist52
               )
              in
             let sh = hoist53 in sh
             else bertie__tls13formats__handshake_data__t_HandshakeData_err()
           )
           else bertie__tls13formats__handshake_data__t_HandshakeData_err()
         )
         else bertie__tls13formats__handshake_data__t_HandshakeData_err()
         else bertie__tls13formats__handshake_data__t_HandshakeData_err()
       )
       else bertie__tls13formats__handshake_data__t_HandshakeData_err()
       else bertie__tls13formats__handshake_data__t_HandshakeData_err().

event Reached_bertie__tls13formats__set_client_hello_binder.
letfun bertie__tls13formats__set_client_hello_binder(
         ciphersuite : bertie__tls13crypto__t_Algorithms,
         binder : Option,
         client_hello : bertie__tls13formats__handshake_data__t_HandshakeData,
         trunc_len : Option
       ) =
       event Reached_bertie__tls13formats__set_client_hello_binder;
       let bertie__tls13formats__handshake_data__HandshakeData_c(ch) =
         client_hello
        in
       let chlen = bertie__tls13utils__impl__Bytes__len(ch) in
       let hlen =
         bertie__tls13crypto__impl__HashAlgorithm__hash_len(
           bertie__tls13crypto__impl__Algorithms__hash(ciphersuite)
         )
        in
       let (
         Some(bertie__tls13utils__t_Bytes_to_bitstring(m)),
         Some(nat_to_bitstring(trunc_len))
       ) = (binder, trunc_len) in (
         if
           core__cmp__PartialEq__eq(
               core__ops__arith__Sub_f_sub(chlen, hlen), trunc_len
             )
         then
           (bertie__tls13formats__handshake_data__HandshakeData_c(
              bertie__tls13utils__impl__Bytes__update_slice(
                ch, trunc_len, m, 0, hlen
              )
            ))
         else (bertie__tls13utils__tlserr(bertie__tls13utils__parse_failed(())))
       )
       else let (None(), None()) = (binder, trunc_len) in bertie__tls13formats__handshake_data__HandshakeData_c(
         ch
       )
       else let (wildcard38: bitstring, wildcard39: bitstring) = (
         binder, trunc_len
       ) in bertie__tls13utils__tlserr(bertie__tls13utils__parse_failed(())).

event Reached_bertie__tls13handshake__get_rsa_signature.
letfun bertie__tls13handshake__get_rsa_signature(
         cert : bertie__tls13utils__t_Bytes,
         sk : bertie__tls13utils__t_Bytes,
         sigval : bertie__tls13utils__t_Bytes,
         rng : impl_CryptoRng___RngCore
       ) =
       event Reached_bertie__tls13handshake__get_rsa_signature;
       let (
         cert_scheme: bertie__tls13crypto__t_SignatureScheme,
         cert_slice: bertie__tls13cert__t_CertificateKey
       ) = bertie__tls13cert__verification_key_from_cert(cert) in let pk = bertie__tls13cert__rsa_public_key(
         cert, cert_slice
       ) in (
         let
           (tmp0: impl_CryptoRng___RngCore, v_out: bertie__tls13utils__t_Bytes)
          =
           bertie__tls13crypto__sign_rsa(
             sk,
             accessor_bertie__tls13crypto__RsaVerificationKey_f_modulus(pk),
             accessor_bertie__tls13crypto__RsaVerificationKey_f_exponent(pk),
             cert_scheme,
             sigval,
             rng
           )
          in
         let rng = tmp0 in
         let hax_temp_output = v_out in
         (rng, hax_temp_output)
       )
       else bitstring_err()
       else bitstring_err().

event Reached_bertie__tls13crypto__impl__AeadKeyIV__new.
letfun bertie__tls13crypto__impl__AeadKeyIV__new(
         key : bertie__tls13crypto__t_AeadKey, iv : bertie__tls13utils__t_Bytes
       ) =
       event Reached_bertie__tls13crypto__impl__AeadKeyIV__new;
       bertie__tls13crypto__AeadKeyIV_c(key,iv).

event Reached_bertie__tls13formats__impl__Transcript__add.
letfun bertie__tls13formats__impl__Transcript__add(
         self : bertie__tls13formats__t_Transcript,
         msg : bertie__tls13formats__handshake_data__t_HandshakeData
       ) =
       event Reached_bertie__tls13formats__impl__Transcript__add;
       let self =
         bertie__tls13formats__t_Transcript(

             bertie__tls13formats__handshake_data__impl__HandshakeData__concat(
               accessor_bertie__tls13formats__Transcript_f_transcript(self), msg
             )

         )
        in
       self.

event Reached_bertie__tls13formats__impl__Transcript__new.
letfun bertie__tls13formats__impl__Transcript__new(
         hash_algorithm : bertie__tls13crypto__t_HashAlgorithm
       ) =
       event Reached_bertie__tls13formats__impl__Transcript__new;
       bertie__tls13formats__Transcript_c(
         hash_algorithm
         ,
           bertie__tls13formats__handshake_data__HandshakeData_c(
             bertie__tls13utils__impl__Bytes__new(())
           )

       ).

event Reached_bertie__tls13formats__impl__Transcript__transcript_hash.
letfun bertie__tls13formats__impl__Transcript__transcript_hash(
         self : bertie__tls13formats__t_Transcript
       ) =
       event Reached_bertie__tls13formats__impl__Transcript__transcript_hash;
       let th = bertie__tls13crypto__impl__HashAlgorithm__hash(
         accessor_bertie__tls13formats__Transcript_f_hash_algorithm(self),
         accessor_bertie__tls13formats__handshake_data__HandshakeData_0(
           accessor_bertie__tls13formats__Transcript_f_transcript(self)
         )
       ) in th
       else bertie__tls13utils__t_Bytes_err().

event Reached_bertie__tls13formats__impl__Transcript__transcript_hash_without_client_hello.
letfun bertie__tls13formats__impl__Transcript__transcript_hash_without_client_hello(
         self : bertie__tls13formats__t_Transcript,
         client_hello : bertie__tls13formats__handshake_data__t_HandshakeData,
         trunc_len : nat
       ) =
       event Reached_bertie__tls13formats__impl__Transcript__transcript_hash_without_client_hello;
       let bertie__tls13formats__handshake_data__HandshakeData_c(ch) =
         client_hello
        in
       bertie__tls13crypto__impl__HashAlgorithm__hash(
         accessor_bertie__tls13formats__Transcript_f_hash_algorithm(self),
         bertie__tls13utils__impl__Bytes__concat(
           accessor_bertie__tls13formats__handshake_data__HandshakeData_0(
             accessor_bertie__tls13formats__Transcript_f_transcript(self)
           ),
           bertie__tls13utils__impl__Bytes__slice_range(
             accessor_bertie__tls13formats__handshake_data__HandshakeData_0(
               client_hello
             ),
             core__ops__range__Range_c(0,trunc_len)
           )
         )
       ).

event Reached_bertie__tls13handshake__derive_aead_key_iv.
letfun bertie__tls13handshake__derive_aead_key_iv(
         hash_algorithm : bertie__tls13crypto__t_HashAlgorithm,
         aead_algorithm : bertie__tls13crypto__t_AeadAlgorithm,
         key : bertie__tls13utils__t_Bytes
       ) =
       event Reached_bertie__tls13handshake__derive_aead_key_iv;
       let sender_write_key = bertie__tls13handshake__hkdf_expand_label(
         hash_algorithm,
         key,
         bertie__tls13utils__bytes(bertie__tls13formats__v_LABEL_KEY),
         bertie__tls13utils__impl__Bytes__new(()),
         bertie__tls13crypto__impl__AeadAlgorithm__key_len(aead_algorithm)
       ) in let sender_write_iv = bertie__tls13handshake__hkdf_expand_label(
         hash_algorithm,
         key,
         bertie__tls13utils__bytes(bertie__tls13formats__v_LABEL_IV),
         bertie__tls13utils__impl__Bytes__new(()),
         bertie__tls13crypto__impl__AeadAlgorithm__iv_len(aead_algorithm)
       ) in bertie__tls13crypto__impl__AeadKeyIV__new(
         bertie__tls13crypto__impl__AeadKey__new(
           sender_write_key, aead_algorithm
         ),
         sender_write_iv
       )
       else bertie__tls13crypto__t_AeadKeyIV_err()
       else bertie__tls13crypto__t_AeadKeyIV_err().

event Reached_bertie__tls13handshake__derive_0rtt_keys.
letfun bertie__tls13handshake__derive_0rtt_keys(
         hash_algorithm : bertie__tls13crypto__t_HashAlgorithm,
         aead_algoorithm : bertie__tls13crypto__t_AeadAlgorithm,
         key : bertie__tls13utils__t_Bytes,
         tx : bertie__tls13utils__t_Bytes
       ) =
       event Reached_bertie__tls13handshake__derive_0rtt_keys;
       let early_secret = bertie__tls13crypto__hkdf_extract(
         hash_algorithm, key, bertie__tls13crypto__zero_key(hash_algorithm)
       ) in let client_early_traffic_secret = bertie__tls13handshake__derive_secret(
         hash_algorithm,
         early_secret,
         bertie__tls13utils__bytes(bertie__tls13formats__v_LABEL_C_E_TRAFFIC),
         tx
       ) in let early_exporter_master_secret = bertie__tls13handshake__derive_secret(
         hash_algorithm,
         early_secret,
         bertie__tls13utils__bytes(bertie__tls13formats__v_LABEL_E_EXP_MASTER),
         tx
       ) in let sender_write_key_iv = bertie__tls13handshake__derive_aead_key_iv(
         hash_algorithm, aead_algoorithm, client_early_traffic_secret
       ) in (sender_write_key_iv, early_exporter_master_secret)
       else bitstring_err()
       else bitstring_err()
       else bitstring_err()
       else bitstring_err().

event Reached_bertie__tls13handshake__derive_app_keys.
letfun bertie__tls13handshake__derive_app_keys(
         ha : bertie__tls13crypto__t_HashAlgorithm,
         ae : bertie__tls13crypto__t_AeadAlgorithm,
         master_secret : bertie__tls13utils__t_Bytes,
         tx : bertie__tls13utils__t_Bytes
       ) =
       event Reached_bertie__tls13handshake__derive_app_keys;
       let client_application_traffic_secret_0_ = bertie__tls13handshake__derive_secret(
         ha,
         master_secret,
         bertie__tls13utils__bytes(bertie__tls13formats__v_LABEL_C_AP_TRAFFIC),
         tx
       ) in let server_application_traffic_secret_0_ = bertie__tls13handshake__derive_secret(
         ha,
         master_secret,
         bertie__tls13utils__bytes(bertie__tls13formats__v_LABEL_S_AP_TRAFFIC),
         tx
       ) in let client_write_key_iv = bertie__tls13handshake__derive_aead_key_iv(
         ha, ae, client_application_traffic_secret_0_
       ) in let server_write_key_iv = bertie__tls13handshake__derive_aead_key_iv(
         ha, ae, server_application_traffic_secret_0_
       ) in let exporter_master_secret = bertie__tls13handshake__derive_secret(
         ha,
         master_secret,
         bertie__tls13utils__bytes(bertie__tls13formats__v_LABEL_EXP_MASTER),
         tx
       ) in (client_write_key_iv, server_write_key_iv, exporter_master_secret)
       else bitstring_err()
       else bitstring_err()
       else bitstring_err()
       else bitstring_err()
       else bitstring_err().

event Reached_bertie__tls13handshake__derive_hk_ms.
letfun bertie__tls13handshake__derive_hk_ms(
         ha : bertie__tls13crypto__t_HashAlgorithm,
         ae : bertie__tls13crypto__t_AeadAlgorithm,
         shared_secret : bertie__tls13utils__t_Bytes,
         psko : Option,
         transcript_hash : bertie__tls13utils__t_Bytes
       ) =
       event Reached_bertie__tls13handshake__derive_hk_ms;
       let psk =
         let Some(bertie__tls13utils__t_Bytes_to_bitstring(k)) = psko in k
         else bertie__tls13crypto__zero_key(ha)
        in
       let early_secret = bertie__tls13crypto__hkdf_extract(
         ha, psk, bertie__tls13crypto__zero_key(ha)
       ) in let digest_emp = bertie__tls13handshake__hash_empty(ha) in let derived_secret = bertie__tls13handshake__derive_secret(
         ha,
         early_secret,
         bertie__tls13utils__bytes(bertie__tls13formats__v_LABEL_DERIVED),
         digest_emp
       ) in let handshake_secret = bertie__tls13crypto__hkdf_extract(
         ha, shared_secret, derived_secret
       ) in let client_handshake_traffic_secret = bertie__tls13handshake__derive_secret(
         ha,
         handshake_secret,
         bertie__tls13utils__bytes(bertie__tls13formats__v_LABEL_C_HS_TRAFFIC),
         transcript_hash
       ) in let server_handshake_traffic_secret = bertie__tls13handshake__derive_secret(
         ha,
         handshake_secret,
         bertie__tls13utils__bytes(bertie__tls13formats__v_LABEL_S_HS_TRAFFIC),
         transcript_hash
       ) in let client_finished_key = bertie__tls13handshake__derive_finished_key(
         ha, client_handshake_traffic_secret
       ) in let server_finished_key = bertie__tls13handshake__derive_finished_key(
         ha, server_handshake_traffic_secret
       ) in let client_write_key_iv = bertie__tls13handshake__derive_aead_key_iv(
         ha, ae, client_handshake_traffic_secret
       ) in let server_write_key_iv = bertie__tls13handshake__derive_aead_key_iv(
         ha, ae, server_handshake_traffic_secret
       ) in let master_secret___ = bertie__tls13handshake__derive_secret(
         ha,
         handshake_secret,
         bertie__tls13utils__bytes(bertie__tls13formats__v_LABEL_DERIVED),
         digest_emp
       ) in let master_secret = bertie__tls13crypto__hkdf_extract(
         ha, bertie__tls13crypto__zero_key(ha), master_secret___
       ) in (
         client_write_key_iv,
         server_write_key_iv,
         client_finished_key,
         server_finished_key,
         master_secret
       )
       else bitstring_err()
       else bitstring_err()
       else bitstring_err()
       else bitstring_err()
       else bitstring_err()
       else bitstring_err()
       else bitstring_err()
       else bitstring_err()
       else bitstring_err()
       else bitstring_err()
       else bitstring_err()
       else bitstring_err().

event Reached_bertie__tls13handshake__algs_post_client_finished.
letfun bertie__tls13handshake__algs_post_client_finished(
         st : bertie__tls13handshake__t_ClientPostClientFinished
       ) =
       event Reached_bertie__tls13handshake__algs_post_client_finished;
       accessor_bertie__tls13handshake__ClientPostClientFinished_2(st).

event Reached_bertie__tls13handshake__algs_post_client_hello.
letfun bertie__tls13handshake__algs_post_client_hello(
         st : bertie__tls13handshake__t_ClientPostClientHello
       ) =
       event Reached_bertie__tls13handshake__algs_post_client_hello;
       accessor_bertie__tls13handshake__ClientPostClientHello_1(st).

event Reached_bertie__tls13handshake__algs_post_server_hello.
letfun bertie__tls13handshake__algs_post_server_hello(
         st : bertie__tls13handshake__t_ClientPostServerHello
       ) =
       event Reached_bertie__tls13handshake__algs_post_server_hello;
       accessor_bertie__tls13handshake__ClientPostServerHello_2(st).

event Reached_bertie__tls13handshake__get_client_finished.
letfun bertie__tls13handshake__get_client_finished(
         handshake_state : bertie__tls13handshake__t_ClientPostServerFinished
       ) =
       event Reached_bertie__tls13handshake__get_client_finished;
       let
         bertie__tls13handshake__ClientPostServerFinished_c(
           client_random,
           server_random,
           algorithms,
           master_secret,
           client_finished_key,
           transcript
         )
        = handshake_state in
       let transcript_hash = bertie__tls13formats__impl__Transcript__transcript_hash(
         transcript
       ) in let verify_data = bertie__tls13crypto__hmac_tag(
         bertie__tls13crypto__impl__Algorithms__hash(algorithms),
         client_finished_key,
         transcript_hash
       ) in let client_finished = bertie__tls13formats__finished(verify_data) in (
         let transcript =
           bertie__tls13formats__impl__Transcript__add(
             transcript, client_finished
           )
          in
         let transcript_hash = bertie__tls13formats__impl__Transcript__transcript_hash(
           transcript
         ) in let resumption_master_secret = bertie__tls13handshake__derive_rms(
           bertie__tls13crypto__impl__Algorithms__hash(algorithms),
           master_secret,
           transcript_hash
         ) in (
           client_finished,
           bertie__tls13handshake__ClientPostClientFinished_c(
             client_random,
             server_random,
             algorithms,
             resumption_master_secret,
             transcript
           )
         )
         else bitstring_err()
         else bitstring_err()
       )
       else bitstring_err()
       else bitstring_err()
       else bitstring_err().

event Reached_bertie__tls13handshake__get_server_signature_no_psk.
letfun bertie__tls13handshake__get_server_signature_no_psk(
         state : bertie__tls13handshake__t_ServerPostServerHello,
         rng : impl_CryptoRng___RngCore
       ) =
       event Reached_bertie__tls13handshake__get_server_signature_no_psk;
       let ee = bertie__tls13formats__encrypted_extensions(
         accessor_bertie__tls13handshake__ServerPostServerHello_f_ciphersuite(
           state
         )
       ) in (
         let transcript =
           bertie__tls13formats__impl__Transcript__add(
             accessor_bertie__tls13handshake__ServerPostServerHello_f_transcript(
               state
             ),
             ee
           )
          in
         let sc = bertie__tls13formats__server_certificate(
           accessor_bertie__tls13handshake__ServerPostServerHello_f_ciphersuite(
             state
           ),
           accessor_bertie__server__ServerInfo_f_cert(
             accessor_bertie__tls13handshake__ServerPostServerHello_f_server(
               state
             )
           )
         ) in (
           let transcript =
             bertie__tls13formats__impl__Transcript__add(transcript, sc)
            in
           let transcript_hash = bertie__tls13formats__impl__Transcript__transcript_hash(
             transcript
           ) in (
             let sigval =
               bertie__tls13utils__impl__Bytes__concat(
                 bertie__tls13utils__impl__Bytes__from_slice(
                   bertie__tls13formats__v_PREFIX_SERVER_SIGNATURE
                 ),
                 transcript_hash
               )
              in
             let
               (
                 rng: impl_CryptoRng___RngCore,
                 hoist54: bertie__tls13utils__t_Bytes
               )
              =
               let bertie__tls13crypto__SignatureScheme_SignatureScheme_EcdsaSecp256r1Sha256_c(

               ) = bertie__tls13crypto__impl__Algorithms__signature(
                 accessor_bertie__tls13handshake__ServerPostServerHello_f_ciphersuite(
                   state
                 )
               ) in (
                 let
                   (
                     tmp0: impl_CryptoRng___RngCore,
                     v_out: bertie__tls13utils__t_Bytes
                   )
                  =
                   bertie__tls13crypto__sign(
                     bertie__tls13crypto__impl__Algorithms__signature(
                       accessor_bertie__tls13handshake__ServerPostServerHello_f_ciphersuite(
                         state
                       )
                     ),
                     accessor_bertie__server__ServerInfo_f_sk(
                       accessor_bertie__tls13handshake__ServerPostServerHello_f_server(
                         state
                       )
                     ),
                     sigval,
                     rng
                   )
                  in
                 let rng = tmp0 in
                 (rng, v_out)
               )
               else let bertie__tls13crypto__SignatureScheme_SignatureScheme_RsaPssRsaSha256_c(

               ) = bertie__tls13crypto__impl__Algorithms__signature(
                 accessor_bertie__tls13handshake__ServerPostServerHello_f_ciphersuite(
                   state
                 )
               ) in (
                 let
                   (
                     tmp0: impl_CryptoRng___RngCore,
                     v_out: bertie__tls13utils__t_Bytes
                   )
                  =
                   bertie__tls13handshake__get_rsa_signature(
                     accessor_bertie__server__ServerInfo_f_cert(
                       accessor_bertie__tls13handshake__ServerPostServerHello_f_server(
                         state
                       )
                     ),
                     accessor_bertie__server__ServerInfo_f_sk(
                       accessor_bertie__tls13handshake__ServerPostServerHello_f_server(
                         state
                       )
                     ),
                     sigval,
                     rng
                   )
                  in
                 let rng = tmp0 in
                 (rng, v_out)
               )
               else let bertie__tls13crypto__SignatureScheme_SignatureScheme_ED25519_c(

               ) = bertie__tls13crypto__impl__Algorithms__signature(
                 accessor_bertie__tls13handshake__ServerPostServerHello_f_ciphersuite(
                   state
                 )
               ) in (rng, bertie__tls13utils__t_Bytes_err())
              in
             let sig = hoist54 in let scv = bertie__tls13formats__certificate_verify(
               accessor_bertie__tls13handshake__ServerPostServerHello_f_ciphersuite(
                 state
               ),
               sig
             ) in (
               let transcript =
                 bertie__tls13formats__impl__Transcript__add(transcript, scv)
                in
               let hax_temp_output =
                 (
                   ee,
                   sc,
                   scv,
                   bertie__tls13handshake__ServerPostCertificateVerify_c(
                     accessor_bertie__tls13handshake__ServerPostServerHello_f_client_random(
                       state
                     ),
                     accessor_bertie__tls13handshake__ServerPostServerHello_f_server_random(
                       state
                     ),
                     accessor_bertie__tls13handshake__ServerPostServerHello_f_ciphersuite(
                       state
                     ),
                     accessor_bertie__tls13handshake__ServerPostServerHello_f_master_secret(
                       state
                     ),
                     accessor_bertie__tls13handshake__ServerPostServerHello_f_cfk(
                       state
                     ),
                     accessor_bertie__tls13handshake__ServerPostServerHello_f_sfk(
                       state
                     ),
                     transcript
                   )
                 )
                in
               (rng, hax_temp_output)
             )
             else bitstring_err()
             else bitstring_err()
           )
           else bitstring_err()
         )
         else bitstring_err()
       )
       else bitstring_err().

event Reached_bertie__tls13handshake__get_server_signature.
letfun bertie__tls13handshake__get_server_signature(
         state : bertie__tls13handshake__t_ServerPostServerHello,
         rng : impl_CryptoRng___RngCore
       ) =
       event Reached_bertie__tls13handshake__get_server_signature;
       let (rng: impl_CryptoRng___RngCore, hax_temp_output: bitstring) =
         if
           core__ops__bit__Not__v_not(
               bertie__tls13crypto__impl__Algorithms__psk_mode(
                 accessor_bertie__tls13handshake__ServerPostServerHello_f_ciphersuite(
                   state
                 )
               )
             )
         then
           (let (tmp0: impl_CryptoRng___RngCore, v_out: bitstring) =
              bertie__tls13handshake__get_server_signature_no_psk(state, rng)
             in
            let rng = tmp0 in
            (rng, v_out))
         else ((rng, bitstring_err()))
        in
       (rng, hax_temp_output).

event Reached_bertie__tls13handshake__get_skip_server_signature_no_psk.
letfun bertie__tls13handshake__get_skip_server_signature_no_psk(
         st : bertie__tls13handshake__t_ServerPostServerHello
       ) =
       event Reached_bertie__tls13handshake__get_skip_server_signature_no_psk;
       let
         bertie__tls13handshake__ServerPostServerHello_c(
           cr,sr,algs,server,ms,cfk,sfk,tx
         )
        = st in
       let ee = bertie__tls13formats__encrypted_extensions(algs) in (
         let tx = bertie__tls13formats__impl__Transcript__add(tx, ee) in
         (
           ee,
           bertie__tls13handshake__ServerPostCertificateVerify_c(
             cr, sr, algs, ms, cfk, sfk, tx
           )
         )
       )
       else bitstring_err().

event Reached_bertie__tls13handshake__get_skip_server_signature.
letfun bertie__tls13handshake__get_skip_server_signature(
         st : bertie__tls13handshake__t_ServerPostServerHello
       ) =
       event Reached_bertie__tls13handshake__get_skip_server_signature;
       let
         bertie__tls13handshake__ServerPostServerHello_c(
           cr,sr,algs,server,ms,cfk,sfk,tx
         )
        = st in
       if bertie__tls13crypto__impl__Algorithms__psk_mode(algs)
       then (bertie__tls13handshake__get_skip_server_signature_no_psk(st))
       else (bitstring_err()).

event Reached_bertie__tls13handshake__put_client_finished.
letfun bertie__tls13handshake__put_client_finished(
         cfin : bertie__tls13formats__handshake_data__t_HandshakeData,
         st : bertie__tls13handshake__t_ServerPostServerFinished
       ) =
       event Reached_bertie__tls13handshake__put_client_finished;
       let
         bertie__tls13handshake__ServerPostServerFinished_c(
           cr, sr, algs, ms, cfk, tx
         )
        = st in
       let th = bertie__tls13formats__impl__Transcript__transcript_hash(tx) in let vd = bertie__tls13formats__parse_finished(
         cfin
       ) in let wildcard40: bitstring = bertie__tls13crypto__hmac_verify(
         bertie__tls13crypto__impl__Algorithms__hash(algs), cfk, th, vd
       ) in (
         let tx = bertie__tls13formats__impl__Transcript__add(tx, cfin) in
         let th = bertie__tls13formats__impl__Transcript__transcript_hash(tx) in let rms = bertie__tls13handshake__derive_rms(
           bertie__tls13crypto__impl__Algorithms__hash(algs), ms, th
         ) in bertie__tls13handshake__ServerPostClientFinished_c(
           cr, sr, algs, rms, tx
         )
         else bertie__tls13handshake__t_ServerPostClientFinished_err()
         else bertie__tls13handshake__t_ServerPostClientFinished_err()
       )
       else bertie__tls13handshake__t_ServerPostClientFinished_err()
       else bertie__tls13handshake__t_ServerPostClientFinished_err()
       else bertie__tls13handshake__t_ServerPostClientFinished_err().

event Reached_bertie__tls13handshake__put_psk_skip_server_signature.
letfun bertie__tls13handshake__put_psk_skip_server_signature(
         encrypted_extensions : bertie__tls13formats__handshake_data__t_HandshakeData,
         handshake_state : bertie__tls13handshake__t_ClientPostServerHello
       ) =
       event Reached_bertie__tls13handshake__put_psk_skip_server_signature;
       let
         bertie__tls13handshake__ClientPostServerHello_c(
           client_random,
           server_random,
           algorithms,
           master_secret,
           client_finished_key,
           server_finished_key,
           transcript
         )
        = handshake_state in
       if bertie__tls13crypto__impl__Algorithms__psk_mode(algorithms)
       then
         (let wildcard41: bitstring = bertie__tls13formats__parse_encrypted_extensions(
            algorithms, encrypted_extensions
          ) in (
            let transcript =
              bertie__tls13formats__impl__Transcript__add(
                transcript, encrypted_extensions
              )
             in
            bertie__tls13handshake__ClientPostCertificateVerify_c(
              client_random,
              server_random,
              algorithms,
              master_secret,
              client_finished_key,
              server_finished_key,
              transcript
            )
          )
          else bertie__tls13handshake__t_ClientPostCertificateVerify_err())
       else (bertie__tls13handshake__t_ClientPostCertificateVerify_err()).

event Reached_bertie__tls13handshake__put_server_signature.
letfun bertie__tls13handshake__put_server_signature(
         encrypted_extensions : bertie__tls13formats__handshake_data__t_HandshakeData,
         server_certificate : bertie__tls13formats__handshake_data__t_HandshakeData,
         server_certificate_verify : bertie__tls13formats__handshake_data__t_HandshakeData,
         handshake_state : bertie__tls13handshake__t_ClientPostServerHello
       ) =
       event Reached_bertie__tls13handshake__put_server_signature;
       let
         bertie__tls13handshake__ClientPostServerHello_c(
           client_random,
           server_random,
           algorithms,
           master_secret,
           client_finished_key,
           server_finished_key,
           transcript
         )
        = handshake_state in
       if
         core__ops__bit__Not__v_not(
             bertie__tls13crypto__impl__Algorithms__psk_mode(algorithms)
           )
       then
         (let wildcard43: bitstring = bertie__tls13formats__parse_encrypted_extensions(
            algorithms, encrypted_extensions
          ) in (
            let transcript =
              bertie__tls13formats__impl__Transcript__add(
                transcript, encrypted_extensions
              )
             in
            let certificate = bertie__tls13formats__parse_server_certificate(
              server_certificate
            ) in (
              let transcript =
                bertie__tls13formats__impl__Transcript__add(
                  transcript, server_certificate
                )
               in
              let transcript_hash_server_certificate = bertie__tls13formats__impl__Transcript__transcript_hash(
                transcript
              ) in let spki = bertie__tls13cert__verification_key_from_cert(
                certificate
              ) in let cert_pk = bertie__tls13cert__cert_public_key(
                certificate, spki
              ) in let cert_signature = bertie__tls13formats__parse_certificate_verify(
                algorithms, server_certificate_verify
              ) in (
                let sigval =
                  bertie__tls13utils__impl__Bytes__concat(
                    bertie__tls13utils__impl__Bytes__from_slice(
                      bertie__tls13formats__v_PREFIX_SERVER_SIGNATURE
                    ),
                    transcript_hash_server_certificate
                  )
                 in
                let wildcard42: bitstring = bertie__tls13crypto__verify(
                  bertie__tls13crypto__impl__Algorithms__signature(algorithms),
                  cert_pk,
                  sigval,
                  cert_signature
                ) in (
                  let transcript =
                    bertie__tls13formats__impl__Transcript__add(
                      transcript, server_certificate_verify
                    )
                   in
                  bertie__tls13handshake__ClientPostCertificateVerify_c(
                    client_random,
                    server_random,
                    algorithms,
                    master_secret,
                    client_finished_key,
                    server_finished_key,
                    transcript
                  )
                )
                else bertie__tls13handshake__t_ClientPostCertificateVerify_err()
              )
              else bertie__tls13handshake__t_ClientPostCertificateVerify_err()
              else bertie__tls13handshake__t_ClientPostCertificateVerify_err()
              else bertie__tls13handshake__t_ClientPostCertificateVerify_err()
              else bertie__tls13handshake__t_ClientPostCertificateVerify_err()
            )
            else bertie__tls13handshake__t_ClientPostCertificateVerify_err()
          )
          else bertie__tls13handshake__t_ClientPostCertificateVerify_err())
       else (bertie__tls13handshake__t_ClientPostCertificateVerify_err()).

event Reached_bertie__tls13handshake__server_finish.
letfun bertie__tls13handshake__server_finish(
         cf : bertie__tls13formats__handshake_data__t_HandshakeData,
         st : bertie__tls13handshake__t_ServerPostServerFinished
       ) =
       event Reached_bertie__tls13handshake__server_finish;
       bertie__tls13handshake__put_client_finished(cf, st).

event Reached_bertie__tls13record__impl__DuplexCipherStateH__new.
letfun bertie__tls13record__impl__DuplexCipherStateH__new(
         sender_key_iv : bertie__tls13crypto__t_AeadKeyIV,
         sender_counter : nat,
         receiver_key_iv : bertie__tls13crypto__t_AeadKeyIV,
         receiver_counter : nat
       ) =
       event Reached_bertie__tls13record__impl__DuplexCipherStateH__new;
       bertie__tls13record__DuplexCipherStateH_c(
         sender_key_iv,sender_counter,receiver_key_iv,receiver_counter
       ).

event Reached_bertie__tls13handshake__get_server_hello.
letfun bertie__tls13handshake__get_server_hello(
         state : bertie__tls13handshake__t_ServerPostClientHello,
         rng : impl_CryptoRng___RngCore
       ) =
       event Reached_bertie__tls13handshake__get_server_hello;
       let server_random = rust_primitives__hax__repeat(0, 32) in
       let (tmp0: impl_CryptoRng___RngCore, tmp1: bitstring) =
         rand_core__RngCore_f_fill_bytes(rng, server_random)
        in
       let rng = tmp0 in
       let server_random = tmp1 in
       let wildcard44: bitstring = () in
       let (tmp0: impl_CryptoRng___RngCore, v_out: bitstring) =
         bertie__tls13crypto__kem_encap(
           accessor_bertie__tls13crypto__Algorithms_f_kem(
             accessor_bertie__tls13handshake__ServerPostClientHello_f_ciphersuite(
               state
             )
           ),
           accessor_bertie__tls13handshake__ServerPostClientHello_f_gx(state),
           rng
         )
        in
       let rng = tmp0 in
       let hoist55 = v_out in
       let (
         shared_secret: bertie__tls13utils__t_Bytes,
         gy: bertie__tls13utils__t_Bytes
       ) = hoist55 in let sh = bertie__tls13formats__server_hello(
         accessor_bertie__tls13handshake__ServerPostClientHello_f_ciphersuite(
           state
         ),
         bertie__tls13utils__t_Bytes_from_bitstring(server_random),
         accessor_bertie__tls13handshake__ServerPostClientHello_f_session_id(
           state
         ),
         gy
       ) in (
         let transcript =
           bertie__tls13formats__impl__Transcript__add(
             accessor_bertie__tls13handshake__ServerPostClientHello_f_transcript(
               state
             ),
             sh
           )
          in
         let transcript_hash = bertie__tls13formats__impl__Transcript__transcript_hash(
           transcript
         ) in let (
           chk: bertie__tls13crypto__t_AeadKeyIV,
           shk: bertie__tls13crypto__t_AeadKeyIV,
           cfk: bertie__tls13utils__t_Bytes,
           sfk: bertie__tls13utils__t_Bytes,
           ms: bertie__tls13utils__t_Bytes
         ) = bertie__tls13handshake__derive_hk_ms(
           accessor_bertie__tls13crypto__Algorithms_f_hash(
             accessor_bertie__tls13handshake__ServerPostClientHello_f_ciphersuite(
               state
             )
           ),
           accessor_bertie__tls13crypto__Algorithms_f_aead(
             accessor_bertie__tls13handshake__ServerPostClientHello_f_ciphersuite(
               state
             )
           ),
           shared_secret,
           accessor_bertie__server__ServerInfo_f_psk_opt(
             accessor_bertie__tls13handshake__ServerPostClientHello_f_server(
               state
             )
           ),
           transcript_hash
         ) in (
           let hax_temp_output =
             (
               sh,
               bertie__tls13record__impl__DuplexCipherStateH__new(shk, 0, chk, 0
               ),
               bertie__tls13handshake__ServerPostServerHello_c(

                   accessor_bertie__tls13handshake__ServerPostClientHello_f_client_randomness(
                     state
                   )

                 ,bertie__tls13utils__t_Bytes_from_bitstring(server_random)
                 ,
                   accessor_bertie__tls13handshake__ServerPostClientHello_f_ciphersuite(
                     state
                   )

                 ,
                   accessor_bertie__tls13handshake__ServerPostClientHello_f_server(
                     state
                   )

                 ,ms
                 ,cfk
                 ,sfk
                 ,transcript
               )
             )
            in
           (rng, hax_temp_output)
         )
         else bitstring_err()
         else bitstring_err()
       )
       else bitstring_err()
       else bitstring_err().

event Reached_bertie__tls13handshake__put_server_hello.
letfun bertie__tls13handshake__put_server_hello(
         handshake : bertie__tls13formats__handshake_data__t_HandshakeData,
         state : bertie__tls13handshake__t_ClientPostClientHello
       ) =
       event Reached_bertie__tls13handshake__put_server_hello;
       let
         bertie__tls13handshake__ClientPostClientHello_c(
           client_random, ciphersuite, sk, psk, tx
         )
        = state in
       let (sr: bertie__tls13utils__t_Bytes, ct: bertie__tls13utils__t_Bytes) = bertie__tls13formats__parse_server_hello(
         ciphersuite, handshake
       ) in (
         let tx = bertie__tls13formats__impl__Transcript__add(tx, handshake) in
         let shared_secret = bertie__tls13crypto__kem_decap(
           accessor_bertie__tls13crypto__Algorithms_f_kem(ciphersuite), ct, sk
         ) in let th = bertie__tls13formats__impl__Transcript__transcript_hash(
           tx
         ) in let (
           chk: bertie__tls13crypto__t_AeadKeyIV,
           shk: bertie__tls13crypto__t_AeadKeyIV,
           cfk: bertie__tls13utils__t_Bytes,
           sfk: bertie__tls13utils__t_Bytes,
           ms: bertie__tls13utils__t_Bytes
         ) = bertie__tls13handshake__derive_hk_ms(
           accessor_bertie__tls13crypto__Algorithms_f_hash(ciphersuite),
           accessor_bertie__tls13crypto__Algorithms_f_aead(ciphersuite),
           shared_secret,
           psk,
           th
         ) in (
           bertie__tls13record__impl__DuplexCipherStateH__new(chk, 0, shk, 0),
           bertie__tls13handshake__ClientPostServerHello_c(
             client_random, sr, ciphersuite, ms, cfk, sfk, tx
           )
         )
         else bitstring_err()
         else bitstring_err()
         else bitstring_err()
       )
       else bitstring_err().

event Reached_bertie__tls13handshake__client_set_params.
letfun bertie__tls13handshake__client_set_params(
         payload : bertie__tls13formats__handshake_data__t_HandshakeData,
         st : bertie__tls13handshake__t_ClientPostClientHello
       ) =
       event Reached_bertie__tls13handshake__client_set_params;
       bertie__tls13handshake__put_server_hello(payload, st).

event Reached_bertie__tls13record__client_cipher_state0.
letfun bertie__tls13record__client_cipher_state0(
         ae : bertie__tls13crypto__t_AeadAlgorithm,
         kiv : bertie__tls13crypto__t_AeadKeyIV,
         c : nat,
         k : bertie__tls13utils__t_Bytes
       ) =
       event Reached_bertie__tls13record__client_cipher_state0;
       bertie__tls13record__ClientCipherState0_c(ae, kiv, c, k).

event Reached_bertie__tls13handshake__compute_psk_binder_zero_rtt.
letfun bertie__tls13handshake__compute_psk_binder_zero_rtt(
         algs0 : bertie__tls13crypto__t_Algorithms,
         ch : bertie__tls13formats__handshake_data__t_HandshakeData,
         trunc_len : nat,
         psk : Option,
         tx : bertie__tls13formats__t_Transcript
       ) =
       event Reached_bertie__tls13handshake__compute_psk_binder_zero_rtt;
       let
         bertie__tls13crypto__Algorithms_c(ha,ae,v__sa,v__ks,psk_mode,zero_rtt)
        = algs0 in
       let (
         =true,
         Some(bertie__tls13utils__t_Bytes_to_bitstring(k)),
         wildcard45: bitstring
       ) = (psk_mode, psk, trunc_len) in let th_trunc = bertie__tls13formats__impl__Transcript__transcript_hash_without_client_hello(
         tx, ch, trunc_len
       ) in let mk = bertie__tls13handshake__derive_binder_key(ha, k) in let binder = bertie__tls13crypto__hmac_tag(
         ha, mk, th_trunc
       ) in let nch = bertie__tls13formats__set_client_hello_binder(
         algs0,
         Some(bertie__tls13utils__t_Bytes_to_bitstring(binder)),
         ch,
         Some(nat_to_bitstring(trunc_len))
       ) in (
         let tx_ch = bertie__tls13formats__impl__Transcript__add(tx, nch) in
         if zero_rtt
         then
           (let th = bertie__tls13formats__impl__Transcript__transcript_hash(
              tx_ch
            ) in let (
              aek: bertie__tls13crypto__t_AeadKeyIV,
              key: bertie__tls13utils__t_Bytes
            ) = bertie__tls13handshake__derive_0rtt_keys(ha, ae, k, th) in (
              let cipher0 =
                Some(
                  bertie__tls13record__t_ClientCipherState0_to_bitstring(
                    bertie__tls13record__client_cipher_state0(ae, aek, 0, key)
                  )
                )
               in
              (nch, cipher0, tx_ch)
            )
            else bitstring_err()
            else bitstring_err())
         else ((nch, None(), tx_ch))
       )
       else bitstring_err()
       else bitstring_err()
       else bitstring_err()
       else bitstring_err()
       else let (=false, None(), =0) = (psk_mode, psk, trunc_len) in (
         let tx_ch = bertie__tls13formats__impl__Transcript__add(tx, ch) in
         (ch, None(), tx_ch)
       )
       else bitstring_err().

event Reached_bertie__tls13handshake__build_client_hello.
letfun bertie__tls13handshake__build_client_hello(
         ciphersuite : bertie__tls13crypto__t_Algorithms,
         sn : bertie__tls13utils__t_Bytes,
         tkt : Option,
         psk : Option,
         rng : impl_CryptoRng___RngCore
       ) =
       event Reached_bertie__tls13handshake__build_client_hello;
       let tx =
         bertie__tls13formats__impl__Transcript__new(
           bertie__tls13crypto__impl__Algorithms__hash(ciphersuite)
         )
        in
       let client_random = rust_primitives__hax__repeat(0, 32) in
       let (tmp0: impl_CryptoRng___RngCore, tmp1: bitstring) =
         rand_core__RngCore_f_fill_bytes(rng, client_random)
        in
       let rng = tmp0 in
       let client_random = tmp1 in
       let wildcard46: bitstring = () in
       let (tmp0: impl_CryptoRng___RngCore, v_out: bitstring) =
         bertie__tls13crypto__kem_keygen(
           bertie__tls13crypto__impl__Algorithms__kem(ciphersuite), rng
         )
        in
       let rng = tmp0 in
       let hoist56 = v_out in
       let (
         kem_sk: bertie__tls13utils__t_Bytes,
         kem_pk: bertie__tls13utils__t_Bytes
       ) = hoist56 in let (
         client_hello: bertie__tls13formats__handshake_data__t_HandshakeData,
         trunc_len: nat
       ) = bertie__tls13formats__client_hello(
         ciphersuite,
         bertie__tls13utils__t_Bytes_from_bitstring(client_random),
         kem_pk,
         sn,
         tkt
       ) in let (
         nch: bertie__tls13formats__handshake_data__t_HandshakeData,
         cipher0: Option,
         tx_ch: bertie__tls13formats__t_Transcript
       ) = bertie__tls13handshake__compute_psk_binder_zero_rtt(
         ciphersuite, client_hello, trunc_len, psk, tx
       ) in (
         let hax_temp_output =
           (
             nch,
             cipher0,
             bertie__tls13handshake__ClientPostClientHello_c(
               bertie__tls13utils__t_Bytes_from_bitstring(client_random),
               ciphersuite,
               kem_sk,
               psk,
               tx_ch
             )
           )
          in
         (rng, hax_temp_output)
       )
       else bitstring_err()
       else bitstring_err()
       else bitstring_err().

event Reached_bertie__tls13handshake__client_init.
letfun bertie__tls13handshake__client_init(
         algs : bertie__tls13crypto__t_Algorithms,
         sn : bertie__tls13utils__t_Bytes,
         tkt : Option,
         psk : Option,
         rng : impl_CryptoRng___RngCore
       ) =
       event Reached_bertie__tls13handshake__client_init;
       let (tmp0: impl_CryptoRng___RngCore, v_out: bitstring) =
         bertie__tls13handshake__build_client_hello(algs, sn, tkt, psk, rng)
        in
       let rng = tmp0 in
       let hax_temp_output = v_out in
       (rng, hax_temp_output).

event Reached_bertie__tls13record__duplex_cipher_state1.
letfun bertie__tls13record__duplex_cipher_state1(
         ae : bertie__tls13crypto__t_AeadAlgorithm,
         kiv1 : bertie__tls13crypto__t_AeadKeyIV,
         c1 : nat,
         kiv2 : bertie__tls13crypto__t_AeadKeyIV,
         c2 : nat,
         k : bertie__tls13utils__t_Bytes
       ) =
       event Reached_bertie__tls13record__duplex_cipher_state1;
       bertie__tls13record__DuplexCipherState1_c(ae, kiv1, c1, kiv2, c2, k).

event Reached_bertie__tls13handshake__get_server_finished.
letfun bertie__tls13handshake__get_server_finished(
         st : bertie__tls13handshake__t_ServerPostCertificateVerify
       ) =
       event Reached_bertie__tls13handshake__get_server_finished;
       let
         bertie__tls13handshake__ServerPostCertificateVerify_c(
           cr, sr, algs, ms, cfk, sfk, tx
         )
        = st in
       let
         bertie__tls13crypto__Algorithms_c(
           ha,ae,v__sa,v__gn,v__psk_mode,v__zero_rtt
         )
        = algs in
       let th_scv = bertie__tls13formats__impl__Transcript__transcript_hash(tx) in let vd = bertie__tls13crypto__hmac_tag(
         ha, sfk, th_scv
       ) in let sfin = bertie__tls13formats__finished(vd) in (
         let tx = bertie__tls13formats__impl__Transcript__add(tx, sfin) in
         let th_sfin = bertie__tls13formats__impl__Transcript__transcript_hash(
           tx
         ) in let (
           cak: bertie__tls13crypto__t_AeadKeyIV,
           sak: bertie__tls13crypto__t_AeadKeyIV,
           exp: bertie__tls13utils__t_Bytes
         ) = bertie__tls13handshake__derive_app_keys(ha, ae, ms, th_sfin) in (
           let cipher1 =
             bertie__tls13record__duplex_cipher_state1(ae, sak, 0, cak, 0, exp)
            in
           (
             sfin,
             cipher1,
             bertie__tls13handshake__ServerPostServerFinished_c(
               cr, sr, algs, ms, cfk, tx
             )
           )
         )
         else bitstring_err()
         else bitstring_err()
       )
       else bitstring_err()
       else bitstring_err()
       else bitstring_err().

event Reached_bertie__tls13handshake__put_server_finished.
letfun bertie__tls13handshake__put_server_finished(
         server_finished : bertie__tls13formats__handshake_data__t_HandshakeData,
         handshake_state : bertie__tls13handshake__t_ClientPostCertificateVerify
       ) =
       event Reached_bertie__tls13handshake__put_server_finished;
       let
         bertie__tls13handshake__ClientPostCertificateVerify_c(
           client_random,
           server_random,
           algorithms,
           master_secret,
           client_finished_key,
           server_finished_key,
           transcript
         )
        = handshake_state in
       let
         bertie__tls13crypto__Algorithms_c(
           hash,aead,signature,kem,psk_mode,zero_rtt
         )
        = algorithms in
       let transcript_hash = bertie__tls13formats__impl__Transcript__transcript_hash(
         transcript
       ) in let verify_data = bertie__tls13formats__parse_finished(
         server_finished
       ) in let wildcard47: bitstring = bertie__tls13crypto__hmac_verify(
         hash, server_finished_key, transcript_hash, verify_data
       ) in (
         let transcript =
           bertie__tls13formats__impl__Transcript__add(
             transcript, server_finished
           )
          in
         let transcript_hash_server_finished = bertie__tls13formats__impl__Transcript__transcript_hash(
           transcript
         ) in let (
           cak: bertie__tls13crypto__t_AeadKeyIV,
           sak: bertie__tls13crypto__t_AeadKeyIV,
           exp: bertie__tls13utils__t_Bytes
         ) = bertie__tls13handshake__derive_app_keys(
           hash, aead, master_secret, transcript_hash_server_finished
         ) in (
           let cipher1 =
             bertie__tls13record__duplex_cipher_state1(aead, cak, 0, sak, 0, exp
             )
            in
           (
             cipher1,
             bertie__tls13handshake__ClientPostServerFinished_c(
               client_random,
               server_random,
               algorithms,
               master_secret,
               client_finished_key,
               transcript
             )
           )
         )
         else bitstring_err()
         else bitstring_err()
       )
       else bitstring_err()
       else bitstring_err()
       else bitstring_err().

event Reached_bertie__tls13handshake__client_finish.
letfun bertie__tls13handshake__client_finish(
         payload : bertie__tls13formats__handshake_data__t_HandshakeData,
         handshake_state : bertie__tls13handshake__t_ClientPostServerHello
       ) =
       event Reached_bertie__tls13handshake__client_finish;
       let (=false) = bertie__tls13crypto__impl__Algorithms__psk_mode(
         bertie__tls13handshake__algs_post_server_hello(handshake_state)
       ) in let (
         encrypted_extensions: bertie__tls13formats__handshake_data__t_HandshakeData,
         server_certificate: bertie__tls13formats__handshake_data__t_HandshakeData,
         server_certificate_verify: bertie__tls13formats__handshake_data__t_HandshakeData,
         server_finished: bertie__tls13formats__handshake_data__t_HandshakeData
       ) = bertie__tls13formats__handshake_data__impl__HandshakeData__to_four(
         payload
       ) in let client_state_certificate_verify = bertie__tls13handshake__put_server_signature(
         encrypted_extensions,
         server_certificate,
         server_certificate_verify,
         handshake_state
       ) in let (
         cipher: bertie__tls13record__t_DuplexCipherState1,
         client_state_server_finished: bertie__tls13handshake__t_ClientPostServerFinished
       ) = bertie__tls13handshake__put_server_finished(
         server_finished, client_state_certificate_verify
       ) in let (
         client_finished: bertie__tls13formats__handshake_data__t_HandshakeData,
         client_state: bertie__tls13handshake__t_ClientPostClientFinished
       ) = bertie__tls13handshake__get_client_finished(
         client_state_server_finished
       ) in (client_finished, cipher, client_state)
       else bitstring_err()
       else bitstring_err()
       else bitstring_err()
       else bitstring_err()
       else let (=true) = bertie__tls13crypto__impl__Algorithms__psk_mode(
         bertie__tls13handshake__algs_post_server_hello(handshake_state)
       ) in let (
         encrypted_extensions: bertie__tls13formats__handshake_data__t_HandshakeData,
         server_finished: bertie__tls13formats__handshake_data__t_HandshakeData
       ) = bertie__tls13formats__handshake_data__impl__HandshakeData__to_two(
         payload
       ) in let client_state_certificate_verify = bertie__tls13handshake__put_psk_skip_server_signature(
         encrypted_extensions, handshake_state
       ) in let (
         cipher: bertie__tls13record__t_DuplexCipherState1,
         client_state_server_finished: bertie__tls13handshake__t_ClientPostServerFinished
       ) = bertie__tls13handshake__put_server_finished(
         server_finished, client_state_certificate_verify
       ) in let (
         client_finished: bertie__tls13formats__handshake_data__t_HandshakeData,
         client_state: bertie__tls13handshake__t_ClientPostClientFinished
       ) = bertie__tls13handshake__get_client_finished(
         client_state_server_finished
       ) in (client_finished, cipher, client_state)
       else bitstring_err()
       else bitstring_err()
       else bitstring_err()
       else bitstring_err().

event Reached_bertie__tls13record__server_cipher_state0.
letfun bertie__tls13record__server_cipher_state0(
         key_iv : bertie__tls13crypto__t_AeadKeyIV,
         counter : nat,
         early_exporter_ms : bertie__tls13utils__t_Bytes
       ) =
       event Reached_bertie__tls13record__server_cipher_state0;
       bertie__tls13record__ServerCipherState0_c(
         key_iv,counter,early_exporter_ms
       ).

event Reached_bertie__tls13handshake__process_psk_binder_zero_rtt.
letfun bertie__tls13handshake__process_psk_binder_zero_rtt(
         ciphersuite : bertie__tls13crypto__t_Algorithms,
         th_trunc : bertie__tls13utils__t_Bytes,
         th : bertie__tls13utils__t_Bytes,
         psko : Option,
         bindero : Option
       ) =
       event Reached_bertie__tls13handshake__process_psk_binder_zero_rtt;
       let (
         =true,
         Some(bertie__tls13utils__t_Bytes_to_bitstring(k)),
         Some(bertie__tls13utils__t_Bytes_to_bitstring(binder))
       ) = (
         accessor_bertie__tls13crypto__Algorithms_f_psk_mode(ciphersuite),
         psko,
         bindero
       ) in let mk = bertie__tls13handshake__derive_binder_key(
         accessor_bertie__tls13crypto__Algorithms_f_hash(ciphersuite), k
       ) in let wildcard48: bitstring = bertie__tls13crypto__hmac_verify(
         accessor_bertie__tls13crypto__Algorithms_f_hash(ciphersuite),
         mk,
         th_trunc,
         binder
       ) in (
         if accessor_bertie__tls13crypto__Algorithms_f_zero_rtt(ciphersuite)
         then
           (let (
              key_iv: bertie__tls13crypto__t_AeadKeyIV,
              early_exporter_ms: bertie__tls13utils__t_Bytes
            ) = bertie__tls13handshake__derive_0rtt_keys(
              accessor_bertie__tls13crypto__Algorithms_f_hash(ciphersuite),
              accessor_bertie__tls13crypto__Algorithms_f_aead(ciphersuite),
              k,
              th
            ) in (
              let cipher0 =
                Some(
                  bertie__tls13record__t_ServerCipherState0_to_bitstring(
                    bertie__tls13record__server_cipher_state0(
                      key_iv, 0, early_exporter_ms
                    )
                  )
                )
               in
              cipher0
            )
            else Option_err())
         else (None())
       )
       else Option_err()
       else Option_err()
       else let (=false, None(), None()) = (
         accessor_bertie__tls13crypto__Algorithms_f_psk_mode(ciphersuite),
         psko,
         bindero
       ) in None()
       else Option_err().

event Reached_bertie__tls13handshake__put_client_hello.
letfun bertie__tls13handshake__put_client_hello(
         ciphersuite : bertie__tls13crypto__t_Algorithms,
         ch : bertie__tls13formats__handshake_data__t_HandshakeData,
         db : bertie__server__t_ServerDB
       ) =
       event Reached_bertie__tls13handshake__put_client_hello;
       let (
         client_randomness: bertie__tls13utils__t_Bytes,
         session_id: bertie__tls13utils__t_Bytes,
         sni: bertie__tls13utils__t_Bytes,
         gx: bertie__tls13utils__t_Bytes,
         tkto: Option,
         bindero: Option,
         trunc_len: nat
       ) = bertie__tls13formats__parse_client_hello(ciphersuite, ch) in (
         let tx =
           bertie__tls13formats__impl__Transcript__new(
             bertie__tls13crypto__impl__Algorithms__hash(ciphersuite)
           )
          in
         let th_trunc = bertie__tls13formats__impl__Transcript__transcript_hash_without_client_hello(
           tx, ch, trunc_len
         ) in (
           let transcript = bertie__tls13formats__impl__Transcript__add(tx, ch) in
           let th = bertie__tls13formats__impl__Transcript__transcript_hash(
             transcript
           ) in let server = bertie__server__lookup_db(
             ciphersuite, db, sni, tkto
           ) in let cipher0 = bertie__tls13handshake__process_psk_binder_zero_rtt(
             ciphersuite,
             th_trunc,
             th,
             accessor_bertie__server__ServerInfo_f_psk_opt(server),
             bindero
           ) in (
             cipher0,
             bertie__tls13handshake__ServerPostClientHello_c(
               client_randomness,ciphersuite,session_id,gx,server,transcript
             )
           )
           else bitstring_err()
           else bitstring_err()
           else bitstring_err()
         )
         else bitstring_err()
       )
       else bitstring_err().

event Reached_bertie__tls13handshake__server_init_no_psk.
letfun bertie__tls13handshake__server_init_no_psk(
         algs : bertie__tls13crypto__t_Algorithms,
         ch : bertie__tls13formats__handshake_data__t_HandshakeData,
         db : bertie__server__t_ServerDB,
         rng : impl_CryptoRng___RngCore
       ) =
       event Reached_bertie__tls13handshake__server_init_no_psk;
       let (cipher0: Option, st: bertie__tls13handshake__t_ServerPostClientHello
       ) = bertie__tls13handshake__put_client_hello(algs, ch, db) in (
         let (tmp0: impl_CryptoRng___RngCore, v_out: bitstring) =
           bertie__tls13handshake__get_server_hello(st, rng)
          in
         let rng = tmp0 in
         let hoist57 = v_out in
         let (
           sh: bertie__tls13formats__handshake_data__t_HandshakeData,
           cipher_hs: bertie__tls13record__t_DuplexCipherStateH,
           st: bertie__tls13handshake__t_ServerPostServerHello
         ) = hoist57 in (
           let (tmp0: impl_CryptoRng___RngCore, v_out: bitstring) =
             bertie__tls13handshake__get_server_signature(st, rng)
            in
           let rng = tmp0 in
           let hoist58 = v_out in
           let (
             ee: bertie__tls13formats__handshake_data__t_HandshakeData,
             sc: bertie__tls13formats__handshake_data__t_HandshakeData,
             scv: bertie__tls13formats__handshake_data__t_HandshakeData,
             st: bertie__tls13handshake__t_ServerPostCertificateVerify
           ) = hoist58 in let (
             sfin: bertie__tls13formats__handshake_data__t_HandshakeData,
             cipher1: bertie__tls13record__t_DuplexCipherState1,
             st: bertie__tls13handshake__t_ServerPostServerFinished
           ) = bertie__tls13handshake__get_server_finished(st) in (
             let flight =
               bertie__tls13formats__handshake_data__impl__HandshakeData__concat(
                 bertie__tls13formats__handshake_data__impl__HandshakeData__concat(
                   bertie__tls13formats__handshake_data__impl__HandshakeData__concat(
                     ee, sc
                   ),
                   scv
                 ),
                 sfin
               )
              in
             let hax_temp_output = (sh, flight, cipher0, cipher_hs, cipher1, st) in
             (rng, hax_temp_output)
           )
           else bitstring_err()
           else bitstring_err()
         )
         else bitstring_err()
       )
       else bitstring_err().

event Reached_bertie__tls13handshake__server_init_psk.
letfun bertie__tls13handshake__server_init_psk(
         algs : bertie__tls13crypto__t_Algorithms,
         ch : bertie__tls13formats__handshake_data__t_HandshakeData,
         db : bertie__server__t_ServerDB,
         rng : impl_CryptoRng___RngCore
       ) =
       event Reached_bertie__tls13handshake__server_init_psk;
       let (cipher0: Option, st: bertie__tls13handshake__t_ServerPostClientHello
       ) = bertie__tls13handshake__put_client_hello(algs, ch, db) in (
         let (tmp0: impl_CryptoRng___RngCore, v_out: bitstring) =
           bertie__tls13handshake__get_server_hello(st, rng)
          in
         let rng = tmp0 in
         let hoist59 = v_out in
         let (
           sh: bertie__tls13formats__handshake_data__t_HandshakeData,
           cipher_hs: bertie__tls13record__t_DuplexCipherStateH,
           st: bertie__tls13handshake__t_ServerPostServerHello
         ) = hoist59 in let (
           ee: bertie__tls13formats__handshake_data__t_HandshakeData,
           st: bertie__tls13handshake__t_ServerPostCertificateVerify
         ) = bertie__tls13handshake__get_skip_server_signature(st) in let (
           sfin: bertie__tls13formats__handshake_data__t_HandshakeData,
           cipher1: bertie__tls13record__t_DuplexCipherState1,
           st: bertie__tls13handshake__t_ServerPostServerFinished
         ) = bertie__tls13handshake__get_server_finished(st) in (
           let flight =
             bertie__tls13formats__handshake_data__impl__HandshakeData__concat(
               ee, sfin
             )
            in
           let hax_temp_output = (sh, flight, cipher0, cipher_hs, cipher1, st) in
           (rng, hax_temp_output)
         )
         else bitstring_err()
         else bitstring_err()
         else bitstring_err()
       )
       else bitstring_err().

event Reached_bertie__tls13handshake__server_init.
letfun bertie__tls13handshake__server_init(
         algs : bertie__tls13crypto__t_Algorithms,
         ch : bertie__tls13formats__handshake_data__t_HandshakeData,
         db : bertie__server__t_ServerDB,
         rng : impl_CryptoRng___RngCore
       ) =
       event Reached_bertie__tls13handshake__server_init;
       let (rng: impl_CryptoRng___RngCore, hax_temp_output: bitstring) =
         let (=false) = bertie__tls13crypto__impl__Algorithms__psk_mode(algs) in (
           let (tmp0: impl_CryptoRng___RngCore, v_out: bitstring) =
             bertie__tls13handshake__server_init_no_psk(algs, ch, db, rng)
            in
           let rng = tmp0 in
           (rng, v_out)
         )
         else let (=true) = bertie__tls13crypto__impl__Algorithms__psk_mode(algs
         ) in (
           let (tmp0: impl_CryptoRng___RngCore, v_out: bitstring) =
             bertie__tls13handshake__server_init_psk(algs, ch, db, rng)
            in
           let rng = tmp0 in
           (rng, v_out)
         )
        in
       (rng, hax_temp_output).

(*****************************************)
(* Processes *)
(*****************************************)



