(*****************************************)
(* Preamble *)
(*****************************************)

channel c.

fun construct_fail() : bitstring
reduc construct_fail() = fail.

type Option.
fun Some(bitstring): Option [data].
fun None(): Option [data].
letfun Option_err() = let x = construct_fail() in None().

const empty: bitstring.
letfun bitstring_default() = empty.
letfun bitstring_err() = let x = construct_fail() in bitstring_default().

letfun nat_default() = 0.
fun nat_to_bitstring(nat): bitstring.
letfun nat_err() = let x = construct_fail() in nat_default().

letfun bool_default() = false.


(*****************************************)
(* Types and Constructors *)
(*****************************************)

type bertie__tls13utils__t_Bytes.

fun bertie__tls13utils__t_Bytes_to_bitstring(bertie__tls13utils__t_Bytes)
    : bitstring [typeConverter].
fun bertie__tls13utils__t_Bytes_from_bitstring(bitstring)
    : bertie__tls13utils__t_Bytes [typeConverter].
const bertie__tls13utils__t_Bytes_default_value: bertie__tls13utils__t_Bytes.
letfun bertie__tls13utils__t_Bytes_default() =
       bertie__tls13utils__t_Bytes_default_value.
letfun bertie__tls13utils__t_Bytes_err() =
       let x = construct_fail() in bertie__tls13utils__t_Bytes_default_value.
fun bertie__tls13utils__Bytes(bitstring)
    : bertie__tls13utils__t_Bytes [data].
reduc forall bertie__tls13utils__0: bitstring;
    accessor_bertie__tls13utils__t_Bytes_bertie__tls13utils__0(
      bertie__tls13utils__Bytes(bertie__tls13utils__0)
    ) = bertie__tls13utils__0.

type bertie__tls13crypto__t_RsaVerificationKey.

fun bertie__tls13crypto__t_RsaVerificationKey_to_bitstring(
      bertie__tls13crypto__t_RsaVerificationKey
    )
    : bitstring [typeConverter].
fun bertie__tls13crypto__t_RsaVerificationKey_from_bitstring(bitstring)
    : bertie__tls13crypto__t_RsaVerificationKey [typeConverter].
const bertie__tls13crypto__t_RsaVerificationKey_default_value: bertie__tls13crypto__t_RsaVerificationKey.
letfun bertie__tls13crypto__t_RsaVerificationKey_default() =
       bertie__tls13crypto__t_RsaVerificationKey_default_value.
letfun bertie__tls13crypto__t_RsaVerificationKey_err() =
       let x = construct_fail() in bertie__tls13crypto__t_RsaVerificationKey_default_value.


type bertie__tls13crypto__t_PublicVerificationKey.

fun bertie__tls13crypto__t_PublicVerificationKey_to_bitstring(
      bertie__tls13crypto__t_PublicVerificationKey
    )
    : bitstring [typeConverter].
fun bertie__tls13crypto__t_PublicVerificationKey_from_bitstring(bitstring)
    : bertie__tls13crypto__t_PublicVerificationKey [typeConverter].
const bertie__tls13crypto__t_PublicVerificationKey_default_value: bertie__tls13crypto__t_PublicVerificationKey.
letfun bertie__tls13crypto__t_PublicVerificationKey_default() =
       bertie__tls13crypto__t_PublicVerificationKey_default_value.
letfun bertie__tls13crypto__t_PublicVerificationKey_err() =
       let x = construct_fail() in bertie__tls13crypto__t_PublicVerificationKey_default_value.
fun bertie__tls13crypto__PublicVerificationKey_EcDsa(bertie__tls13utils__t_Bytes
    )
    : bertie__tls13crypto__t_PublicVerificationKey [data].

fun bertie__tls13crypto__PublicVerificationKey_Rsa(
      bertie__tls13crypto__t_RsaVerificationKey
    )
    : bertie__tls13crypto__t_PublicVerificationKey [data].


type bertie__tls13crypto__t_HashAlgorithm.

fun bertie__tls13crypto__t_HashAlgorithm_to_bitstring(
      bertie__tls13crypto__t_HashAlgorithm
    )
    : bitstring [typeConverter].
fun bertie__tls13crypto__t_HashAlgorithm_from_bitstring(bitstring)
    : bertie__tls13crypto__t_HashAlgorithm [typeConverter].
const bertie__tls13crypto__t_HashAlgorithm_default_value: bertie__tls13crypto__t_HashAlgorithm.
letfun bertie__tls13crypto__t_HashAlgorithm_default() =
       bertie__tls13crypto__t_HashAlgorithm_default_value.
letfun bertie__tls13crypto__t_HashAlgorithm_err() =
       let x = construct_fail() in bertie__tls13crypto__t_HashAlgorithm_default_value.
fun bertie__tls13crypto__HashAlgorithm_SHA256()
    : bertie__tls13crypto__t_HashAlgorithm [data].

fun bertie__tls13crypto__HashAlgorithm_SHA384()
    : bertie__tls13crypto__t_HashAlgorithm [data].

fun bertie__tls13crypto__HashAlgorithm_SHA512()
    : bertie__tls13crypto__t_HashAlgorithm [data].


type bertie__tls13crypto__t_AeadAlgorithm.

fun bertie__tls13crypto__t_AeadAlgorithm_to_bitstring(
      bertie__tls13crypto__t_AeadAlgorithm
    )
    : bitstring [typeConverter].
fun bertie__tls13crypto__t_AeadAlgorithm_from_bitstring(bitstring)
    : bertie__tls13crypto__t_AeadAlgorithm [typeConverter].
const bertie__tls13crypto__t_AeadAlgorithm_default_value: bertie__tls13crypto__t_AeadAlgorithm.
letfun bertie__tls13crypto__t_AeadAlgorithm_default() =
       bertie__tls13crypto__t_AeadAlgorithm_default_value.
letfun bertie__tls13crypto__t_AeadAlgorithm_err() =
       let x = construct_fail() in bertie__tls13crypto__t_AeadAlgorithm_default_value.
fun bertie__tls13crypto__AeadAlgorithm_Chacha20Poly1305()
    : bertie__tls13crypto__t_AeadAlgorithm [data].

fun bertie__tls13crypto__AeadAlgorithm_Aes128Gcm()
    : bertie__tls13crypto__t_AeadAlgorithm [data].

fun bertie__tls13crypto__AeadAlgorithm_Aes256Gcm()
    : bertie__tls13crypto__t_AeadAlgorithm [data].


type bertie__tls13crypto__t_AeadKey.

fun bertie__tls13crypto__t_AeadKey_to_bitstring(bertie__tls13crypto__t_AeadKey)
    : bitstring [typeConverter].
fun bertie__tls13crypto__t_AeadKey_from_bitstring(bitstring)
    : bertie__tls13crypto__t_AeadKey [typeConverter].
const bertie__tls13crypto__t_AeadKey_default_value: bertie__tls13crypto__t_AeadKey.
letfun bertie__tls13crypto__t_AeadKey_default() =
       bertie__tls13crypto__t_AeadKey_default_value.
letfun bertie__tls13crypto__t_AeadKey_err() =
       let x = construct_fail() in bertie__tls13crypto__t_AeadKey_default_value.
fun bertie__tls13crypto__AeadKey(
      bertie__tls13utils__t_Bytes, bertie__tls13crypto__t_AeadAlgorithm
    )
    : bertie__tls13crypto__t_AeadKey [data].
reduc forall 
  bertie__tls13crypto__f_bytes: bertie__tls13utils__t_Bytes,
  bertie__tls13crypto__f_e_alg: bertie__tls13crypto__t_AeadAlgorithm
;
    accessor_bertie__tls13crypto__t_AeadKey_bertie__tls13crypto__f_bytes(
      bertie__tls13crypto__AeadKey(
        bertie__tls13crypto__f_bytes, bertie__tls13crypto__f_e_alg
      )
    ) = bertie__tls13crypto__f_bytes.
reduc forall 
  bertie__tls13crypto__f_bytes: bertie__tls13utils__t_Bytes,
  bertie__tls13crypto__f_e_alg: bertie__tls13crypto__t_AeadAlgorithm
;
    accessor_bertie__tls13crypto__t_AeadKey_bertie__tls13crypto__f_e_alg(
      bertie__tls13crypto__AeadKey(
        bertie__tls13crypto__f_bytes, bertie__tls13crypto__f_e_alg
      )
    ) = bertie__tls13crypto__f_e_alg.

type bertie__tls13crypto__t_AeadKeyIV.

fun bertie__tls13crypto__t_AeadKeyIV_to_bitstring(
      bertie__tls13crypto__t_AeadKeyIV
    )
    : bitstring [typeConverter].
fun bertie__tls13crypto__t_AeadKeyIV_from_bitstring(bitstring)
    : bertie__tls13crypto__t_AeadKeyIV [typeConverter].
const bertie__tls13crypto__t_AeadKeyIV_default_value: bertie__tls13crypto__t_AeadKeyIV.
letfun bertie__tls13crypto__t_AeadKeyIV_default() =
       bertie__tls13crypto__t_AeadKeyIV_default_value.
letfun bertie__tls13crypto__t_AeadKeyIV_err() =
       let x = construct_fail() in bertie__tls13crypto__t_AeadKeyIV_default_value.
fun bertie__tls13crypto__AeadKeyIV(
      bertie__tls13crypto__t_AeadKey, bertie__tls13utils__t_Bytes
    )
    : bertie__tls13crypto__t_AeadKeyIV [data].
reduc forall 
  bertie__tls13crypto__f_key: bertie__tls13crypto__t_AeadKey,
  bertie__tls13crypto__f_iv: bertie__tls13utils__t_Bytes
;
    accessor_bertie__tls13crypto__t_AeadKeyIV_bertie__tls13crypto__f_key(
      bertie__tls13crypto__AeadKeyIV(
        bertie__tls13crypto__f_key, bertie__tls13crypto__f_iv
      )
    ) = bertie__tls13crypto__f_key.
reduc forall 
  bertie__tls13crypto__f_key: bertie__tls13crypto__t_AeadKey,
  bertie__tls13crypto__f_iv: bertie__tls13utils__t_Bytes
;
    accessor_bertie__tls13crypto__t_AeadKeyIV_bertie__tls13crypto__f_iv(
      bertie__tls13crypto__AeadKeyIV(
        bertie__tls13crypto__f_key, bertie__tls13crypto__f_iv
      )
    ) = bertie__tls13crypto__f_iv.

type bertie__tls13crypto__t_SignatureScheme.

fun bertie__tls13crypto__t_SignatureScheme_to_bitstring(
      bertie__tls13crypto__t_SignatureScheme
    )
    : bitstring [typeConverter].
fun bertie__tls13crypto__t_SignatureScheme_from_bitstring(bitstring)
    : bertie__tls13crypto__t_SignatureScheme [typeConverter].
const bertie__tls13crypto__t_SignatureScheme_default_value: bertie__tls13crypto__t_SignatureScheme.
letfun bertie__tls13crypto__t_SignatureScheme_default() =
       bertie__tls13crypto__t_SignatureScheme_default_value.
letfun bertie__tls13crypto__t_SignatureScheme_err() =
       let x = construct_fail() in bertie__tls13crypto__t_SignatureScheme_default_value.
fun bertie__tls13crypto__SignatureScheme_RsaPssRsaSha256()
    : bertie__tls13crypto__t_SignatureScheme [data].

fun bertie__tls13crypto__SignatureScheme_EcdsaSecp256r1Sha256()
    : bertie__tls13crypto__t_SignatureScheme [data].

fun bertie__tls13crypto__SignatureScheme_ED25519()
    : bertie__tls13crypto__t_SignatureScheme [data].


type bertie__tls13crypto__t_KemScheme.

fun bertie__tls13crypto__t_KemScheme_to_bitstring(
      bertie__tls13crypto__t_KemScheme
    )
    : bitstring [typeConverter].
fun bertie__tls13crypto__t_KemScheme_from_bitstring(bitstring)
    : bertie__tls13crypto__t_KemScheme [typeConverter].
const bertie__tls13crypto__t_KemScheme_default_value: bertie__tls13crypto__t_KemScheme.
letfun bertie__tls13crypto__t_KemScheme_default() =
       bertie__tls13crypto__t_KemScheme_default_value.
letfun bertie__tls13crypto__t_KemScheme_err() =
       let x = construct_fail() in bertie__tls13crypto__t_KemScheme_default_value.
fun bertie__tls13crypto__KemScheme_X25519()
    : bertie__tls13crypto__t_KemScheme [data].

fun bertie__tls13crypto__KemScheme_Secp256r1()
    : bertie__tls13crypto__t_KemScheme [data].

fun bertie__tls13crypto__KemScheme_X448()
    : bertie__tls13crypto__t_KemScheme [data].

fun bertie__tls13crypto__KemScheme_Secp384r1()
    : bertie__tls13crypto__t_KemScheme [data].

fun bertie__tls13crypto__KemScheme_Secp521r1()
    : bertie__tls13crypto__t_KemScheme [data].

fun bertie__tls13crypto__KemScheme_X25519Kyber768Draft00()
    : bertie__tls13crypto__t_KemScheme [data].

fun bertie__tls13crypto__KemScheme_X25519MlKem768()
    : bertie__tls13crypto__t_KemScheme [data].


type bertie__tls13crypto__t_Algorithms.

fun bertie__tls13crypto__t_Algorithms_to_bitstring(
      bertie__tls13crypto__t_Algorithms
    )
    : bitstring [typeConverter].
fun bertie__tls13crypto__t_Algorithms_from_bitstring(bitstring)
    : bertie__tls13crypto__t_Algorithms [typeConverter].
const bertie__tls13crypto__t_Algorithms_default_value: bertie__tls13crypto__t_Algorithms.
letfun bertie__tls13crypto__t_Algorithms_default() =
       bertie__tls13crypto__t_Algorithms_default_value.
letfun bertie__tls13crypto__t_Algorithms_err() =
       let x = construct_fail() in bertie__tls13crypto__t_Algorithms_default_value.
fun bertie__tls13crypto__Algorithms(
      bertie__tls13crypto__t_HashAlgorithm,
      bertie__tls13crypto__t_AeadAlgorithm,
      bertie__tls13crypto__t_SignatureScheme,
      bertie__tls13crypto__t_KemScheme,
      bool,
      bool
    )
    : bertie__tls13crypto__t_Algorithms [data].
reduc forall 
  bertie__tls13crypto__f_hash: bertie__tls13crypto__t_HashAlgorithm,
  bertie__tls13crypto__f_aead: bertie__tls13crypto__t_AeadAlgorithm,
  bertie__tls13crypto__f_signature: bertie__tls13crypto__t_SignatureScheme,
  bertie__tls13crypto__f_kem: bertie__tls13crypto__t_KemScheme,
  bertie__tls13crypto__f_psk_mode: bool,
  bertie__tls13crypto__f_zero_rtt: bool
;
    accessor_bertie__tls13crypto__t_Algorithms_bertie__tls13crypto__f_hash(
      bertie__tls13crypto__Algorithms(
        bertie__tls13crypto__f_hash,
        bertie__tls13crypto__f_aead,
        bertie__tls13crypto__f_signature,
        bertie__tls13crypto__f_kem,
        bertie__tls13crypto__f_psk_mode,
        bertie__tls13crypto__f_zero_rtt
      )
    ) = bertie__tls13crypto__f_hash.
reduc forall 
  bertie__tls13crypto__f_hash: bertie__tls13crypto__t_HashAlgorithm,
  bertie__tls13crypto__f_aead: bertie__tls13crypto__t_AeadAlgorithm,
  bertie__tls13crypto__f_signature: bertie__tls13crypto__t_SignatureScheme,
  bertie__tls13crypto__f_kem: bertie__tls13crypto__t_KemScheme,
  bertie__tls13crypto__f_psk_mode: bool,
  bertie__tls13crypto__f_zero_rtt: bool
;
    accessor_bertie__tls13crypto__t_Algorithms_bertie__tls13crypto__f_aead(
      bertie__tls13crypto__Algorithms(
        bertie__tls13crypto__f_hash,
        bertie__tls13crypto__f_aead,
        bertie__tls13crypto__f_signature,
        bertie__tls13crypto__f_kem,
        bertie__tls13crypto__f_psk_mode,
        bertie__tls13crypto__f_zero_rtt
      )
    ) = bertie__tls13crypto__f_aead.
reduc forall 
  bertie__tls13crypto__f_hash: bertie__tls13crypto__t_HashAlgorithm,
  bertie__tls13crypto__f_aead: bertie__tls13crypto__t_AeadAlgorithm,
  bertie__tls13crypto__f_signature: bertie__tls13crypto__t_SignatureScheme,
  bertie__tls13crypto__f_kem: bertie__tls13crypto__t_KemScheme,
  bertie__tls13crypto__f_psk_mode: bool,
  bertie__tls13crypto__f_zero_rtt: bool
;
    accessor_bertie__tls13crypto__t_Algorithms_bertie__tls13crypto__f_signature(
      bertie__tls13crypto__Algorithms(
        bertie__tls13crypto__f_hash,
        bertie__tls13crypto__f_aead,
        bertie__tls13crypto__f_signature,
        bertie__tls13crypto__f_kem,
        bertie__tls13crypto__f_psk_mode,
        bertie__tls13crypto__f_zero_rtt
      )
    ) = bertie__tls13crypto__f_signature.
reduc forall 
  bertie__tls13crypto__f_hash: bertie__tls13crypto__t_HashAlgorithm,
  bertie__tls13crypto__f_aead: bertie__tls13crypto__t_AeadAlgorithm,
  bertie__tls13crypto__f_signature: bertie__tls13crypto__t_SignatureScheme,
  bertie__tls13crypto__f_kem: bertie__tls13crypto__t_KemScheme,
  bertie__tls13crypto__f_psk_mode: bool,
  bertie__tls13crypto__f_zero_rtt: bool
;
    accessor_bertie__tls13crypto__t_Algorithms_bertie__tls13crypto__f_kem(
      bertie__tls13crypto__Algorithms(
        bertie__tls13crypto__f_hash,
        bertie__tls13crypto__f_aead,
        bertie__tls13crypto__f_signature,
        bertie__tls13crypto__f_kem,
        bertie__tls13crypto__f_psk_mode,
        bertie__tls13crypto__f_zero_rtt
      )
    ) = bertie__tls13crypto__f_kem.
reduc forall 
  bertie__tls13crypto__f_hash: bertie__tls13crypto__t_HashAlgorithm,
  bertie__tls13crypto__f_aead: bertie__tls13crypto__t_AeadAlgorithm,
  bertie__tls13crypto__f_signature: bertie__tls13crypto__t_SignatureScheme,
  bertie__tls13crypto__f_kem: bertie__tls13crypto__t_KemScheme,
  bertie__tls13crypto__f_psk_mode: bool,
  bertie__tls13crypto__f_zero_rtt: bool
;
    accessor_bertie__tls13crypto__t_Algorithms_bertie__tls13crypto__f_psk_mode(
      bertie__tls13crypto__Algorithms(
        bertie__tls13crypto__f_hash,
        bertie__tls13crypto__f_aead,
        bertie__tls13crypto__f_signature,
        bertie__tls13crypto__f_kem,
        bertie__tls13crypto__f_psk_mode,
        bertie__tls13crypto__f_zero_rtt
      )
    ) = bertie__tls13crypto__f_psk_mode.
reduc forall 
  bertie__tls13crypto__f_hash: bertie__tls13crypto__t_HashAlgorithm,
  bertie__tls13crypto__f_aead: bertie__tls13crypto__t_AeadAlgorithm,
  bertie__tls13crypto__f_signature: bertie__tls13crypto__t_SignatureScheme,
  bertie__tls13crypto__f_kem: bertie__tls13crypto__t_KemScheme,
  bertie__tls13crypto__f_psk_mode: bool,
  bertie__tls13crypto__f_zero_rtt: bool
;
    accessor_bertie__tls13crypto__t_Algorithms_bertie__tls13crypto__f_zero_rtt(
      bertie__tls13crypto__Algorithms(
        bertie__tls13crypto__f_hash,
        bertie__tls13crypto__f_aead,
        bertie__tls13crypto__f_signature,
        bertie__tls13crypto__f_kem,
        bertie__tls13crypto__f_psk_mode,
        bertie__tls13crypto__f_zero_rtt
      )
    ) = bertie__tls13crypto__f_zero_rtt.

type bertie__tls13keyscheduler__key_schedule__t_TLSnames.

fun bertie__tls13keyscheduler__key_schedule__t_TLSnames_to_bitstring(
      bertie__tls13keyscheduler__key_schedule__t_TLSnames
    )
    : bitstring [typeConverter].
fun bertie__tls13keyscheduler__key_schedule__t_TLSnames_from_bitstring(bitstring
    )
    : bertie__tls13keyscheduler__key_schedule__t_TLSnames [typeConverter].
const bertie__tls13keyscheduler__key_schedule__t_TLSnames_default_value: bertie__tls13keyscheduler__key_schedule__t_TLSnames.
letfun bertie__tls13keyscheduler__key_schedule__t_TLSnames_default() =
       bertie__tls13keyscheduler__key_schedule__t_TLSnames_default_value.
letfun bertie__tls13keyscheduler__key_schedule__t_TLSnames_err() =
       let x = construct_fail() in bertie__tls13keyscheduler__key_schedule__t_TLSnames_default_value.
fun bertie__tls13keyscheduler__key_schedule__TLSnames_ES()
    : bertie__tls13keyscheduler__key_schedule__t_TLSnames [data].

fun bertie__tls13keyscheduler__key_schedule__TLSnames_EEM()
    : bertie__tls13keyscheduler__key_schedule__t_TLSnames [data].

fun bertie__tls13keyscheduler__key_schedule__TLSnames_CET()
    : bertie__tls13keyscheduler__key_schedule__t_TLSnames [data].

fun bertie__tls13keyscheduler__key_schedule__TLSnames_Bind()
    : bertie__tls13keyscheduler__key_schedule__t_TLSnames [data].

fun bertie__tls13keyscheduler__key_schedule__TLSnames_Binder()
    : bertie__tls13keyscheduler__key_schedule__t_TLSnames [data].

fun bertie__tls13keyscheduler__key_schedule__TLSnames_HS()
    : bertie__tls13keyscheduler__key_schedule__t_TLSnames [data].

fun bertie__tls13keyscheduler__key_schedule__TLSnames_SHT()
    : bertie__tls13keyscheduler__key_schedule__t_TLSnames [data].

fun bertie__tls13keyscheduler__key_schedule__TLSnames_CHT()
    : bertie__tls13keyscheduler__key_schedule__t_TLSnames [data].

fun bertie__tls13keyscheduler__key_schedule__TLSnames_HSalt()
    : bertie__tls13keyscheduler__key_schedule__t_TLSnames [data].

fun bertie__tls13keyscheduler__key_schedule__TLSnames_AS()
    : bertie__tls13keyscheduler__key_schedule__t_TLSnames [data].

fun bertie__tls13keyscheduler__key_schedule__TLSnames_RM()
    : bertie__tls13keyscheduler__key_schedule__t_TLSnames [data].

fun bertie__tls13keyscheduler__key_schedule__TLSnames_CAT()
    : bertie__tls13keyscheduler__key_schedule__t_TLSnames [data].

fun bertie__tls13keyscheduler__key_schedule__TLSnames_SAT()
    : bertie__tls13keyscheduler__key_schedule__t_TLSnames [data].

fun bertie__tls13keyscheduler__key_schedule__TLSnames_EAM()
    : bertie__tls13keyscheduler__key_schedule__t_TLSnames [data].

fun bertie__tls13keyscheduler__key_schedule__TLSnames_PSK()
    : bertie__tls13keyscheduler__key_schedule__t_TLSnames [data].

fun bertie__tls13keyscheduler__key_schedule__TLSnames_ZeroSalt()
    : bertie__tls13keyscheduler__key_schedule__t_TLSnames [data].

fun bertie__tls13keyscheduler__key_schedule__TLSnames_ESalt()
    : bertie__tls13keyscheduler__key_schedule__t_TLSnames [data].

fun bertie__tls13keyscheduler__key_schedule__TLSnames_KEM()
    : bertie__tls13keyscheduler__key_schedule__t_TLSnames [data].

fun bertie__tls13keyscheduler__key_schedule__TLSnames_ZeroIKM()
    : bertie__tls13keyscheduler__key_schedule__t_TLSnames [data].


type bertie__tls13keyscheduler__key_schedule__t_TLSkeyscheduler.

fun bertie__tls13keyscheduler__key_schedule__t_TLSkeyscheduler_to_bitstring(
      bertie__tls13keyscheduler__key_schedule__t_TLSkeyscheduler
    )
    : bitstring [typeConverter].
fun bertie__tls13keyscheduler__key_schedule__t_TLSkeyscheduler_from_bitstring(
      bitstring
    )
    : bertie__tls13keyscheduler__key_schedule__t_TLSkeyscheduler [typeConverter].
const bertie__tls13keyscheduler__key_schedule__t_TLSkeyscheduler_default_value: bertie__tls13keyscheduler__key_schedule__t_TLSkeyscheduler.
letfun bertie__tls13keyscheduler__key_schedule__t_TLSkeyscheduler_default() =
       bertie__tls13keyscheduler__key_schedule__t_TLSkeyscheduler_default_value.
letfun bertie__tls13keyscheduler__key_schedule__t_TLSkeyscheduler_err() =
       let x = construct_fail() in bertie__tls13keyscheduler__key_schedule__t_TLSkeyscheduler_default_value.
fun bertie__tls13keyscheduler__key_schedule__TLSkeyscheduler(
      std__collections__hash__map__t_HashMap_of_bitstring_bertie__tls13utils__t_Bytes_std__hash__random__t_RandomState
    )
    : bertie__tls13keyscheduler__key_schedule__t_TLSkeyscheduler [data].
reduc forall 
  bertie__tls13keyscheduler__key_schedule__f_keys: std__collections__hash__map__t_HashMap_of_bitstring_bertie__tls13utils__t_Bytes_std__hash__random__t_RandomState
;
    accessor_bertie__tls13keyscheduler__key_schedule__t_TLSkeyscheduler_bertie__tls13keyscheduler__key_schedule__f_keys(
      bertie__tls13keyscheduler__key_schedule__TLSkeyscheduler(
        bertie__tls13keyscheduler__key_schedule__f_keys
      )
    ) = bertie__tls13keyscheduler__key_schedule__f_keys.

type bertie__tls13keyscheduler__key_schedule__t_TagKey.

fun bertie__tls13keyscheduler__key_schedule__t_TagKey_to_bitstring(
      bertie__tls13keyscheduler__key_schedule__t_TagKey
    )
    : bitstring [typeConverter].
fun bertie__tls13keyscheduler__key_schedule__t_TagKey_from_bitstring(bitstring)
    : bertie__tls13keyscheduler__key_schedule__t_TagKey [typeConverter].
const bertie__tls13keyscheduler__key_schedule__t_TagKey_default_value: bertie__tls13keyscheduler__key_schedule__t_TagKey.
letfun bertie__tls13keyscheduler__key_schedule__t_TagKey_default() =
       bertie__tls13keyscheduler__key_schedule__t_TagKey_default_value.
letfun bertie__tls13keyscheduler__key_schedule__t_TagKey_err() =
       let x = construct_fail() in bertie__tls13keyscheduler__key_schedule__t_TagKey_default_value.
fun bertie__tls13keyscheduler__key_schedule__TagKey(
      bertie__tls13crypto__t_HashAlgorithm,
      bertie__tls13keyscheduler__key_schedule__t_TLSnames,
      bertie__tls13utils__t_Bytes
    )
    : bertie__tls13keyscheduler__key_schedule__t_TagKey [data].
reduc forall 
  bertie__tls13keyscheduler__key_schedule__f_alg: bertie__tls13crypto__t_HashAlgorithm,
  bertie__tls13keyscheduler__key_schedule__f_tag: bertie__tls13keyscheduler__key_schedule__t_TLSnames,
  bertie__tls13keyscheduler__key_schedule__f_val: bertie__tls13utils__t_Bytes
;
    accessor_bertie__tls13keyscheduler__key_schedule__t_TagKey_bertie__tls13keyscheduler__key_schedule__f_alg(
      bertie__tls13keyscheduler__key_schedule__TagKey(
        bertie__tls13keyscheduler__key_schedule__f_alg,
        bertie__tls13keyscheduler__key_schedule__f_tag,
        bertie__tls13keyscheduler__key_schedule__f_val
      )
    ) = bertie__tls13keyscheduler__key_schedule__f_alg.
reduc forall 
  bertie__tls13keyscheduler__key_schedule__f_alg: bertie__tls13crypto__t_HashAlgorithm,
  bertie__tls13keyscheduler__key_schedule__f_tag: bertie__tls13keyscheduler__key_schedule__t_TLSnames,
  bertie__tls13keyscheduler__key_schedule__f_val: bertie__tls13utils__t_Bytes
;
    accessor_bertie__tls13keyscheduler__key_schedule__t_TagKey_bertie__tls13keyscheduler__key_schedule__f_tag(
      bertie__tls13keyscheduler__key_schedule__TagKey(
        bertie__tls13keyscheduler__key_schedule__f_alg,
        bertie__tls13keyscheduler__key_schedule__f_tag,
        bertie__tls13keyscheduler__key_schedule__f_val
      )
    ) = bertie__tls13keyscheduler__key_schedule__f_tag.
reduc forall 
  bertie__tls13keyscheduler__key_schedule__f_alg: bertie__tls13crypto__t_HashAlgorithm,
  bertie__tls13keyscheduler__key_schedule__f_tag: bertie__tls13keyscheduler__key_schedule__t_TLSnames,
  bertie__tls13keyscheduler__key_schedule__f_val: bertie__tls13utils__t_Bytes
;
    accessor_bertie__tls13keyscheduler__key_schedule__t_TagKey_bertie__tls13keyscheduler__key_schedule__f_val(
      bertie__tls13keyscheduler__key_schedule__TagKey(
        bertie__tls13keyscheduler__key_schedule__f_alg,
        bertie__tls13keyscheduler__key_schedule__f_tag,
        bertie__tls13keyscheduler__key_schedule__f_val
      )
    ) = bertie__tls13keyscheduler__key_schedule__f_val.

type bertie__tls13keyscheduler__key_schedule__t_Handle.

fun bertie__tls13keyscheduler__key_schedule__t_Handle_to_bitstring(
      bertie__tls13keyscheduler__key_schedule__t_Handle
    )
    : bitstring [typeConverter].
fun bertie__tls13keyscheduler__key_schedule__t_Handle_from_bitstring(bitstring)
    : bertie__tls13keyscheduler__key_schedule__t_Handle [typeConverter].
const bertie__tls13keyscheduler__key_schedule__t_Handle_default_value: bertie__tls13keyscheduler__key_schedule__t_Handle.
letfun bertie__tls13keyscheduler__key_schedule__t_Handle_default() =
       bertie__tls13keyscheduler__key_schedule__t_Handle_default_value.
letfun bertie__tls13keyscheduler__key_schedule__t_Handle_err() =
       let x = construct_fail() in bertie__tls13keyscheduler__key_schedule__t_Handle_default_value.
fun bertie__tls13keyscheduler__key_schedule__Handle(
      bertie__tls13keyscheduler__key_schedule__t_TLSnames,
      bertie__tls13crypto__t_HashAlgorithm,
      nat
    )
    : bertie__tls13keyscheduler__key_schedule__t_Handle [data].
reduc forall 
  bertie__tls13keyscheduler__key_schedule__f_name: bertie__tls13keyscheduler__key_schedule__t_TLSnames,
  bertie__tls13keyscheduler__key_schedule__f_alg: bertie__tls13crypto__t_HashAlgorithm,
  bertie__tls13keyscheduler__key_schedule__f_level: nat
;
    accessor_bertie__tls13keyscheduler__key_schedule__t_Handle_bertie__tls13keyscheduler__key_schedule__f_name(
      bertie__tls13keyscheduler__key_schedule__Handle(
        bertie__tls13keyscheduler__key_schedule__f_name,
        bertie__tls13keyscheduler__key_schedule__f_alg,
        bertie__tls13keyscheduler__key_schedule__f_level
      )
    ) = bertie__tls13keyscheduler__key_schedule__f_name.
reduc forall 
  bertie__tls13keyscheduler__key_schedule__f_name: bertie__tls13keyscheduler__key_schedule__t_TLSnames,
  bertie__tls13keyscheduler__key_schedule__f_alg: bertie__tls13crypto__t_HashAlgorithm,
  bertie__tls13keyscheduler__key_schedule__f_level: nat
;
    accessor_bertie__tls13keyscheduler__key_schedule__t_Handle_bertie__tls13keyscheduler__key_schedule__f_alg(
      bertie__tls13keyscheduler__key_schedule__Handle(
        bertie__tls13keyscheduler__key_schedule__f_name,
        bertie__tls13keyscheduler__key_schedule__f_alg,
        bertie__tls13keyscheduler__key_schedule__f_level
      )
    ) = bertie__tls13keyscheduler__key_schedule__f_alg.
reduc forall 
  bertie__tls13keyscheduler__key_schedule__f_name: bertie__tls13keyscheduler__key_schedule__t_TLSnames,
  bertie__tls13keyscheduler__key_schedule__f_alg: bertie__tls13crypto__t_HashAlgorithm,
  bertie__tls13keyscheduler__key_schedule__f_level: nat
;
    accessor_bertie__tls13keyscheduler__key_schedule__t_Handle_bertie__tls13keyscheduler__key_schedule__f_level(
      bertie__tls13keyscheduler__key_schedule__Handle(
        bertie__tls13keyscheduler__key_schedule__f_name,
        bertie__tls13keyscheduler__key_schedule__f_alg,
        bertie__tls13keyscheduler__key_schedule__f_level
      )
    ) = bertie__tls13keyscheduler__key_schedule__f_level.

type bertie__tls13formats__handshake_data__t_HandshakeData.

fun bertie__tls13formats__handshake_data__t_HandshakeData_to_bitstring(
      bertie__tls13formats__handshake_data__t_HandshakeData
    )
    : bitstring [typeConverter].
fun bertie__tls13formats__handshake_data__t_HandshakeData_from_bitstring(
      bitstring
    )
    : bertie__tls13formats__handshake_data__t_HandshakeData [typeConverter].
const bertie__tls13formats__handshake_data__t_HandshakeData_default_value: bertie__tls13formats__handshake_data__t_HandshakeData.
letfun bertie__tls13formats__handshake_data__t_HandshakeData_default() =
       bertie__tls13formats__handshake_data__t_HandshakeData_default_value.
letfun bertie__tls13formats__handshake_data__t_HandshakeData_err() =
       let x = construct_fail() in bertie__tls13formats__handshake_data__t_HandshakeData_default_value.
fun bertie__tls13formats__handshake_data__HandshakeData(
      bertie__tls13utils__t_Bytes
    )
    : bertie__tls13formats__handshake_data__t_HandshakeData [data].
reduc forall 
  bertie__tls13formats__handshake_data__0: bertie__tls13utils__t_Bytes
;
    accessor_bertie__tls13formats__handshake_data__t_HandshakeData_bertie__tls13formats__handshake_data__0(
      bertie__tls13formats__handshake_data__HandshakeData(
        bertie__tls13formats__handshake_data__0
      )
    ) = bertie__tls13formats__handshake_data__0.

type bertie__tls13record__t_ClientCipherState0.

fun bertie__tls13record__t_ClientCipherState0_to_bitstring(
      bertie__tls13record__t_ClientCipherState0
    )
    : bitstring [typeConverter].
fun bertie__tls13record__t_ClientCipherState0_from_bitstring(bitstring)
    : bertie__tls13record__t_ClientCipherState0 [typeConverter].
const bertie__tls13record__t_ClientCipherState0_default_value: bertie__tls13record__t_ClientCipherState0.
letfun bertie__tls13record__t_ClientCipherState0_default() =
       bertie__tls13record__t_ClientCipherState0_default_value.
letfun bertie__tls13record__t_ClientCipherState0_err() =
       let x = construct_fail() in bertie__tls13record__t_ClientCipherState0_default_value.
fun bertie__tls13record__ClientCipherState0(
      bertie__tls13crypto__t_AeadAlgorithm,
      bertie__tls13crypto__t_AeadKeyIV,
      nat,
      bertie__tls13keyscheduler__key_schedule__t_TagKey
    )
    : bertie__tls13record__t_ClientCipherState0 [data].
reduc forall 
  bertie__tls13record__0: bertie__tls13crypto__t_AeadAlgorithm,
  bertie__tls13record__1: bertie__tls13crypto__t_AeadKeyIV,
  bertie__tls13record__2: nat,
  bertie__tls13record__3: bertie__tls13keyscheduler__key_schedule__t_TagKey
;
    accessor_bertie__tls13record__t_ClientCipherState0_bertie__tls13record__0(
      bertie__tls13record__ClientCipherState0(
        bertie__tls13record__0,
        bertie__tls13record__1,
        bertie__tls13record__2,
        bertie__tls13record__3
      )
    ) = bertie__tls13record__0.
reduc forall 
  bertie__tls13record__0: bertie__tls13crypto__t_AeadAlgorithm,
  bertie__tls13record__1: bertie__tls13crypto__t_AeadKeyIV,
  bertie__tls13record__2: nat,
  bertie__tls13record__3: bertie__tls13keyscheduler__key_schedule__t_TagKey
;
    accessor_bertie__tls13record__t_ClientCipherState0_bertie__tls13record__1(
      bertie__tls13record__ClientCipherState0(
        bertie__tls13record__0,
        bertie__tls13record__1,
        bertie__tls13record__2,
        bertie__tls13record__3
      )
    ) = bertie__tls13record__1.
reduc forall 
  bertie__tls13record__0: bertie__tls13crypto__t_AeadAlgorithm,
  bertie__tls13record__1: bertie__tls13crypto__t_AeadKeyIV,
  bertie__tls13record__2: nat,
  bertie__tls13record__3: bertie__tls13keyscheduler__key_schedule__t_TagKey
;
    accessor_bertie__tls13record__t_ClientCipherState0_bertie__tls13record__2(
      bertie__tls13record__ClientCipherState0(
        bertie__tls13record__0,
        bertie__tls13record__1,
        bertie__tls13record__2,
        bertie__tls13record__3
      )
    ) = bertie__tls13record__2.
reduc forall 
  bertie__tls13record__0: bertie__tls13crypto__t_AeadAlgorithm,
  bertie__tls13record__1: bertie__tls13crypto__t_AeadKeyIV,
  bertie__tls13record__2: nat,
  bertie__tls13record__3: bertie__tls13keyscheduler__key_schedule__t_TagKey
;
    accessor_bertie__tls13record__t_ClientCipherState0_bertie__tls13record__3(
      bertie__tls13record__ClientCipherState0(
        bertie__tls13record__0,
        bertie__tls13record__1,
        bertie__tls13record__2,
        bertie__tls13record__3
      )
    ) = bertie__tls13record__3.

type bertie__tls13record__t_ServerCipherState0.

fun bertie__tls13record__t_ServerCipherState0_to_bitstring(
      bertie__tls13record__t_ServerCipherState0
    )
    : bitstring [typeConverter].
fun bertie__tls13record__t_ServerCipherState0_from_bitstring(bitstring)
    : bertie__tls13record__t_ServerCipherState0 [typeConverter].
const bertie__tls13record__t_ServerCipherState0_default_value: bertie__tls13record__t_ServerCipherState0.
letfun bertie__tls13record__t_ServerCipherState0_default() =
       bertie__tls13record__t_ServerCipherState0_default_value.
letfun bertie__tls13record__t_ServerCipherState0_err() =
       let x = construct_fail() in bertie__tls13record__t_ServerCipherState0_default_value.
fun bertie__tls13record__ServerCipherState0(
      bertie__tls13crypto__t_AeadKeyIV,
      nat,
      bertie__tls13keyscheduler__key_schedule__t_TagKey
    )
    : bertie__tls13record__t_ServerCipherState0 [data].
reduc forall 
  bertie__tls13record__f_key_iv: bertie__tls13crypto__t_AeadKeyIV,
  bertie__tls13record__f_counter: nat,
  bertie__tls13record__f_early_exporter_ms: bertie__tls13keyscheduler__key_schedule__t_TagKey
;
    accessor_bertie__tls13record__t_ServerCipherState0_bertie__tls13record__f_key_iv(
      bertie__tls13record__ServerCipherState0(
        bertie__tls13record__f_key_iv,
        bertie__tls13record__f_counter,
        bertie__tls13record__f_early_exporter_ms
      )
    ) = bertie__tls13record__f_key_iv.
reduc forall 
  bertie__tls13record__f_key_iv: bertie__tls13crypto__t_AeadKeyIV,
  bertie__tls13record__f_counter: nat,
  bertie__tls13record__f_early_exporter_ms: bertie__tls13keyscheduler__key_schedule__t_TagKey
;
    accessor_bertie__tls13record__t_ServerCipherState0_bertie__tls13record__f_counter(
      bertie__tls13record__ServerCipherState0(
        bertie__tls13record__f_key_iv,
        bertie__tls13record__f_counter,
        bertie__tls13record__f_early_exporter_ms
      )
    ) = bertie__tls13record__f_counter.
reduc forall 
  bertie__tls13record__f_key_iv: bertie__tls13crypto__t_AeadKeyIV,
  bertie__tls13record__f_counter: nat,
  bertie__tls13record__f_early_exporter_ms: bertie__tls13keyscheduler__key_schedule__t_TagKey
;
    accessor_bertie__tls13record__t_ServerCipherState0_bertie__tls13record__f_early_exporter_ms(
      bertie__tls13record__ServerCipherState0(
        bertie__tls13record__f_key_iv,
        bertie__tls13record__f_counter,
        bertie__tls13record__f_early_exporter_ms
      )
    ) = bertie__tls13record__f_early_exporter_ms.

type bertie__tls13record__t_DuplexCipherStateH.

fun bertie__tls13record__t_DuplexCipherStateH_to_bitstring(
      bertie__tls13record__t_DuplexCipherStateH
    )
    : bitstring [typeConverter].
fun bertie__tls13record__t_DuplexCipherStateH_from_bitstring(bitstring)
    : bertie__tls13record__t_DuplexCipherStateH [typeConverter].
const bertie__tls13record__t_DuplexCipherStateH_default_value: bertie__tls13record__t_DuplexCipherStateH.
letfun bertie__tls13record__t_DuplexCipherStateH_default() =
       bertie__tls13record__t_DuplexCipherStateH_default_value.
letfun bertie__tls13record__t_DuplexCipherStateH_err() =
       let x = construct_fail() in bertie__tls13record__t_DuplexCipherStateH_default_value.
fun bertie__tls13record__DuplexCipherStateH(
      bertie__tls13crypto__t_AeadKeyIV,
      nat,
      bertie__tls13crypto__t_AeadKeyIV,
      nat
    )
    : bertie__tls13record__t_DuplexCipherStateH [data].
reduc forall 
  bertie__tls13record__f_sender_key_iv: bertie__tls13crypto__t_AeadKeyIV,
  bertie__tls13record__f_sender_counter: nat,
  bertie__tls13record__f_receiver_key_iv: bertie__tls13crypto__t_AeadKeyIV,
  bertie__tls13record__f_receiver_counter: nat
;
    accessor_bertie__tls13record__t_DuplexCipherStateH_bertie__tls13record__f_sender_key_iv(
      bertie__tls13record__DuplexCipherStateH(
        bertie__tls13record__f_sender_key_iv,
        bertie__tls13record__f_sender_counter,
        bertie__tls13record__f_receiver_key_iv,
        bertie__tls13record__f_receiver_counter
      )
    ) = bertie__tls13record__f_sender_key_iv.
reduc forall 
  bertie__tls13record__f_sender_key_iv: bertie__tls13crypto__t_AeadKeyIV,
  bertie__tls13record__f_sender_counter: nat,
  bertie__tls13record__f_receiver_key_iv: bertie__tls13crypto__t_AeadKeyIV,
  bertie__tls13record__f_receiver_counter: nat
;
    accessor_bertie__tls13record__t_DuplexCipherStateH_bertie__tls13record__f_sender_counter(
      bertie__tls13record__DuplexCipherStateH(
        bertie__tls13record__f_sender_key_iv,
        bertie__tls13record__f_sender_counter,
        bertie__tls13record__f_receiver_key_iv,
        bertie__tls13record__f_receiver_counter
      )
    ) = bertie__tls13record__f_sender_counter.
reduc forall 
  bertie__tls13record__f_sender_key_iv: bertie__tls13crypto__t_AeadKeyIV,
  bertie__tls13record__f_sender_counter: nat,
  bertie__tls13record__f_receiver_key_iv: bertie__tls13crypto__t_AeadKeyIV,
  bertie__tls13record__f_receiver_counter: nat
;
    accessor_bertie__tls13record__t_DuplexCipherStateH_bertie__tls13record__f_receiver_key_iv(
      bertie__tls13record__DuplexCipherStateH(
        bertie__tls13record__f_sender_key_iv,
        bertie__tls13record__f_sender_counter,
        bertie__tls13record__f_receiver_key_iv,
        bertie__tls13record__f_receiver_counter
      )
    ) = bertie__tls13record__f_receiver_key_iv.
reduc forall 
  bertie__tls13record__f_sender_key_iv: bertie__tls13crypto__t_AeadKeyIV,
  bertie__tls13record__f_sender_counter: nat,
  bertie__tls13record__f_receiver_key_iv: bertie__tls13crypto__t_AeadKeyIV,
  bertie__tls13record__f_receiver_counter: nat
;
    accessor_bertie__tls13record__t_DuplexCipherStateH_bertie__tls13record__f_receiver_counter(
      bertie__tls13record__DuplexCipherStateH(
        bertie__tls13record__f_sender_key_iv,
        bertie__tls13record__f_sender_counter,
        bertie__tls13record__f_receiver_key_iv,
        bertie__tls13record__f_receiver_counter
      )
    ) = bertie__tls13record__f_receiver_counter.

type bertie__tls13record__t_DuplexCipherState1.

fun bertie__tls13record__t_DuplexCipherState1_to_bitstring(
      bertie__tls13record__t_DuplexCipherState1
    )
    : bitstring [typeConverter].
fun bertie__tls13record__t_DuplexCipherState1_from_bitstring(bitstring)
    : bertie__tls13record__t_DuplexCipherState1 [typeConverter].
const bertie__tls13record__t_DuplexCipherState1_default_value: bertie__tls13record__t_DuplexCipherState1.
letfun bertie__tls13record__t_DuplexCipherState1_default() =
       bertie__tls13record__t_DuplexCipherState1_default_value.
letfun bertie__tls13record__t_DuplexCipherState1_err() =
       let x = construct_fail() in bertie__tls13record__t_DuplexCipherState1_default_value.
fun bertie__tls13record__DuplexCipherState1(
      bertie__tls13crypto__t_AeadAlgorithm,
      bertie__tls13crypto__t_AeadKeyIV,
      nat,
      bertie__tls13crypto__t_AeadKeyIV,
      nat,
      bertie__tls13keyscheduler__key_schedule__t_TagKey
    )
    : bertie__tls13record__t_DuplexCipherState1 [data].
reduc forall 
  bertie__tls13record__0: bertie__tls13crypto__t_AeadAlgorithm,
  bertie__tls13record__1: bertie__tls13crypto__t_AeadKeyIV,
  bertie__tls13record__2: nat,
  bertie__tls13record__3: bertie__tls13crypto__t_AeadKeyIV,
  bertie__tls13record__4: nat,
  bertie__tls13record__5: bertie__tls13keyscheduler__key_schedule__t_TagKey
;
    accessor_bertie__tls13record__t_DuplexCipherState1_bertie__tls13record__0(
      bertie__tls13record__DuplexCipherState1(
        bertie__tls13record__0,
        bertie__tls13record__1,
        bertie__tls13record__2,
        bertie__tls13record__3,
        bertie__tls13record__4,
        bertie__tls13record__5
      )
    ) = bertie__tls13record__0.
reduc forall 
  bertie__tls13record__0: bertie__tls13crypto__t_AeadAlgorithm,
  bertie__tls13record__1: bertie__tls13crypto__t_AeadKeyIV,
  bertie__tls13record__2: nat,
  bertie__tls13record__3: bertie__tls13crypto__t_AeadKeyIV,
  bertie__tls13record__4: nat,
  bertie__tls13record__5: bertie__tls13keyscheduler__key_schedule__t_TagKey
;
    accessor_bertie__tls13record__t_DuplexCipherState1_bertie__tls13record__1(
      bertie__tls13record__DuplexCipherState1(
        bertie__tls13record__0,
        bertie__tls13record__1,
        bertie__tls13record__2,
        bertie__tls13record__3,
        bertie__tls13record__4,
        bertie__tls13record__5
      )
    ) = bertie__tls13record__1.
reduc forall 
  bertie__tls13record__0: bertie__tls13crypto__t_AeadAlgorithm,
  bertie__tls13record__1: bertie__tls13crypto__t_AeadKeyIV,
  bertie__tls13record__2: nat,
  bertie__tls13record__3: bertie__tls13crypto__t_AeadKeyIV,
  bertie__tls13record__4: nat,
  bertie__tls13record__5: bertie__tls13keyscheduler__key_schedule__t_TagKey
;
    accessor_bertie__tls13record__t_DuplexCipherState1_bertie__tls13record__2(
      bertie__tls13record__DuplexCipherState1(
        bertie__tls13record__0,
        bertie__tls13record__1,
        bertie__tls13record__2,
        bertie__tls13record__3,
        bertie__tls13record__4,
        bertie__tls13record__5
      )
    ) = bertie__tls13record__2.
reduc forall 
  bertie__tls13record__0: bertie__tls13crypto__t_AeadAlgorithm,
  bertie__tls13record__1: bertie__tls13crypto__t_AeadKeyIV,
  bertie__tls13record__2: nat,
  bertie__tls13record__3: bertie__tls13crypto__t_AeadKeyIV,
  bertie__tls13record__4: nat,
  bertie__tls13record__5: bertie__tls13keyscheduler__key_schedule__t_TagKey
;
    accessor_bertie__tls13record__t_DuplexCipherState1_bertie__tls13record__3(
      bertie__tls13record__DuplexCipherState1(
        bertie__tls13record__0,
        bertie__tls13record__1,
        bertie__tls13record__2,
        bertie__tls13record__3,
        bertie__tls13record__4,
        bertie__tls13record__5
      )
    ) = bertie__tls13record__3.
reduc forall 
  bertie__tls13record__0: bertie__tls13crypto__t_AeadAlgorithm,
  bertie__tls13record__1: bertie__tls13crypto__t_AeadKeyIV,
  bertie__tls13record__2: nat,
  bertie__tls13record__3: bertie__tls13crypto__t_AeadKeyIV,
  bertie__tls13record__4: nat,
  bertie__tls13record__5: bertie__tls13keyscheduler__key_schedule__t_TagKey
;
    accessor_bertie__tls13record__t_DuplexCipherState1_bertie__tls13record__4(
      bertie__tls13record__DuplexCipherState1(
        bertie__tls13record__0,
        bertie__tls13record__1,
        bertie__tls13record__2,
        bertie__tls13record__3,
        bertie__tls13record__4,
        bertie__tls13record__5
      )
    ) = bertie__tls13record__4.
reduc forall 
  bertie__tls13record__0: bertie__tls13crypto__t_AeadAlgorithm,
  bertie__tls13record__1: bertie__tls13crypto__t_AeadKeyIV,
  bertie__tls13record__2: nat,
  bertie__tls13record__3: bertie__tls13crypto__t_AeadKeyIV,
  bertie__tls13record__4: nat,
  bertie__tls13record__5: bertie__tls13keyscheduler__key_schedule__t_TagKey
;
    accessor_bertie__tls13record__t_DuplexCipherState1_bertie__tls13record__5(
      bertie__tls13record__DuplexCipherState1(
        bertie__tls13record__0,
        bertie__tls13record__1,
        bertie__tls13record__2,
        bertie__tls13record__3,
        bertie__tls13record__4,
        bertie__tls13record__5
      )
    ) = bertie__tls13record__5.

type bertie__tls13formats__t_Transcript.

fun bertie__tls13formats__t_Transcript_to_bitstring(
      bertie__tls13formats__t_Transcript
    )
    : bitstring [typeConverter].
fun bertie__tls13formats__t_Transcript_from_bitstring(bitstring)
    : bertie__tls13formats__t_Transcript [typeConverter].
const bertie__tls13formats__t_Transcript_default_value: bertie__tls13formats__t_Transcript.
letfun bertie__tls13formats__t_Transcript_default() =
       bertie__tls13formats__t_Transcript_default_value.
letfun bertie__tls13formats__t_Transcript_err() =
       let x = construct_fail() in bertie__tls13formats__t_Transcript_default_value.
fun bertie__tls13formats__Transcript(
      bertie__tls13crypto__t_HashAlgorithm,
      bertie__tls13formats__handshake_data__t_HandshakeData
    )
    : bertie__tls13formats__t_Transcript [data].
reduc forall 
  bertie__tls13formats__f_hash_algorithm: bertie__tls13crypto__t_HashAlgorithm,
  bertie__tls13formats__f_transcript: bertie__tls13formats__handshake_data__t_HandshakeData
;
    accessor_bertie__tls13formats__t_Transcript_bertie__tls13formats__f_hash_algorithm(
      bertie__tls13formats__Transcript(
        bertie__tls13formats__f_hash_algorithm,
        bertie__tls13formats__f_transcript
      )
    ) = bertie__tls13formats__f_hash_algorithm.
reduc forall 
  bertie__tls13formats__f_hash_algorithm: bertie__tls13crypto__t_HashAlgorithm,
  bertie__tls13formats__f_transcript: bertie__tls13formats__handshake_data__t_HandshakeData
;
    accessor_bertie__tls13formats__t_Transcript_bertie__tls13formats__f_transcript(
      bertie__tls13formats__Transcript(
        bertie__tls13formats__f_hash_algorithm,
        bertie__tls13formats__f_transcript
      )
    ) = bertie__tls13formats__f_transcript.

type bertie__tls13cert__t_CertificateKey.

fun bertie__tls13cert__t_CertificateKey_to_bitstring(
      bertie__tls13cert__t_CertificateKey
    )
    : bitstring [typeConverter].
fun bertie__tls13cert__t_CertificateKey_from_bitstring(bitstring)
    : bertie__tls13cert__t_CertificateKey [typeConverter].
const bertie__tls13cert__t_CertificateKey_default_value: bertie__tls13cert__t_CertificateKey.
letfun bertie__tls13cert__t_CertificateKey_default() =
       bertie__tls13cert__t_CertificateKey_default_value.
letfun bertie__tls13cert__t_CertificateKey_err() =
       let x = construct_fail() in bertie__tls13cert__t_CertificateKey_default_value.
fun bertie__tls13cert__CertificateKey(nat, nat)
    : bertie__tls13cert__t_CertificateKey [data].
reduc forall bertie__tls13cert__0: nat, bertie__tls13cert__1: nat;
    accessor_bertie__tls13cert__t_CertificateKey_bertie__tls13cert__0(
      bertie__tls13cert__CertificateKey(
        bertie__tls13cert__0, bertie__tls13cert__1
      )
    ) = bertie__tls13cert__0.
reduc forall bertie__tls13cert__0: nat, bertie__tls13cert__1: nat;
    accessor_bertie__tls13cert__t_CertificateKey_bertie__tls13cert__1(
      bertie__tls13cert__CertificateKey(
        bertie__tls13cert__0, bertie__tls13cert__1
      )
    ) = bertie__tls13cert__1.

type bertie__server__t_ServerDB.

fun bertie__server__t_ServerDB_to_bitstring(bertie__server__t_ServerDB)
    : bitstring [typeConverter].
fun bertie__server__t_ServerDB_from_bitstring(bitstring)
    : bertie__server__t_ServerDB [typeConverter].
const bertie__server__t_ServerDB_default_value: bertie__server__t_ServerDB.
letfun bertie__server__t_ServerDB_default() =
       bertie__server__t_ServerDB_default_value.
letfun bertie__server__t_ServerDB_err() =
       let x = construct_fail() in bertie__server__t_ServerDB_default_value.
fun bertie__server__ServerDB(
      bertie__tls13utils__t_Bytes,
      bertie__tls13utils__t_Bytes,
      bertie__tls13utils__t_Bytes,
      Option
    )
    : bertie__server__t_ServerDB [data].
reduc forall 
  bertie__server__f_server_name: bertie__tls13utils__t_Bytes,
  bertie__server__f_cert: bertie__tls13utils__t_Bytes,
  bertie__server__f_sk: bertie__tls13utils__t_Bytes,
  bertie__server__f_psk_opt: Option
;
    accessor_bertie__server__t_ServerDB_bertie__server__f_server_name(
      bertie__server__ServerDB(
        bertie__server__f_server_name,
        bertie__server__f_cert,
        bertie__server__f_sk,
        bertie__server__f_psk_opt
      )
    ) = bertie__server__f_server_name.
reduc forall 
  bertie__server__f_server_name: bertie__tls13utils__t_Bytes,
  bertie__server__f_cert: bertie__tls13utils__t_Bytes,
  bertie__server__f_sk: bertie__tls13utils__t_Bytes,
  bertie__server__f_psk_opt: Option
;
    accessor_bertie__server__t_ServerDB_bertie__server__f_cert(
      bertie__server__ServerDB(
        bertie__server__f_server_name,
        bertie__server__f_cert,
        bertie__server__f_sk,
        bertie__server__f_psk_opt
      )
    ) = bertie__server__f_cert.
reduc forall 
  bertie__server__f_server_name: bertie__tls13utils__t_Bytes,
  bertie__server__f_cert: bertie__tls13utils__t_Bytes,
  bertie__server__f_sk: bertie__tls13utils__t_Bytes,
  bertie__server__f_psk_opt: Option
;
    accessor_bertie__server__t_ServerDB_bertie__server__f_sk(
      bertie__server__ServerDB(
        bertie__server__f_server_name,
        bertie__server__f_cert,
        bertie__server__f_sk,
        bertie__server__f_psk_opt
      )
    ) = bertie__server__f_sk.
reduc forall 
  bertie__server__f_server_name: bertie__tls13utils__t_Bytes,
  bertie__server__f_cert: bertie__tls13utils__t_Bytes,
  bertie__server__f_sk: bertie__tls13utils__t_Bytes,
  bertie__server__f_psk_opt: Option
;
    accessor_bertie__server__t_ServerDB_bertie__server__f_psk_opt(
      bertie__server__ServerDB(
        bertie__server__f_server_name,
        bertie__server__f_cert,
        bertie__server__f_sk,
        bertie__server__f_psk_opt
      )
    ) = bertie__server__f_psk_opt.

type bertie__server__t_ServerInfo.

fun bertie__server__t_ServerInfo_to_bitstring(bertie__server__t_ServerInfo)
    : bitstring [typeConverter].
fun bertie__server__t_ServerInfo_from_bitstring(bitstring)
    : bertie__server__t_ServerInfo [typeConverter].
const bertie__server__t_ServerInfo_default_value: bertie__server__t_ServerInfo.
letfun bertie__server__t_ServerInfo_default() =
       bertie__server__t_ServerInfo_default_value.
letfun bertie__server__t_ServerInfo_err() =
       let x = construct_fail() in bertie__server__t_ServerInfo_default_value.
fun bertie__server__ServerInfo(
      bertie__tls13utils__t_Bytes, bertie__tls13utils__t_Bytes, Option
    )
    : bertie__server__t_ServerInfo [data].
reduc forall 
  bertie__server__f_cert: bertie__tls13utils__t_Bytes,
  bertie__server__f_sk: bertie__tls13utils__t_Bytes,
  bertie__server__f_psk_opt: Option
;
    accessor_bertie__server__t_ServerInfo_bertie__server__f_cert(
      bertie__server__ServerInfo(
        bertie__server__f_cert, bertie__server__f_sk, bertie__server__f_psk_opt
      )
    ) = bertie__server__f_cert.
reduc forall 
  bertie__server__f_cert: bertie__tls13utils__t_Bytes,
  bertie__server__f_sk: bertie__tls13utils__t_Bytes,
  bertie__server__f_psk_opt: Option
;
    accessor_bertie__server__t_ServerInfo_bertie__server__f_sk(
      bertie__server__ServerInfo(
        bertie__server__f_cert, bertie__server__f_sk, bertie__server__f_psk_opt
      )
    ) = bertie__server__f_sk.
reduc forall 
  bertie__server__f_cert: bertie__tls13utils__t_Bytes,
  bertie__server__f_sk: bertie__tls13utils__t_Bytes,
  bertie__server__f_psk_opt: Option
;
    accessor_bertie__server__t_ServerInfo_bertie__server__f_psk_opt(
      bertie__server__ServerInfo(
        bertie__server__f_cert, bertie__server__f_sk, bertie__server__f_psk_opt
      )
    ) = bertie__server__f_psk_opt.

type bertie__tls13handshake__t_ClientPostClientHello.

fun bertie__tls13handshake__t_ClientPostClientHello_to_bitstring(
      bertie__tls13handshake__t_ClientPostClientHello
    )
    : bitstring [typeConverter].
fun bertie__tls13handshake__t_ClientPostClientHello_from_bitstring(bitstring)
    : bertie__tls13handshake__t_ClientPostClientHello [typeConverter].
const bertie__tls13handshake__t_ClientPostClientHello_default_value: bertie__tls13handshake__t_ClientPostClientHello.
letfun bertie__tls13handshake__t_ClientPostClientHello_default() =
       bertie__tls13handshake__t_ClientPostClientHello_default_value.
letfun bertie__tls13handshake__t_ClientPostClientHello_err() =
       let x = construct_fail() in bertie__tls13handshake__t_ClientPostClientHello_default_value.
fun bertie__tls13handshake__ClientPostClientHello(
      bertie__tls13utils__t_Bytes,
      bertie__tls13crypto__t_Algorithms,
      bertie__tls13utils__t_Bytes,
      Option,
      bertie__tls13formats__t_Transcript
    )
    : bertie__tls13handshake__t_ClientPostClientHello [data].
reduc forall 
  bertie__tls13handshake__0: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__1: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__2: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__3: Option,
  bertie__tls13handshake__4: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__t_ClientPostClientHello_bertie__tls13handshake__0(
      bertie__tls13handshake__ClientPostClientHello(
        bertie__tls13handshake__0,
        bertie__tls13handshake__1,
        bertie__tls13handshake__2,
        bertie__tls13handshake__3,
        bertie__tls13handshake__4
      )
    ) = bertie__tls13handshake__0.
reduc forall 
  bertie__tls13handshake__0: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__1: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__2: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__3: Option,
  bertie__tls13handshake__4: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__t_ClientPostClientHello_bertie__tls13handshake__1(
      bertie__tls13handshake__ClientPostClientHello(
        bertie__tls13handshake__0,
        bertie__tls13handshake__1,
        bertie__tls13handshake__2,
        bertie__tls13handshake__3,
        bertie__tls13handshake__4
      )
    ) = bertie__tls13handshake__1.
reduc forall 
  bertie__tls13handshake__0: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__1: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__2: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__3: Option,
  bertie__tls13handshake__4: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__t_ClientPostClientHello_bertie__tls13handshake__2(
      bertie__tls13handshake__ClientPostClientHello(
        bertie__tls13handshake__0,
        bertie__tls13handshake__1,
        bertie__tls13handshake__2,
        bertie__tls13handshake__3,
        bertie__tls13handshake__4
      )
    ) = bertie__tls13handshake__2.
reduc forall 
  bertie__tls13handshake__0: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__1: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__2: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__3: Option,
  bertie__tls13handshake__4: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__t_ClientPostClientHello_bertie__tls13handshake__3(
      bertie__tls13handshake__ClientPostClientHello(
        bertie__tls13handshake__0,
        bertie__tls13handshake__1,
        bertie__tls13handshake__2,
        bertie__tls13handshake__3,
        bertie__tls13handshake__4
      )
    ) = bertie__tls13handshake__3.
reduc forall 
  bertie__tls13handshake__0: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__1: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__2: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__3: Option,
  bertie__tls13handshake__4: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__t_ClientPostClientHello_bertie__tls13handshake__4(
      bertie__tls13handshake__ClientPostClientHello(
        bertie__tls13handshake__0,
        bertie__tls13handshake__1,
        bertie__tls13handshake__2,
        bertie__tls13handshake__3,
        bertie__tls13handshake__4
      )
    ) = bertie__tls13handshake__4.

type bertie__tls13handshake__t_ClientPostServerHello.

fun bertie__tls13handshake__t_ClientPostServerHello_to_bitstring(
      bertie__tls13handshake__t_ClientPostServerHello
    )
    : bitstring [typeConverter].
fun bertie__tls13handshake__t_ClientPostServerHello_from_bitstring(bitstring)
    : bertie__tls13handshake__t_ClientPostServerHello [typeConverter].
const bertie__tls13handshake__t_ClientPostServerHello_default_value: bertie__tls13handshake__t_ClientPostServerHello.
letfun bertie__tls13handshake__t_ClientPostServerHello_default() =
       bertie__tls13handshake__t_ClientPostServerHello_default_value.
letfun bertie__tls13handshake__t_ClientPostServerHello_err() =
       let x = construct_fail() in bertie__tls13handshake__t_ClientPostServerHello_default_value.
fun bertie__tls13handshake__ClientPostServerHello(
      bertie__tls13utils__t_Bytes,
      bertie__tls13utils__t_Bytes,
      bertie__tls13crypto__t_Algorithms,
      bertie__tls13keyscheduler__key_schedule__t_Handle,
      bertie__tls13utils__t_Bytes,
      bertie__tls13utils__t_Bytes,
      bertie__tls13formats__t_Transcript
    )
    : bertie__tls13handshake__t_ClientPostServerHello [data].
reduc forall 
  bertie__tls13handshake__0: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__1: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__2: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__3: bertie__tls13keyscheduler__key_schedule__t_Handle,
  bertie__tls13handshake__4: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__5: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__6: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__t_ClientPostServerHello_bertie__tls13handshake__0(
      bertie__tls13handshake__ClientPostServerHello(
        bertie__tls13handshake__0,
        bertie__tls13handshake__1,
        bertie__tls13handshake__2,
        bertie__tls13handshake__3,
        bertie__tls13handshake__4,
        bertie__tls13handshake__5,
        bertie__tls13handshake__6
      )
    ) = bertie__tls13handshake__0.
reduc forall 
  bertie__tls13handshake__0: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__1: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__2: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__3: bertie__tls13keyscheduler__key_schedule__t_Handle,
  bertie__tls13handshake__4: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__5: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__6: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__t_ClientPostServerHello_bertie__tls13handshake__1(
      bertie__tls13handshake__ClientPostServerHello(
        bertie__tls13handshake__0,
        bertie__tls13handshake__1,
        bertie__tls13handshake__2,
        bertie__tls13handshake__3,
        bertie__tls13handshake__4,
        bertie__tls13handshake__5,
        bertie__tls13handshake__6
      )
    ) = bertie__tls13handshake__1.
reduc forall 
  bertie__tls13handshake__0: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__1: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__2: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__3: bertie__tls13keyscheduler__key_schedule__t_Handle,
  bertie__tls13handshake__4: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__5: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__6: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__t_ClientPostServerHello_bertie__tls13handshake__2(
      bertie__tls13handshake__ClientPostServerHello(
        bertie__tls13handshake__0,
        bertie__tls13handshake__1,
        bertie__tls13handshake__2,
        bertie__tls13handshake__3,
        bertie__tls13handshake__4,
        bertie__tls13handshake__5,
        bertie__tls13handshake__6
      )
    ) = bertie__tls13handshake__2.
reduc forall 
  bertie__tls13handshake__0: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__1: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__2: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__3: bertie__tls13keyscheduler__key_schedule__t_Handle,
  bertie__tls13handshake__4: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__5: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__6: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__t_ClientPostServerHello_bertie__tls13handshake__3(
      bertie__tls13handshake__ClientPostServerHello(
        bertie__tls13handshake__0,
        bertie__tls13handshake__1,
        bertie__tls13handshake__2,
        bertie__tls13handshake__3,
        bertie__tls13handshake__4,
        bertie__tls13handshake__5,
        bertie__tls13handshake__6
      )
    ) = bertie__tls13handshake__3.
reduc forall 
  bertie__tls13handshake__0: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__1: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__2: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__3: bertie__tls13keyscheduler__key_schedule__t_Handle,
  bertie__tls13handshake__4: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__5: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__6: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__t_ClientPostServerHello_bertie__tls13handshake__4(
      bertie__tls13handshake__ClientPostServerHello(
        bertie__tls13handshake__0,
        bertie__tls13handshake__1,
        bertie__tls13handshake__2,
        bertie__tls13handshake__3,
        bertie__tls13handshake__4,
        bertie__tls13handshake__5,
        bertie__tls13handshake__6
      )
    ) = bertie__tls13handshake__4.
reduc forall 
  bertie__tls13handshake__0: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__1: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__2: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__3: bertie__tls13keyscheduler__key_schedule__t_Handle,
  bertie__tls13handshake__4: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__5: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__6: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__t_ClientPostServerHello_bertie__tls13handshake__5(
      bertie__tls13handshake__ClientPostServerHello(
        bertie__tls13handshake__0,
        bertie__tls13handshake__1,
        bertie__tls13handshake__2,
        bertie__tls13handshake__3,
        bertie__tls13handshake__4,
        bertie__tls13handshake__5,
        bertie__tls13handshake__6
      )
    ) = bertie__tls13handshake__5.
reduc forall 
  bertie__tls13handshake__0: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__1: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__2: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__3: bertie__tls13keyscheduler__key_schedule__t_Handle,
  bertie__tls13handshake__4: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__5: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__6: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__t_ClientPostServerHello_bertie__tls13handshake__6(
      bertie__tls13handshake__ClientPostServerHello(
        bertie__tls13handshake__0,
        bertie__tls13handshake__1,
        bertie__tls13handshake__2,
        bertie__tls13handshake__3,
        bertie__tls13handshake__4,
        bertie__tls13handshake__5,
        bertie__tls13handshake__6
      )
    ) = bertie__tls13handshake__6.

type bertie__tls13handshake__t_ClientPostCertificateVerify.

fun bertie__tls13handshake__t_ClientPostCertificateVerify_to_bitstring(
      bertie__tls13handshake__t_ClientPostCertificateVerify
    )
    : bitstring [typeConverter].
fun bertie__tls13handshake__t_ClientPostCertificateVerify_from_bitstring(
      bitstring
    )
    : bertie__tls13handshake__t_ClientPostCertificateVerify [typeConverter].
const bertie__tls13handshake__t_ClientPostCertificateVerify_default_value: bertie__tls13handshake__t_ClientPostCertificateVerify.
letfun bertie__tls13handshake__t_ClientPostCertificateVerify_default() =
       bertie__tls13handshake__t_ClientPostCertificateVerify_default_value.
letfun bertie__tls13handshake__t_ClientPostCertificateVerify_err() =
       let x = construct_fail() in bertie__tls13handshake__t_ClientPostCertificateVerify_default_value.
fun bertie__tls13handshake__ClientPostCertificateVerify(
      bertie__tls13utils__t_Bytes,
      bertie__tls13utils__t_Bytes,
      bertie__tls13crypto__t_Algorithms,
      bertie__tls13keyscheduler__key_schedule__t_Handle,
      bertie__tls13utils__t_Bytes,
      bertie__tls13utils__t_Bytes,
      bertie__tls13formats__t_Transcript
    )
    : bertie__tls13handshake__t_ClientPostCertificateVerify [data].
reduc forall 
  bertie__tls13handshake__0: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__1: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__2: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__3: bertie__tls13keyscheduler__key_schedule__t_Handle,
  bertie__tls13handshake__4: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__5: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__6: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__t_ClientPostCertificateVerify_bertie__tls13handshake__0(
      bertie__tls13handshake__ClientPostCertificateVerify(
        bertie__tls13handshake__0,
        bertie__tls13handshake__1,
        bertie__tls13handshake__2,
        bertie__tls13handshake__3,
        bertie__tls13handshake__4,
        bertie__tls13handshake__5,
        bertie__tls13handshake__6
      )
    ) = bertie__tls13handshake__0.
reduc forall 
  bertie__tls13handshake__0: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__1: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__2: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__3: bertie__tls13keyscheduler__key_schedule__t_Handle,
  bertie__tls13handshake__4: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__5: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__6: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__t_ClientPostCertificateVerify_bertie__tls13handshake__1(
      bertie__tls13handshake__ClientPostCertificateVerify(
        bertie__tls13handshake__0,
        bertie__tls13handshake__1,
        bertie__tls13handshake__2,
        bertie__tls13handshake__3,
        bertie__tls13handshake__4,
        bertie__tls13handshake__5,
        bertie__tls13handshake__6
      )
    ) = bertie__tls13handshake__1.
reduc forall 
  bertie__tls13handshake__0: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__1: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__2: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__3: bertie__tls13keyscheduler__key_schedule__t_Handle,
  bertie__tls13handshake__4: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__5: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__6: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__t_ClientPostCertificateVerify_bertie__tls13handshake__2(
      bertie__tls13handshake__ClientPostCertificateVerify(
        bertie__tls13handshake__0,
        bertie__tls13handshake__1,
        bertie__tls13handshake__2,
        bertie__tls13handshake__3,
        bertie__tls13handshake__4,
        bertie__tls13handshake__5,
        bertie__tls13handshake__6
      )
    ) = bertie__tls13handshake__2.
reduc forall 
  bertie__tls13handshake__0: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__1: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__2: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__3: bertie__tls13keyscheduler__key_schedule__t_Handle,
  bertie__tls13handshake__4: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__5: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__6: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__t_ClientPostCertificateVerify_bertie__tls13handshake__3(
      bertie__tls13handshake__ClientPostCertificateVerify(
        bertie__tls13handshake__0,
        bertie__tls13handshake__1,
        bertie__tls13handshake__2,
        bertie__tls13handshake__3,
        bertie__tls13handshake__4,
        bertie__tls13handshake__5,
        bertie__tls13handshake__6
      )
    ) = bertie__tls13handshake__3.
reduc forall 
  bertie__tls13handshake__0: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__1: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__2: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__3: bertie__tls13keyscheduler__key_schedule__t_Handle,
  bertie__tls13handshake__4: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__5: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__6: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__t_ClientPostCertificateVerify_bertie__tls13handshake__4(
      bertie__tls13handshake__ClientPostCertificateVerify(
        bertie__tls13handshake__0,
        bertie__tls13handshake__1,
        bertie__tls13handshake__2,
        bertie__tls13handshake__3,
        bertie__tls13handshake__4,
        bertie__tls13handshake__5,
        bertie__tls13handshake__6
      )
    ) = bertie__tls13handshake__4.
reduc forall 
  bertie__tls13handshake__0: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__1: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__2: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__3: bertie__tls13keyscheduler__key_schedule__t_Handle,
  bertie__tls13handshake__4: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__5: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__6: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__t_ClientPostCertificateVerify_bertie__tls13handshake__5(
      bertie__tls13handshake__ClientPostCertificateVerify(
        bertie__tls13handshake__0,
        bertie__tls13handshake__1,
        bertie__tls13handshake__2,
        bertie__tls13handshake__3,
        bertie__tls13handshake__4,
        bertie__tls13handshake__5,
        bertie__tls13handshake__6
      )
    ) = bertie__tls13handshake__5.
reduc forall 
  bertie__tls13handshake__0: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__1: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__2: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__3: bertie__tls13keyscheduler__key_schedule__t_Handle,
  bertie__tls13handshake__4: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__5: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__6: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__t_ClientPostCertificateVerify_bertie__tls13handshake__6(
      bertie__tls13handshake__ClientPostCertificateVerify(
        bertie__tls13handshake__0,
        bertie__tls13handshake__1,
        bertie__tls13handshake__2,
        bertie__tls13handshake__3,
        bertie__tls13handshake__4,
        bertie__tls13handshake__5,
        bertie__tls13handshake__6
      )
    ) = bertie__tls13handshake__6.

type bertie__tls13handshake__t_ClientPostServerFinished.

fun bertie__tls13handshake__t_ClientPostServerFinished_to_bitstring(
      bertie__tls13handshake__t_ClientPostServerFinished
    )
    : bitstring [typeConverter].
fun bertie__tls13handshake__t_ClientPostServerFinished_from_bitstring(bitstring)
    : bertie__tls13handshake__t_ClientPostServerFinished [typeConverter].
const bertie__tls13handshake__t_ClientPostServerFinished_default_value: bertie__tls13handshake__t_ClientPostServerFinished.
letfun bertie__tls13handshake__t_ClientPostServerFinished_default() =
       bertie__tls13handshake__t_ClientPostServerFinished_default_value.
letfun bertie__tls13handshake__t_ClientPostServerFinished_err() =
       let x = construct_fail() in bertie__tls13handshake__t_ClientPostServerFinished_default_value.
fun bertie__tls13handshake__ClientPostServerFinished(
      bertie__tls13utils__t_Bytes,
      bertie__tls13utils__t_Bytes,
      bertie__tls13crypto__t_Algorithms,
      bertie__tls13keyscheduler__key_schedule__t_Handle,
      bertie__tls13utils__t_Bytes,
      bertie__tls13formats__t_Transcript
    )
    : bertie__tls13handshake__t_ClientPostServerFinished [data].
reduc forall 
  bertie__tls13handshake__0: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__1: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__2: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__3: bertie__tls13keyscheduler__key_schedule__t_Handle,
  bertie__tls13handshake__4: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__5: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__t_ClientPostServerFinished_bertie__tls13handshake__0(
      bertie__tls13handshake__ClientPostServerFinished(
        bertie__tls13handshake__0,
        bertie__tls13handshake__1,
        bertie__tls13handshake__2,
        bertie__tls13handshake__3,
        bertie__tls13handshake__4,
        bertie__tls13handshake__5
      )
    ) = bertie__tls13handshake__0.
reduc forall 
  bertie__tls13handshake__0: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__1: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__2: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__3: bertie__tls13keyscheduler__key_schedule__t_Handle,
  bertie__tls13handshake__4: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__5: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__t_ClientPostServerFinished_bertie__tls13handshake__1(
      bertie__tls13handshake__ClientPostServerFinished(
        bertie__tls13handshake__0,
        bertie__tls13handshake__1,
        bertie__tls13handshake__2,
        bertie__tls13handshake__3,
        bertie__tls13handshake__4,
        bertie__tls13handshake__5
      )
    ) = bertie__tls13handshake__1.
reduc forall 
  bertie__tls13handshake__0: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__1: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__2: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__3: bertie__tls13keyscheduler__key_schedule__t_Handle,
  bertie__tls13handshake__4: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__5: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__t_ClientPostServerFinished_bertie__tls13handshake__2(
      bertie__tls13handshake__ClientPostServerFinished(
        bertie__tls13handshake__0,
        bertie__tls13handshake__1,
        bertie__tls13handshake__2,
        bertie__tls13handshake__3,
        bertie__tls13handshake__4,
        bertie__tls13handshake__5
      )
    ) = bertie__tls13handshake__2.
reduc forall 
  bertie__tls13handshake__0: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__1: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__2: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__3: bertie__tls13keyscheduler__key_schedule__t_Handle,
  bertie__tls13handshake__4: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__5: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__t_ClientPostServerFinished_bertie__tls13handshake__3(
      bertie__tls13handshake__ClientPostServerFinished(
        bertie__tls13handshake__0,
        bertie__tls13handshake__1,
        bertie__tls13handshake__2,
        bertie__tls13handshake__3,
        bertie__tls13handshake__4,
        bertie__tls13handshake__5
      )
    ) = bertie__tls13handshake__3.
reduc forall 
  bertie__tls13handshake__0: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__1: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__2: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__3: bertie__tls13keyscheduler__key_schedule__t_Handle,
  bertie__tls13handshake__4: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__5: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__t_ClientPostServerFinished_bertie__tls13handshake__4(
      bertie__tls13handshake__ClientPostServerFinished(
        bertie__tls13handshake__0,
        bertie__tls13handshake__1,
        bertie__tls13handshake__2,
        bertie__tls13handshake__3,
        bertie__tls13handshake__4,
        bertie__tls13handshake__5
      )
    ) = bertie__tls13handshake__4.
reduc forall 
  bertie__tls13handshake__0: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__1: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__2: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__3: bertie__tls13keyscheduler__key_schedule__t_Handle,
  bertie__tls13handshake__4: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__5: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__t_ClientPostServerFinished_bertie__tls13handshake__5(
      bertie__tls13handshake__ClientPostServerFinished(
        bertie__tls13handshake__0,
        bertie__tls13handshake__1,
        bertie__tls13handshake__2,
        bertie__tls13handshake__3,
        bertie__tls13handshake__4,
        bertie__tls13handshake__5
      )
    ) = bertie__tls13handshake__5.

type bertie__tls13handshake__t_ClientPostClientFinished.

fun bertie__tls13handshake__t_ClientPostClientFinished_to_bitstring(
      bertie__tls13handshake__t_ClientPostClientFinished
    )
    : bitstring [typeConverter].
fun bertie__tls13handshake__t_ClientPostClientFinished_from_bitstring(bitstring)
    : bertie__tls13handshake__t_ClientPostClientFinished [typeConverter].
const bertie__tls13handshake__t_ClientPostClientFinished_default_value: bertie__tls13handshake__t_ClientPostClientFinished.
letfun bertie__tls13handshake__t_ClientPostClientFinished_default() =
       bertie__tls13handshake__t_ClientPostClientFinished_default_value.
letfun bertie__tls13handshake__t_ClientPostClientFinished_err() =
       let x = construct_fail() in bertie__tls13handshake__t_ClientPostClientFinished_default_value.
fun bertie__tls13handshake__ClientPostClientFinished(
      bertie__tls13utils__t_Bytes,
      bertie__tls13utils__t_Bytes,
      bertie__tls13crypto__t_Algorithms,
      bertie__tls13keyscheduler__key_schedule__t_Handle,
      bertie__tls13formats__t_Transcript
    )
    : bertie__tls13handshake__t_ClientPostClientFinished [data].
reduc forall 
  bertie__tls13handshake__0: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__1: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__2: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__3: bertie__tls13keyscheduler__key_schedule__t_Handle,
  bertie__tls13handshake__4: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__t_ClientPostClientFinished_bertie__tls13handshake__0(
      bertie__tls13handshake__ClientPostClientFinished(
        bertie__tls13handshake__0,
        bertie__tls13handshake__1,
        bertie__tls13handshake__2,
        bertie__tls13handshake__3,
        bertie__tls13handshake__4
      )
    ) = bertie__tls13handshake__0.
reduc forall 
  bertie__tls13handshake__0: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__1: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__2: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__3: bertie__tls13keyscheduler__key_schedule__t_Handle,
  bertie__tls13handshake__4: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__t_ClientPostClientFinished_bertie__tls13handshake__1(
      bertie__tls13handshake__ClientPostClientFinished(
        bertie__tls13handshake__0,
        bertie__tls13handshake__1,
        bertie__tls13handshake__2,
        bertie__tls13handshake__3,
        bertie__tls13handshake__4
      )
    ) = bertie__tls13handshake__1.
reduc forall 
  bertie__tls13handshake__0: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__1: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__2: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__3: bertie__tls13keyscheduler__key_schedule__t_Handle,
  bertie__tls13handshake__4: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__t_ClientPostClientFinished_bertie__tls13handshake__2(
      bertie__tls13handshake__ClientPostClientFinished(
        bertie__tls13handshake__0,
        bertie__tls13handshake__1,
        bertie__tls13handshake__2,
        bertie__tls13handshake__3,
        bertie__tls13handshake__4
      )
    ) = bertie__tls13handshake__2.
reduc forall 
  bertie__tls13handshake__0: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__1: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__2: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__3: bertie__tls13keyscheduler__key_schedule__t_Handle,
  bertie__tls13handshake__4: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__t_ClientPostClientFinished_bertie__tls13handshake__3(
      bertie__tls13handshake__ClientPostClientFinished(
        bertie__tls13handshake__0,
        bertie__tls13handshake__1,
        bertie__tls13handshake__2,
        bertie__tls13handshake__3,
        bertie__tls13handshake__4
      )
    ) = bertie__tls13handshake__3.
reduc forall 
  bertie__tls13handshake__0: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__1: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__2: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__3: bertie__tls13keyscheduler__key_schedule__t_Handle,
  bertie__tls13handshake__4: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__t_ClientPostClientFinished_bertie__tls13handshake__4(
      bertie__tls13handshake__ClientPostClientFinished(
        bertie__tls13handshake__0,
        bertie__tls13handshake__1,
        bertie__tls13handshake__2,
        bertie__tls13handshake__3,
        bertie__tls13handshake__4
      )
    ) = bertie__tls13handshake__4.

type bertie__tls13handshake__t_ServerPostClientHello.

fun bertie__tls13handshake__t_ServerPostClientHello_to_bitstring(
      bertie__tls13handshake__t_ServerPostClientHello
    )
    : bitstring [typeConverter].
fun bertie__tls13handshake__t_ServerPostClientHello_from_bitstring(bitstring)
    : bertie__tls13handshake__t_ServerPostClientHello [typeConverter].
const bertie__tls13handshake__t_ServerPostClientHello_default_value: bertie__tls13handshake__t_ServerPostClientHello.
letfun bertie__tls13handshake__t_ServerPostClientHello_default() =
       bertie__tls13handshake__t_ServerPostClientHello_default_value.
letfun bertie__tls13handshake__t_ServerPostClientHello_err() =
       let x = construct_fail() in bertie__tls13handshake__t_ServerPostClientHello_default_value.
fun bertie__tls13handshake__ServerPostClientHello(
      bertie__tls13utils__t_Bytes,
      bertie__tls13crypto__t_Algorithms,
      bertie__tls13utils__t_Bytes,
      bertie__tls13utils__t_Bytes,
      bertie__server__t_ServerInfo,
      bertie__tls13formats__t_Transcript
    )
    : bertie__tls13handshake__t_ServerPostClientHello [data].
reduc forall 
  bertie__tls13handshake__f_client_randomness: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__f_ciphersuite: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__f_session_id: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__f_gx: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__f_server: bertie__server__t_ServerInfo,
  bertie__tls13handshake__f_transcript: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__t_ServerPostClientHello_bertie__tls13handshake__f_client_randomness(
      bertie__tls13handshake__ServerPostClientHello(
        bertie__tls13handshake__f_client_randomness,
        bertie__tls13handshake__f_ciphersuite,
        bertie__tls13handshake__f_session_id,
        bertie__tls13handshake__f_gx,
        bertie__tls13handshake__f_server,
        bertie__tls13handshake__f_transcript
      )
    ) = bertie__tls13handshake__f_client_randomness.
reduc forall 
  bertie__tls13handshake__f_client_randomness: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__f_ciphersuite: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__f_session_id: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__f_gx: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__f_server: bertie__server__t_ServerInfo,
  bertie__tls13handshake__f_transcript: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__t_ServerPostClientHello_bertie__tls13handshake__f_ciphersuite(
      bertie__tls13handshake__ServerPostClientHello(
        bertie__tls13handshake__f_client_randomness,
        bertie__tls13handshake__f_ciphersuite,
        bertie__tls13handshake__f_session_id,
        bertie__tls13handshake__f_gx,
        bertie__tls13handshake__f_server,
        bertie__tls13handshake__f_transcript
      )
    ) = bertie__tls13handshake__f_ciphersuite.
reduc forall 
  bertie__tls13handshake__f_client_randomness: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__f_ciphersuite: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__f_session_id: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__f_gx: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__f_server: bertie__server__t_ServerInfo,
  bertie__tls13handshake__f_transcript: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__t_ServerPostClientHello_bertie__tls13handshake__f_session_id(
      bertie__tls13handshake__ServerPostClientHello(
        bertie__tls13handshake__f_client_randomness,
        bertie__tls13handshake__f_ciphersuite,
        bertie__tls13handshake__f_session_id,
        bertie__tls13handshake__f_gx,
        bertie__tls13handshake__f_server,
        bertie__tls13handshake__f_transcript
      )
    ) = bertie__tls13handshake__f_session_id.
reduc forall 
  bertie__tls13handshake__f_client_randomness: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__f_ciphersuite: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__f_session_id: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__f_gx: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__f_server: bertie__server__t_ServerInfo,
  bertie__tls13handshake__f_transcript: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__t_ServerPostClientHello_bertie__tls13handshake__f_gx(
      bertie__tls13handshake__ServerPostClientHello(
        bertie__tls13handshake__f_client_randomness,
        bertie__tls13handshake__f_ciphersuite,
        bertie__tls13handshake__f_session_id,
        bertie__tls13handshake__f_gx,
        bertie__tls13handshake__f_server,
        bertie__tls13handshake__f_transcript
      )
    ) = bertie__tls13handshake__f_gx.
reduc forall 
  bertie__tls13handshake__f_client_randomness: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__f_ciphersuite: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__f_session_id: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__f_gx: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__f_server: bertie__server__t_ServerInfo,
  bertie__tls13handshake__f_transcript: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__t_ServerPostClientHello_bertie__tls13handshake__f_server(
      bertie__tls13handshake__ServerPostClientHello(
        bertie__tls13handshake__f_client_randomness,
        bertie__tls13handshake__f_ciphersuite,
        bertie__tls13handshake__f_session_id,
        bertie__tls13handshake__f_gx,
        bertie__tls13handshake__f_server,
        bertie__tls13handshake__f_transcript
      )
    ) = bertie__tls13handshake__f_server.
reduc forall 
  bertie__tls13handshake__f_client_randomness: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__f_ciphersuite: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__f_session_id: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__f_gx: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__f_server: bertie__server__t_ServerInfo,
  bertie__tls13handshake__f_transcript: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__t_ServerPostClientHello_bertie__tls13handshake__f_transcript(
      bertie__tls13handshake__ServerPostClientHello(
        bertie__tls13handshake__f_client_randomness,
        bertie__tls13handshake__f_ciphersuite,
        bertie__tls13handshake__f_session_id,
        bertie__tls13handshake__f_gx,
        bertie__tls13handshake__f_server,
        bertie__tls13handshake__f_transcript
      )
    ) = bertie__tls13handshake__f_transcript.

type bertie__tls13handshake__t_ServerPostServerHello.

fun bertie__tls13handshake__t_ServerPostServerHello_to_bitstring(
      bertie__tls13handshake__t_ServerPostServerHello
    )
    : bitstring [typeConverter].
fun bertie__tls13handshake__t_ServerPostServerHello_from_bitstring(bitstring)
    : bertie__tls13handshake__t_ServerPostServerHello [typeConverter].
const bertie__tls13handshake__t_ServerPostServerHello_default_value: bertie__tls13handshake__t_ServerPostServerHello.
letfun bertie__tls13handshake__t_ServerPostServerHello_default() =
       bertie__tls13handshake__t_ServerPostServerHello_default_value.
letfun bertie__tls13handshake__t_ServerPostServerHello_err() =
       let x = construct_fail() in bertie__tls13handshake__t_ServerPostServerHello_default_value.
fun bertie__tls13handshake__ServerPostServerHello(
      bertie__tls13utils__t_Bytes,
      bertie__tls13utils__t_Bytes,
      bertie__tls13crypto__t_Algorithms,
      bertie__server__t_ServerInfo,
      bertie__tls13keyscheduler__key_schedule__t_Handle,
      bertie__tls13utils__t_Bytes,
      bertie__tls13utils__t_Bytes,
      bertie__tls13formats__t_Transcript
    )
    : bertie__tls13handshake__t_ServerPostServerHello [data].
reduc forall 
  bertie__tls13handshake__f_client_random: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__f_server_random: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__f_ciphersuite: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__f_server: bertie__server__t_ServerInfo,
  bertie__tls13handshake__f_master_secret: bertie__tls13keyscheduler__key_schedule__t_Handle,
  bertie__tls13handshake__f_cfk: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__f_sfk: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__f_transcript: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__t_ServerPostServerHello_bertie__tls13handshake__f_client_random(
      bertie__tls13handshake__ServerPostServerHello(
        bertie__tls13handshake__f_client_random,
        bertie__tls13handshake__f_server_random,
        bertie__tls13handshake__f_ciphersuite,
        bertie__tls13handshake__f_server,
        bertie__tls13handshake__f_master_secret,
        bertie__tls13handshake__f_cfk,
        bertie__tls13handshake__f_sfk,
        bertie__tls13handshake__f_transcript
      )
    ) = bertie__tls13handshake__f_client_random.
reduc forall 
  bertie__tls13handshake__f_client_random: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__f_server_random: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__f_ciphersuite: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__f_server: bertie__server__t_ServerInfo,
  bertie__tls13handshake__f_master_secret: bertie__tls13keyscheduler__key_schedule__t_Handle,
  bertie__tls13handshake__f_cfk: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__f_sfk: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__f_transcript: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__t_ServerPostServerHello_bertie__tls13handshake__f_server_random(
      bertie__tls13handshake__ServerPostServerHello(
        bertie__tls13handshake__f_client_random,
        bertie__tls13handshake__f_server_random,
        bertie__tls13handshake__f_ciphersuite,
        bertie__tls13handshake__f_server,
        bertie__tls13handshake__f_master_secret,
        bertie__tls13handshake__f_cfk,
        bertie__tls13handshake__f_sfk,
        bertie__tls13handshake__f_transcript
      )
    ) = bertie__tls13handshake__f_server_random.
reduc forall 
  bertie__tls13handshake__f_client_random: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__f_server_random: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__f_ciphersuite: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__f_server: bertie__server__t_ServerInfo,
  bertie__tls13handshake__f_master_secret: bertie__tls13keyscheduler__key_schedule__t_Handle,
  bertie__tls13handshake__f_cfk: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__f_sfk: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__f_transcript: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__t_ServerPostServerHello_bertie__tls13handshake__f_ciphersuite(
      bertie__tls13handshake__ServerPostServerHello(
        bertie__tls13handshake__f_client_random,
        bertie__tls13handshake__f_server_random,
        bertie__tls13handshake__f_ciphersuite,
        bertie__tls13handshake__f_server,
        bertie__tls13handshake__f_master_secret,
        bertie__tls13handshake__f_cfk,
        bertie__tls13handshake__f_sfk,
        bertie__tls13handshake__f_transcript
      )
    ) = bertie__tls13handshake__f_ciphersuite.
reduc forall 
  bertie__tls13handshake__f_client_random: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__f_server_random: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__f_ciphersuite: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__f_server: bertie__server__t_ServerInfo,
  bertie__tls13handshake__f_master_secret: bertie__tls13keyscheduler__key_schedule__t_Handle,
  bertie__tls13handshake__f_cfk: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__f_sfk: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__f_transcript: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__t_ServerPostServerHello_bertie__tls13handshake__f_server(
      bertie__tls13handshake__ServerPostServerHello(
        bertie__tls13handshake__f_client_random,
        bertie__tls13handshake__f_server_random,
        bertie__tls13handshake__f_ciphersuite,
        bertie__tls13handshake__f_server,
        bertie__tls13handshake__f_master_secret,
        bertie__tls13handshake__f_cfk,
        bertie__tls13handshake__f_sfk,
        bertie__tls13handshake__f_transcript
      )
    ) = bertie__tls13handshake__f_server.
reduc forall 
  bertie__tls13handshake__f_client_random: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__f_server_random: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__f_ciphersuite: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__f_server: bertie__server__t_ServerInfo,
  bertie__tls13handshake__f_master_secret: bertie__tls13keyscheduler__key_schedule__t_Handle,
  bertie__tls13handshake__f_cfk: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__f_sfk: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__f_transcript: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__t_ServerPostServerHello_bertie__tls13handshake__f_master_secret(
      bertie__tls13handshake__ServerPostServerHello(
        bertie__tls13handshake__f_client_random,
        bertie__tls13handshake__f_server_random,
        bertie__tls13handshake__f_ciphersuite,
        bertie__tls13handshake__f_server,
        bertie__tls13handshake__f_master_secret,
        bertie__tls13handshake__f_cfk,
        bertie__tls13handshake__f_sfk,
        bertie__tls13handshake__f_transcript
      )
    ) = bertie__tls13handshake__f_master_secret.
reduc forall 
  bertie__tls13handshake__f_client_random: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__f_server_random: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__f_ciphersuite: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__f_server: bertie__server__t_ServerInfo,
  bertie__tls13handshake__f_master_secret: bertie__tls13keyscheduler__key_schedule__t_Handle,
  bertie__tls13handshake__f_cfk: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__f_sfk: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__f_transcript: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__t_ServerPostServerHello_bertie__tls13handshake__f_cfk(
      bertie__tls13handshake__ServerPostServerHello(
        bertie__tls13handshake__f_client_random,
        bertie__tls13handshake__f_server_random,
        bertie__tls13handshake__f_ciphersuite,
        bertie__tls13handshake__f_server,
        bertie__tls13handshake__f_master_secret,
        bertie__tls13handshake__f_cfk,
        bertie__tls13handshake__f_sfk,
        bertie__tls13handshake__f_transcript
      )
    ) = bertie__tls13handshake__f_cfk.
reduc forall 
  bertie__tls13handshake__f_client_random: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__f_server_random: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__f_ciphersuite: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__f_server: bertie__server__t_ServerInfo,
  bertie__tls13handshake__f_master_secret: bertie__tls13keyscheduler__key_schedule__t_Handle,
  bertie__tls13handshake__f_cfk: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__f_sfk: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__f_transcript: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__t_ServerPostServerHello_bertie__tls13handshake__f_sfk(
      bertie__tls13handshake__ServerPostServerHello(
        bertie__tls13handshake__f_client_random,
        bertie__tls13handshake__f_server_random,
        bertie__tls13handshake__f_ciphersuite,
        bertie__tls13handshake__f_server,
        bertie__tls13handshake__f_master_secret,
        bertie__tls13handshake__f_cfk,
        bertie__tls13handshake__f_sfk,
        bertie__tls13handshake__f_transcript
      )
    ) = bertie__tls13handshake__f_sfk.
reduc forall 
  bertie__tls13handshake__f_client_random: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__f_server_random: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__f_ciphersuite: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__f_server: bertie__server__t_ServerInfo,
  bertie__tls13handshake__f_master_secret: bertie__tls13keyscheduler__key_schedule__t_Handle,
  bertie__tls13handshake__f_cfk: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__f_sfk: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__f_transcript: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__t_ServerPostServerHello_bertie__tls13handshake__f_transcript(
      bertie__tls13handshake__ServerPostServerHello(
        bertie__tls13handshake__f_client_random,
        bertie__tls13handshake__f_server_random,
        bertie__tls13handshake__f_ciphersuite,
        bertie__tls13handshake__f_server,
        bertie__tls13handshake__f_master_secret,
        bertie__tls13handshake__f_cfk,
        bertie__tls13handshake__f_sfk,
        bertie__tls13handshake__f_transcript
      )
    ) = bertie__tls13handshake__f_transcript.

type bertie__tls13handshake__t_ServerPostCertificateVerify.

fun bertie__tls13handshake__t_ServerPostCertificateVerify_to_bitstring(
      bertie__tls13handshake__t_ServerPostCertificateVerify
    )
    : bitstring [typeConverter].
fun bertie__tls13handshake__t_ServerPostCertificateVerify_from_bitstring(
      bitstring
    )
    : bertie__tls13handshake__t_ServerPostCertificateVerify [typeConverter].
const bertie__tls13handshake__t_ServerPostCertificateVerify_default_value: bertie__tls13handshake__t_ServerPostCertificateVerify.
letfun bertie__tls13handshake__t_ServerPostCertificateVerify_default() =
       bertie__tls13handshake__t_ServerPostCertificateVerify_default_value.
letfun bertie__tls13handshake__t_ServerPostCertificateVerify_err() =
       let x = construct_fail() in bertie__tls13handshake__t_ServerPostCertificateVerify_default_value.
fun bertie__tls13handshake__ServerPostCertificateVerify(
      bertie__tls13utils__t_Bytes,
      bertie__tls13utils__t_Bytes,
      bertie__tls13crypto__t_Algorithms,
      bertie__tls13keyscheduler__key_schedule__t_Handle,
      bertie__tls13utils__t_Bytes,
      bertie__tls13utils__t_Bytes,
      bertie__tls13formats__t_Transcript
    )
    : bertie__tls13handshake__t_ServerPostCertificateVerify [data].
reduc forall 
  bertie__tls13handshake__0: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__1: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__2: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__3: bertie__tls13keyscheduler__key_schedule__t_Handle,
  bertie__tls13handshake__4: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__5: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__6: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__t_ServerPostCertificateVerify_bertie__tls13handshake__0(
      bertie__tls13handshake__ServerPostCertificateVerify(
        bertie__tls13handshake__0,
        bertie__tls13handshake__1,
        bertie__tls13handshake__2,
        bertie__tls13handshake__3,
        bertie__tls13handshake__4,
        bertie__tls13handshake__5,
        bertie__tls13handshake__6
      )
    ) = bertie__tls13handshake__0.
reduc forall 
  bertie__tls13handshake__0: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__1: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__2: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__3: bertie__tls13keyscheduler__key_schedule__t_Handle,
  bertie__tls13handshake__4: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__5: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__6: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__t_ServerPostCertificateVerify_bertie__tls13handshake__1(
      bertie__tls13handshake__ServerPostCertificateVerify(
        bertie__tls13handshake__0,
        bertie__tls13handshake__1,
        bertie__tls13handshake__2,
        bertie__tls13handshake__3,
        bertie__tls13handshake__4,
        bertie__tls13handshake__5,
        bertie__tls13handshake__6
      )
    ) = bertie__tls13handshake__1.
reduc forall 
  bertie__tls13handshake__0: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__1: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__2: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__3: bertie__tls13keyscheduler__key_schedule__t_Handle,
  bertie__tls13handshake__4: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__5: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__6: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__t_ServerPostCertificateVerify_bertie__tls13handshake__2(
      bertie__tls13handshake__ServerPostCertificateVerify(
        bertie__tls13handshake__0,
        bertie__tls13handshake__1,
        bertie__tls13handshake__2,
        bertie__tls13handshake__3,
        bertie__tls13handshake__4,
        bertie__tls13handshake__5,
        bertie__tls13handshake__6
      )
    ) = bertie__tls13handshake__2.
reduc forall 
  bertie__tls13handshake__0: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__1: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__2: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__3: bertie__tls13keyscheduler__key_schedule__t_Handle,
  bertie__tls13handshake__4: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__5: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__6: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__t_ServerPostCertificateVerify_bertie__tls13handshake__3(
      bertie__tls13handshake__ServerPostCertificateVerify(
        bertie__tls13handshake__0,
        bertie__tls13handshake__1,
        bertie__tls13handshake__2,
        bertie__tls13handshake__3,
        bertie__tls13handshake__4,
        bertie__tls13handshake__5,
        bertie__tls13handshake__6
      )
    ) = bertie__tls13handshake__3.
reduc forall 
  bertie__tls13handshake__0: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__1: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__2: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__3: bertie__tls13keyscheduler__key_schedule__t_Handle,
  bertie__tls13handshake__4: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__5: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__6: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__t_ServerPostCertificateVerify_bertie__tls13handshake__4(
      bertie__tls13handshake__ServerPostCertificateVerify(
        bertie__tls13handshake__0,
        bertie__tls13handshake__1,
        bertie__tls13handshake__2,
        bertie__tls13handshake__3,
        bertie__tls13handshake__4,
        bertie__tls13handshake__5,
        bertie__tls13handshake__6
      )
    ) = bertie__tls13handshake__4.
reduc forall 
  bertie__tls13handshake__0: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__1: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__2: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__3: bertie__tls13keyscheduler__key_schedule__t_Handle,
  bertie__tls13handshake__4: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__5: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__6: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__t_ServerPostCertificateVerify_bertie__tls13handshake__5(
      bertie__tls13handshake__ServerPostCertificateVerify(
        bertie__tls13handshake__0,
        bertie__tls13handshake__1,
        bertie__tls13handshake__2,
        bertie__tls13handshake__3,
        bertie__tls13handshake__4,
        bertie__tls13handshake__5,
        bertie__tls13handshake__6
      )
    ) = bertie__tls13handshake__5.
reduc forall 
  bertie__tls13handshake__0: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__1: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__2: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__3: bertie__tls13keyscheduler__key_schedule__t_Handle,
  bertie__tls13handshake__4: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__5: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__6: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__t_ServerPostCertificateVerify_bertie__tls13handshake__6(
      bertie__tls13handshake__ServerPostCertificateVerify(
        bertie__tls13handshake__0,
        bertie__tls13handshake__1,
        bertie__tls13handshake__2,
        bertie__tls13handshake__3,
        bertie__tls13handshake__4,
        bertie__tls13handshake__5,
        bertie__tls13handshake__6
      )
    ) = bertie__tls13handshake__6.

type bertie__tls13handshake__t_ServerPostServerFinished.

fun bertie__tls13handshake__t_ServerPostServerFinished_to_bitstring(
      bertie__tls13handshake__t_ServerPostServerFinished
    )
    : bitstring [typeConverter].
fun bertie__tls13handshake__t_ServerPostServerFinished_from_bitstring(bitstring)
    : bertie__tls13handshake__t_ServerPostServerFinished [typeConverter].
const bertie__tls13handshake__t_ServerPostServerFinished_default_value: bertie__tls13handshake__t_ServerPostServerFinished.
letfun bertie__tls13handshake__t_ServerPostServerFinished_default() =
       bertie__tls13handshake__t_ServerPostServerFinished_default_value.
letfun bertie__tls13handshake__t_ServerPostServerFinished_err() =
       let x = construct_fail() in bertie__tls13handshake__t_ServerPostServerFinished_default_value.
fun bertie__tls13handshake__ServerPostServerFinished(
      bertie__tls13utils__t_Bytes,
      bertie__tls13utils__t_Bytes,
      bertie__tls13crypto__t_Algorithms,
      bertie__tls13keyscheduler__key_schedule__t_Handle,
      bertie__tls13utils__t_Bytes,
      bertie__tls13formats__t_Transcript
    )
    : bertie__tls13handshake__t_ServerPostServerFinished [data].
reduc forall 
  bertie__tls13handshake__0: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__1: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__2: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__3: bertie__tls13keyscheduler__key_schedule__t_Handle,
  bertie__tls13handshake__4: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__5: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__t_ServerPostServerFinished_bertie__tls13handshake__0(
      bertie__tls13handshake__ServerPostServerFinished(
        bertie__tls13handshake__0,
        bertie__tls13handshake__1,
        bertie__tls13handshake__2,
        bertie__tls13handshake__3,
        bertie__tls13handshake__4,
        bertie__tls13handshake__5
      )
    ) = bertie__tls13handshake__0.
reduc forall 
  bertie__tls13handshake__0: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__1: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__2: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__3: bertie__tls13keyscheduler__key_schedule__t_Handle,
  bertie__tls13handshake__4: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__5: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__t_ServerPostServerFinished_bertie__tls13handshake__1(
      bertie__tls13handshake__ServerPostServerFinished(
        bertie__tls13handshake__0,
        bertie__tls13handshake__1,
        bertie__tls13handshake__2,
        bertie__tls13handshake__3,
        bertie__tls13handshake__4,
        bertie__tls13handshake__5
      )
    ) = bertie__tls13handshake__1.
reduc forall 
  bertie__tls13handshake__0: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__1: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__2: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__3: bertie__tls13keyscheduler__key_schedule__t_Handle,
  bertie__tls13handshake__4: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__5: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__t_ServerPostServerFinished_bertie__tls13handshake__2(
      bertie__tls13handshake__ServerPostServerFinished(
        bertie__tls13handshake__0,
        bertie__tls13handshake__1,
        bertie__tls13handshake__2,
        bertie__tls13handshake__3,
        bertie__tls13handshake__4,
        bertie__tls13handshake__5
      )
    ) = bertie__tls13handshake__2.
reduc forall 
  bertie__tls13handshake__0: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__1: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__2: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__3: bertie__tls13keyscheduler__key_schedule__t_Handle,
  bertie__tls13handshake__4: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__5: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__t_ServerPostServerFinished_bertie__tls13handshake__3(
      bertie__tls13handshake__ServerPostServerFinished(
        bertie__tls13handshake__0,
        bertie__tls13handshake__1,
        bertie__tls13handshake__2,
        bertie__tls13handshake__3,
        bertie__tls13handshake__4,
        bertie__tls13handshake__5
      )
    ) = bertie__tls13handshake__3.
reduc forall 
  bertie__tls13handshake__0: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__1: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__2: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__3: bertie__tls13keyscheduler__key_schedule__t_Handle,
  bertie__tls13handshake__4: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__5: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__t_ServerPostServerFinished_bertie__tls13handshake__4(
      bertie__tls13handshake__ServerPostServerFinished(
        bertie__tls13handshake__0,
        bertie__tls13handshake__1,
        bertie__tls13handshake__2,
        bertie__tls13handshake__3,
        bertie__tls13handshake__4,
        bertie__tls13handshake__5
      )
    ) = bertie__tls13handshake__4.
reduc forall 
  bertie__tls13handshake__0: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__1: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__2: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__3: bertie__tls13keyscheduler__key_schedule__t_Handle,
  bertie__tls13handshake__4: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__5: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__t_ServerPostServerFinished_bertie__tls13handshake__5(
      bertie__tls13handshake__ServerPostServerFinished(
        bertie__tls13handshake__0,
        bertie__tls13handshake__1,
        bertie__tls13handshake__2,
        bertie__tls13handshake__3,
        bertie__tls13handshake__4,
        bertie__tls13handshake__5
      )
    ) = bertie__tls13handshake__5.

type bertie__tls13handshake__t_ServerPostClientFinished.

fun bertie__tls13handshake__t_ServerPostClientFinished_to_bitstring(
      bertie__tls13handshake__t_ServerPostClientFinished
    )
    : bitstring [typeConverter].
fun bertie__tls13handshake__t_ServerPostClientFinished_from_bitstring(bitstring)
    : bertie__tls13handshake__t_ServerPostClientFinished [typeConverter].
const bertie__tls13handshake__t_ServerPostClientFinished_default_value: bertie__tls13handshake__t_ServerPostClientFinished.
letfun bertie__tls13handshake__t_ServerPostClientFinished_default() =
       bertie__tls13handshake__t_ServerPostClientFinished_default_value.
letfun bertie__tls13handshake__t_ServerPostClientFinished_err() =
       let x = construct_fail() in bertie__tls13handshake__t_ServerPostClientFinished_default_value.
fun bertie__tls13handshake__ServerPostClientFinished(
      bertie__tls13utils__t_Bytes,
      bertie__tls13utils__t_Bytes,
      bertie__tls13crypto__t_Algorithms,
      bertie__tls13keyscheduler__key_schedule__t_Handle,
      bertie__tls13formats__t_Transcript
    )
    : bertie__tls13handshake__t_ServerPostClientFinished [data].
reduc forall 
  bertie__tls13handshake__0: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__1: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__2: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__3: bertie__tls13keyscheduler__key_schedule__t_Handle,
  bertie__tls13handshake__4: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__t_ServerPostClientFinished_bertie__tls13handshake__0(
      bertie__tls13handshake__ServerPostClientFinished(
        bertie__tls13handshake__0,
        bertie__tls13handshake__1,
        bertie__tls13handshake__2,
        bertie__tls13handshake__3,
        bertie__tls13handshake__4
      )
    ) = bertie__tls13handshake__0.
reduc forall 
  bertie__tls13handshake__0: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__1: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__2: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__3: bertie__tls13keyscheduler__key_schedule__t_Handle,
  bertie__tls13handshake__4: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__t_ServerPostClientFinished_bertie__tls13handshake__1(
      bertie__tls13handshake__ServerPostClientFinished(
        bertie__tls13handshake__0,
        bertie__tls13handshake__1,
        bertie__tls13handshake__2,
        bertie__tls13handshake__3,
        bertie__tls13handshake__4
      )
    ) = bertie__tls13handshake__1.
reduc forall 
  bertie__tls13handshake__0: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__1: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__2: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__3: bertie__tls13keyscheduler__key_schedule__t_Handle,
  bertie__tls13handshake__4: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__t_ServerPostClientFinished_bertie__tls13handshake__2(
      bertie__tls13handshake__ServerPostClientFinished(
        bertie__tls13handshake__0,
        bertie__tls13handshake__1,
        bertie__tls13handshake__2,
        bertie__tls13handshake__3,
        bertie__tls13handshake__4
      )
    ) = bertie__tls13handshake__2.
reduc forall 
  bertie__tls13handshake__0: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__1: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__2: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__3: bertie__tls13keyscheduler__key_schedule__t_Handle,
  bertie__tls13handshake__4: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__t_ServerPostClientFinished_bertie__tls13handshake__3(
      bertie__tls13handshake__ServerPostClientFinished(
        bertie__tls13handshake__0,
        bertie__tls13handshake__1,
        bertie__tls13handshake__2,
        bertie__tls13handshake__3,
        bertie__tls13handshake__4
      )
    ) = bertie__tls13handshake__3.
reduc forall 
  bertie__tls13handshake__0: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__1: bertie__tls13utils__t_Bytes,
  bertie__tls13handshake__2: bertie__tls13crypto__t_Algorithms,
  bertie__tls13handshake__3: bertie__tls13keyscheduler__key_schedule__t_Handle,
  bertie__tls13handshake__4: bertie__tls13formats__t_Transcript
;
    accessor_bertie__tls13handshake__t_ServerPostClientFinished_bertie__tls13handshake__4(
      bertie__tls13handshake__ServerPostClientFinished(
        bertie__tls13handshake__0,
        bertie__tls13handshake__1,
        bertie__tls13handshake__2,
        bertie__tls13handshake__3,
        bertie__tls13handshake__4
      )
    ) = bertie__tls13handshake__4.

(*****************************************)
(* Functions *)
(*****************************************)

const bertie__tls13utils__v_UNSUPPORTED_ALGORITHM: bitstring.

const bertie__tls13utils__v_PSK_MODE_MISMATCH: bitstring.

const bertie__tls13utils__v_PARSE_FAILED: bitstring.

letfun bertie__tls13utils__parse_failed(wildcard1 : bitstring) =
       bertie__tls13utils__v_PARSE_FAILED.

letfun bertie__tls13utils__bytes(x : bitstring) =
       bertie__tls13utils__t_Bytes_from_bitstring(x).

(* marked as constructor *)
fun bertie__tls13utils__impl_Bytes__new(bitstring)
    : bertie__tls13utils__t_Bytes [data].

letfun bertie__tls13utils__impl_Bytes__from_slice(s : bitstring) =
       bertie__tls13utils__t_Bytes_from_bitstring(s).

fun bertie__tls13utils__concat_inner(bertie__tls13utils__t_Bytes, bertie__tls13utils__t_Bytes): bertie__tls13utils__t_Bytes [data].

letfun bertie__tls13utils__impl_Bytes__concat(
         self : bertie__tls13utils__t_Bytes, other : bertie__tls13utils__t_Bytes
       ) =
       bertie__tls13utils__concat_inner(self, other).


    letfun bertie__tls13utils__eq_inner(
        b1 : bertie__tls13utils__t_Bytes, b2 : bertie__tls13utils__t_Bytes
       ) =
       b1 = b2. (* This is term equality, which may not be what we want? *)

letfun bertie__tls13utils__eq(
         b1 : bertie__tls13utils__t_Bytes, b2 : bertie__tls13utils__t_Bytes
       ) =
       bertie__tls13utils__eq_inner(b1, b2).

fun bertie__tls13utils__check_eq_inner( bertie__tls13utils__t_Bytes, bertie__tls13utils__t_Bytes): bitstring
reduc forall b1 : bertie__tls13utils__t_Bytes;
          bertie__tls13utils__check_eq_inner(b1,b1) = ().

letfun bertie__tls13utils__check_eq(
         b1 : bertie__tls13utils__t_Bytes, b2 : bertie__tls13utils__t_Bytes
       ) =
       bertie__tls13utils__check_eq_inner(b1, b2).

(* marked as constructor *)
fun bertie__tls13crypto__hash(
      bertie__tls13crypto__t_HashAlgorithm, bertie__tls13utils__t_Bytes
    )
    : bertie__tls13utils__t_Bytes [data].

(* marked as constructor *)
fun bertie__tls13crypto__hmac_tag(
      bertie__tls13crypto__t_HashAlgorithm,
      bertie__tls13utils__t_Bytes,
      bertie__tls13utils__t_Bytes
    )
    : bertie__tls13utils__t_Bytes [data].


reduc
  forall
        alg : bertie__tls13crypto__t_HashAlgorithm,
         mk : bertie__tls13utils__t_Bytes,
      input : bertie__tls13utils__t_Bytes;
        bertie__tls13crypto__hmac_verify(
            alg,
            mk,
            input,
            bertie__tls13crypto__hmac_tag(alg, mk, input)
         ) = ().

fun extern__sign_inner(
         bertie__tls13crypto__t_SignatureScheme,
         bertie__tls13utils__t_Bytes, (* sk *)
         bertie__tls13utils__t_Bytes  (* input *)
     )
     : bertie__tls13utils__t_Bytes.

letfun bertie__tls13crypto__sign(
         algorithm : bertie__tls13crypto__t_SignatureScheme,
         sk : bertie__tls13utils__t_Bytes,
         input : bertie__tls13utils__t_Bytes,
         rng : impl_CryptoRng
       ) =
       let hax_temp_output =
         (extern__sign_inner(
              algorithm,
              sk,
              input
          )
       )
        in
       (rng, hax_temp_output).


fun extern__vk_from_sk(bertie__tls13utils__t_Bytes): bertie__tls13crypto__t_PublicVerificationKey.

fun extern__sign_inner_rsa(
                 bertie__tls13utils__t_Bytes, (* sk *)
                 bertie__tls13utils__t_Bytes  (* input *)
             )
             : bertie__tls13utils__t_Bytes.

fun bertie__tls13crypto__verify(
            bertie__tls13crypto__t_SignatureScheme, 
            bertie__tls13crypto__t_PublicVerificationKey,
            bertie__tls13utils__t_Bytes, (* input *)
            bertie__tls13utils__t_Bytes  (* sig *)
        )
    : bitstring

  reduc forall
                     sk: bertie__tls13utils__t_Bytes,
                  input: bertie__tls13utils__t_Bytes;

        bertie__tls13crypto__verify(
            bertie__tls13crypto__SignatureScheme_RsaPssRsaSha256(

),
            extern__vk_from_sk(sk),
            input,
            extern__sign_inner_rsa(
                sk,
                input
            )
        )
        = ()

  otherwise forall
                sk                   : bertie__tls13utils__t_Bytes,
                input                : bertie__tls13utils__t_Bytes;

        bertie__tls13crypto__verify(
            bertie__tls13crypto__SignatureScheme_EcdsaSecp256r1Sha256(

),
            extern__vk_from_sk(sk),
            input,
            extern__sign_inner(
                bertie__tls13crypto__SignatureScheme_EcdsaSecp256r1Sha256(

),
                sk,
                input
            )
        )
        = ().

fun extern__kem_pk_from_sk(bertie__tls13utils__t_Bytes): bertie__tls13utils__t_Bytes.

letfun bertie__tls13crypto__kem_keygen(
         alg : bertie__tls13crypto__t_KemScheme, rng : impl_CryptoRng
       ) =
       let hax_temp_output =
         (new kem_sk: bertie__tls13utils__t_Bytes;
       let kem_pk = extern__kem_pk_from_sk(kem_sk) in
       (kem_sk, kem_pk))
        in
       (rng, hax_temp_output).

fun extern__kem_encapsulation(bertie__tls13utils__t_Bytes, bertie__tls13utils__t_Bytes): bertie__tls13utils__t_Bytes.

letfun bertie__tls13crypto__kem_encap(
         alg : bertie__tls13crypto__t_KemScheme,
         pk : bertie__tls13utils__t_Bytes,
         rng : impl_CryptoRng
       ) =
       let hax_temp_output =
         (new shared_secret: bertie__tls13utils__t_Bytes;
          let ct = extern__kem_encapsulation(pk, shared_secret) in
          (shared_secret, ct))
        in
       (rng, hax_temp_output).

reduc forall alg: bertie__tls13crypto__t_KemScheme, kem_sk: bertie__tls13utils__t_Bytes, shared_secret: bertie__tls13utils__t_Bytes;
     bertie__tls13crypto__kem_decap(
     alg, extern__kem_encapsulation(extern__kem_pk_from_sk(kem_sk), shared_secret), kem_sk
     ) = shared_secret.

letfun bertie__tls13crypto__impl_Algorithms__hash(
         self : bertie__tls13crypto__t_Algorithms
       ) =
       accessor_bertie__tls13crypto__t_Algorithms_bertie__tls13crypto__f_hash(
         self
       ).

letfun bertie__tls13crypto__impl_Algorithms__signature(
         self : bertie__tls13crypto__t_Algorithms
       ) =
       accessor_bertie__tls13crypto__t_Algorithms_bertie__tls13crypto__f_signature(
         self
       ).

letfun bertie__tls13crypto__impl_Algorithms__kem(
         self : bertie__tls13crypto__t_Algorithms
       ) =
       accessor_bertie__tls13crypto__t_Algorithms_bertie__tls13crypto__f_kem(
         self
       ).

letfun bertie__tls13crypto__impl_Algorithms__psk_mode(
         self : bertie__tls13crypto__t_Algorithms
       ) =
       accessor_bertie__tls13crypto__t_Algorithms_bertie__tls13crypto__f_psk_mode(
         self
       ).

(* marked as constructor *)
fun bertie__tls13keyscheduler__key_schedule__tagkey_from_handle(
      bertie__tls13keyscheduler__key_schedule__t_TLSkeyscheduler,
      bertie__tls13keyscheduler__key_schedule__t_Handle
    )
    : bertie__tls13keyscheduler__key_schedule__t_TagKey [data].

(* marked as constructor *)
fun bertie__tls13keyscheduler__key_schedule__set_by_handle(
      bertie__tls13keyscheduler__key_schedule__t_TLSkeyscheduler,
      bertie__tls13keyscheduler__key_schedule__t_Handle,
      bertie__tls13utils__t_Bytes
    )
    : bertie__tls13keyscheduler__key_schedule__t_TLSkeyscheduler [data].

(* marked as constructor *)
fun bertie__tls13keyscheduler__key_schedule__v_XPD(
      bertie__tls13keyscheduler__key_schedule__t_TLSkeyscheduler,
      bertie__tls13keyscheduler__key_schedule__t_TLSnames,
      nat,
      bertie__tls13keyscheduler__key_schedule__t_Handle,
      bool,
      bertie__tls13utils__t_Bytes
    )
    : bitstring [data].

(* marked as constructor *)
fun bertie__tls13formats__handshake_data__to_bytes_inner(
      bertie__tls13formats__handshake_data__t_HandshakeData
    )
    : bertie__tls13utils__t_Bytes [data].

letfun bertie__tls13formats__handshake_data__impl_HandshakeData__len(
         self : bertie__tls13formats__handshake_data__t_HandshakeData
       ) =
       (0).

(* marked as constructor *)
fun bertie__tls13formats__handshake_data__impl_HandshakeData__concat(
      bertie__tls13formats__handshake_data__t_HandshakeData,
      bertie__tls13formats__handshake_data__t_HandshakeData
    )
    : bertie__tls13formats__handshake_data__t_HandshakeData [data].

reduc forall
                   hs1: bertie__tls13utils__t_Bytes,
                   hs2: bertie__tls13utils__t_Bytes;

            bertie__tls13formats__handshake_data__to_two_inner(
                bertie__tls13formats__handshake_data__HandshakeData(
                    bertie__tls13utils__concat_inner(hs1, hs2)
                )
            )
            = (hs1, hs2).
    

letfun bertie__tls13formats__handshake_data__impl_HandshakeData__to_two(
         self : bertie__tls13formats__handshake_data__t_HandshakeData
       ) =
       bertie__tls13formats__handshake_data__to_two_inner(self).

reduc forall
                   hs1: bertie__tls13utils__t_Bytes,
                   hs2: bertie__tls13utils__t_Bytes,
                   hs3: bertie__tls13utils__t_Bytes,
                   hs4: bertie__tls13utils__t_Bytes;

            bertie__tls13formats__handshake_data__to_four_inner(
                bertie__tls13formats__handshake_data__HandshakeData(
                    bertie__tls13utils__concat_inner(
                        bertie__tls13utils__concat_inner(
                            bertie__tls13utils__concat_inner(
                                hs1,
                                hs2
                            ),
                            hs3
                        ),
                        hs4
                    )
                )
            )
            = (hs1,
               hs2,
               hs3,
               hs4).

letfun bertie__tls13formats__handshake_data__impl_HandshakeData__to_four(
         self : bertie__tls13formats__handshake_data__t_HandshakeData
       ) =
       bertie__tls13formats__handshake_data__to_four_inner(self).

letfun bertie__tls13record__client_cipher_state0(
         ae : bertie__tls13crypto__t_AeadAlgorithm,
         kiv : bertie__tls13crypto__t_AeadKeyIV,
         c : nat,
         k : bertie__tls13keyscheduler__key_schedule__t_TagKey
       ) =
       bertie__tls13record__ClientCipherState0(ae, kiv, c, k).

letfun bertie__tls13record__server_cipher_state0(
         key_iv : bertie__tls13crypto__t_AeadKeyIV,
         counter : nat,
         early_exporter_ms : bertie__tls13keyscheduler__key_schedule__t_TagKey
       ) =
       bertie__tls13record__ServerCipherState0(key_iv,counter,early_exporter_ms).

letfun bertie__tls13record__impl_DuplexCipherStateH__new(
         sender_key_iv : bertie__tls13crypto__t_AeadKeyIV,
         sender_counter : nat,
         receiver_key_iv : bertie__tls13crypto__t_AeadKeyIV,
         receiver_counter : nat
       ) =
       bertie__tls13record__DuplexCipherStateH(
         sender_key_iv,sender_counter,receiver_key_iv,receiver_counter
       ).

letfun bertie__tls13record__duplex_cipher_state1(
         ae : bertie__tls13crypto__t_AeadAlgorithm,
         kiv1 : bertie__tls13crypto__t_AeadKeyIV,
         c1 : nat,
         kiv2 : bertie__tls13crypto__t_AeadKeyIV,
         c2 : nat,
         k : bertie__tls13keyscheduler__key_schedule__t_TagKey
       ) =
       bertie__tls13record__DuplexCipherState1(ae, kiv1, c1, kiv2, c2, k).

(* marked as constructor *)
fun bertie__tls13keyscheduler__derive_binder_key(
      bertie__tls13crypto__t_HashAlgorithm,
      bertie__tls13keyscheduler__key_schedule__t_Handle,
      bertie__tls13keyscheduler__key_schedule__t_TLSkeyscheduler
    )
    : bitstring [data].

(* marked as constructor *)
fun bertie__tls13keyscheduler__derive_0rtt_keys(
      bertie__tls13crypto__t_HashAlgorithm,
      bertie__tls13crypto__t_AeadAlgorithm,
      bertie__tls13keyscheduler__key_schedule__t_Handle,
      bertie__tls13utils__t_Bytes,
      bertie__tls13keyscheduler__key_schedule__t_TLSkeyscheduler
    )
    : bitstring [data].

(* marked as constructor *)
fun bertie__tls13keyscheduler__derive_hk_handles(
      bertie__tls13crypto__t_HashAlgorithm,
      bertie__tls13keyscheduler__key_schedule__t_Handle,
      Option,
      bertie__tls13utils__t_Bytes,
      bertie__tls13keyscheduler__key_schedule__t_TLSkeyscheduler
    )
    : bitstring [data].

(* marked as constructor *)
fun bertie__tls13keyscheduler__derive_hk_ms(
      bertie__tls13crypto__t_HashAlgorithm,
      bertie__tls13crypto__t_AeadAlgorithm,
      bertie__tls13keyscheduler__key_schedule__t_Handle,
      bertie__tls13keyscheduler__key_schedule__t_Handle,
      bertie__tls13keyscheduler__key_schedule__t_TLSkeyscheduler
    )
    : bitstring [data].

(* marked as constructor *)
fun bertie__tls13keyscheduler__derive_app_handles(
      bertie__tls13crypto__t_HashAlgorithm,
      bertie__tls13keyscheduler__key_schedule__t_Handle,
      bertie__tls13utils__t_Bytes,
      bertie__tls13keyscheduler__key_schedule__t_TLSkeyscheduler
    )
    : bitstring [data].

(* marked as constructor *)
fun bertie__tls13keyscheduler__derive_app_keys(
      bertie__tls13crypto__t_HashAlgorithm,
      bertie__tls13crypto__t_AeadAlgorithm,
      bertie__tls13keyscheduler__key_schedule__t_Handle,
      bertie__tls13keyscheduler__key_schedule__t_Handle,
      bertie__tls13keyscheduler__key_schedule__t_TLSkeyscheduler
    )
    : bitstring [data].

(* marked as constructor *)
fun bertie__tls13keyscheduler__derive_rms(
      bertie__tls13crypto__t_HashAlgorithm,
      bertie__tls13keyscheduler__key_schedule__t_Handle,
      bertie__tls13utils__t_Bytes,
      bertie__tls13keyscheduler__key_schedule__t_TLSkeyscheduler
    )
    : bitstring [data].

const bertie__tls13formats__v_PREFIX_SERVER_SIGNATURE: bitstring.

fun extern__client_hello_c(
      bertie__tls13utils__t_Bytes, (* client_randomness *)
      bertie__tls13utils__t_Bytes, (* session_id *)
      bertie__tls13utils__t_Bytes, (*server name /sni*)
      bertie__tls13utils__t_Bytes, (*kem_pk / gx*)
      Option, (*tkto*)
      Option, (*bindero*)
      nat) (*trunc_len*)
      : bertie__tls13formats__handshake_data__t_HandshakeData [data].

letfun bertie__tls13formats__client_hello(
         algorithms : bertie__tls13crypto__t_Algorithms,
         client_random : bertie__tls13utils__t_Bytes,
         kem_pk : bertie__tls13utils__t_Bytes,
         server_name : bertie__tls13utils__t_Bytes,
         session_ticket : Option
       ) =
       (extern__client_hello_c(
         client_random,
         bertie__tls13utils__t_Bytes_default(),
         server_name,
         kem_pk,
         session_ticket,
         None(),
         0),
     0).

letfun bertie__tls13formats__set_client_hello_binder(
         ciphersuite : bertie__tls13crypto__t_Algorithms,
         binder : Option,
         client_hello : bertie__tls13formats__handshake_data__t_HandshakeData,
         trunc_len : Option
       ) =
       
       let extern__client_hello_c(client_randomness,
                                  session_id,
                                  server_name,
                                  kem_pk,
                                  tkto,
                                  old_binder,
                                  old_trunc_len)
        = client_hello in
          extern__client_hello_c(client_randomness,
                                  session_id,
                                  server_name,
                                  kem_pk,
                                  tkto,
                                  binder,
                                  0).


fun bertie__tls13formats__parse_client_hello(
  bertie__tls13crypto__t_Algorithms,
  bertie__tls13formats__handshake_data__t_HandshakeData)
: bitstring
reduc forall
      algs:bertie__tls13crypto__t_Algorithms,
      client_random: bertie__tls13utils__t_Bytes,
      server_name: bertie__tls13utils__t_Bytes,
      kem_pk: bertie__tls13utils__t_Bytes,
      session_ticket: Option,
      binder: Option;
    bertie__tls13formats__parse_client_hello(
        algs,
        extern__client_hello_c(client_random,
                            bertie__tls13utils__t_Bytes_default_value,
                            server_name,
                            kem_pk,
                            session_ticket,
                            binder,
                            0))
           = (client_random,
                            bertie__tls13utils__t_Bytes_default_value,
                            server_name,
                            kem_pk,
                            session_ticket,
                            binder,
                            0).

(* marked as constructor *)
fun bertie__tls13formats__server_hello(
      bertie__tls13crypto__t_Algorithms,
      bertie__tls13utils__t_Bytes,
      bertie__tls13utils__t_Bytes,
      bertie__tls13utils__t_Bytes
    )
    : bertie__tls13formats__handshake_data__t_HandshakeData [data].

reduc forall
   algs: bertie__tls13crypto__t_Algorithms,
   server_random: bertie__tls13utils__t_Bytes,
   sid: bertie__tls13utils__t_Bytes,
   gy: bertie__tls13utils__t_Bytes;

   bertie__tls13formats__parse_server_hello(
     algs,
     bertie__tls13formats__server_hello(algs, server_random, sid, gy)
) = (server_random, gy).

(* marked as constructor *)
fun bertie__tls13formats__encrypted_extensions(bertie__tls13crypto__t_Algorithms
    )
    : bertie__tls13formats__handshake_data__t_HandshakeData [data].


reduc forall algs: bertie__tls13crypto__t_Algorithms;

      bertie__tls13formats__parse_encrypted_extensions(
        algs,
        bertie__tls13formats__encrypted_extensions(algs)
      ) = ().

(* marked as constructor *)
fun bertie__tls13formats__server_certificate(
      bertie__tls13crypto__t_Algorithms, bertie__tls13utils__t_Bytes
    )
    : bertie__tls13formats__handshake_data__t_HandshakeData [data].


reduc forall
algs: bertie__tls13crypto__t_Algorithms,
cert: bertie__tls13utils__t_Bytes;

  bertie__tls13formats__parse_server_certificate(
     bertie__tls13formats__server_certificate(algs, cert)
  ) = cert.

(* marked as constructor *)
fun bertie__tls13formats__certificate_verify(
      bertie__tls13crypto__t_Algorithms, bertie__tls13utils__t_Bytes
    )
    : bertie__tls13formats__handshake_data__t_HandshakeData [data].


reduc forall
algs: bertie__tls13crypto__t_Algorithms,
cert: bertie__tls13utils__t_Bytes;

      bertie__tls13formats__parse_certificate_verify(
        algs,bertie__tls13formats__certificate_verify(algs, cert)
      ) = cert.

(* marked as constructor *)
fun bertie__tls13formats__finished(bertie__tls13utils__t_Bytes)
    : bertie__tls13formats__handshake_data__t_HandshakeData [data].


reduc forall
  vd: bertie__tls13utils__t_Bytes;

   bertie__tls13formats__parse_finished(
     bertie__tls13formats__finished(vd)
) = vd.
    

letfun bertie__tls13formats__impl_Transcript__new(
         hash_algorithm : bertie__tls13crypto__t_HashAlgorithm
       ) =
       bertie__tls13formats__Transcript(
         hash_algorithm
         ,
           bertie__tls13formats__handshake_data__HandshakeData(
             bertie__tls13utils__impl_Bytes__new(())
           )

       ).

letfun bertie__tls13formats__impl_Transcript__add(
         self : bertie__tls13formats__t_Transcript,
         msg : bertie__tls13formats__handshake_data__t_HandshakeData
       ) =
       let bertie__tls13formats__Transcript(  (* XXX: hand-insert *)
            hash_algorithm: bertie__tls13crypto__t_HashAlgorithm,
            old_handshake_data: bertie__tls13formats__handshake_data__t_HandshakeData
        ) = self in
    bertie__tls13formats__Transcript(  (* XXX: hand-insert *)
        hash_algorithm,
        bertie__tls13formats__handshake_data__HandshakeData(
            bertie__tls13formats__handshake_data__to_bytes_inner(
                bertie__tls13formats__handshake_data__impl_HandshakeData__concat(
                    accessor_bertie__tls13formats__t_Transcript_bertie__tls13formats__f_transcript(
         self
       ),
                    msg
                )
            )
        )
    ).

letfun bertie__tls13formats__impl_Transcript__transcript_hash(
         self : bertie__tls13formats__t_Transcript
       ) =
       let th = bertie__tls13crypto__hash(
         accessor_bertie__tls13formats__t_Transcript_bertie__tls13formats__f_hash_algorithm(
           self
         ),
         accessor_bertie__tls13formats__handshake_data__t_HandshakeData_bertie__tls13formats__handshake_data__0(
           accessor_bertie__tls13formats__t_Transcript_bertie__tls13formats__f_transcript(
             self
           )
         )
       ) in th
       else bertie__tls13utils__t_Bytes_err().

(* marked as constructor *)
fun bertie__tls13formats__impl_Transcript__transcript_hash_without_client_hello(
      bertie__tls13formats__t_Transcript,
      bertie__tls13formats__handshake_data__t_HandshakeData,
      nat
    )
    : bertie__tls13utils__t_Bytes [data].


(* XXX: This is a private constructor, so the attacker can't create their own certificate for a given server name. *)
fun extern__certificate(
            bertie__tls13utils__t_Bytes, (* server name *)
            bertie__tls13crypto__t_SignatureScheme,
            bertie__tls13crypto__t_PublicVerificationKey
        )
        : bertie__tls13utils__t_Bytes [private].


    reduc forall
              server_name: bertie__tls13utils__t_Bytes,
                      alg: bertie__tls13crypto__t_SignatureScheme,
                  cert_vk: bertie__tls13crypto__t_PublicVerificationKey;

(* This checks whether the certificate is valid. *)
        extern__cert_verify(
            server_name,
            extern__certificate(
                server_name,
                alg,
                cert_vk
            )
        )
        = extern__certificate(server_name, alg, cert_vk).

    reduc forall
                 server_name: bertie__tls13utils__t_Bytes,
                         alg: bertie__tls13crypto__t_SignatureScheme,
                    cert_key: bertie__tls13crypto__t_PublicVerificationKey;

        bertie__tls13cert__verification_key_from_cert(
            extern__certificate(
                server_name,
                alg,
                cert_key
            ) 
        )
        = (server_name, alg, cert_key).


 letfun bertie__tls13cert__cert_public_key(
            certificate : bertie__tls13utils__t_Bytes,
            spki        : bitstring
        )
        =
        let (
             server_name : bertie__tls13utils__t_Bytes, 
             scheme         : bertie__tls13crypto__t_SignatureScheme,
             cert_vk     : bertie__tls13crypto__t_PublicVerificationKey
            ) = spki in
        let certificate = extern__cert_verify(server_name, certificate) in

        let bertie__tls13crypto__SignatureScheme_EcdsaSecp256r1Sha256(

) = scheme in (
           let bertie__tls13crypto__PublicVerificationKey_EcDsa(pk) = cert_vk in
               bertie__tls13crypto__PublicVerificationKey_EcDsa(pk)
           else bertie__tls13crypto__t_PublicVerificationKey_err()
        )
        else (
            let bertie__tls13crypto__SignatureScheme_RsaPssRsaSha256(

) = scheme in (
                let bertie__tls13crypto__PublicVerificationKey_Rsa(pk) = cert_vk in
                    bertie__tls13crypto__PublicVerificationKey_Rsa(pk)
                else bertie__tls13crypto__t_PublicVerificationKey_err()
            )
           else bertie__tls13crypto__t_PublicVerificationKey_err()
         ).

letfun bertie__server__lookup_db(
         ciphersuite : bertie__tls13crypto__t_Algorithms,
         db : bertie__server__t_ServerDB,
         sni : bertie__tls13utils__t_Bytes,
         tkt : Option
       ) =
       if
         bertie__tls13utils__eq(sni, bertie__tls13utils__impl_Bytes__new(())) || bertie__tls13utils__eq(
             sni,
             accessor_bertie__server__t_ServerDB_bertie__server__f_server_name(
               db
             )
           )
       then
         (let (
            =true,
            Some(bertie__tls13utils__t_Bytes_to_bitstring(ctkt)),
            Some(
              (
                stkt: bertie__tls13utils__t_Bytes,
                psk: bertie__tls13utils__t_Bytes
              )
            )
          ) = (
            bertie__tls13crypto__impl_Algorithms__psk_mode(ciphersuite),
            tkt,
            accessor_bertie__server__t_ServerDB_bertie__server__f_psk_opt(db)
          ) in let wildcard2: bitstring = bertie__tls13utils__check_eq(
            ctkt, stkt
          ) in (
            let server =
              bertie__server__ServerInfo(
                accessor_bertie__server__t_ServerDB_bertie__server__f_cert(db)
                ,accessor_bertie__server__t_ServerDB_bertie__server__f_sk(db)
                ,Some(bertie__tls13utils__t_Bytes_to_bitstring(psk))
              )
             in
            server
          )
          else bertie__server__t_ServerInfo_err()
          else let (=false, wildcard3: bitstring, wildcard4: bitstring) = (
            bertie__tls13crypto__impl_Algorithms__psk_mode(ciphersuite),
            tkt,
            accessor_bertie__server__t_ServerDB_bertie__server__f_psk_opt(db)
          ) in (
            let server =
              bertie__server__ServerInfo(
                accessor_bertie__server__t_ServerDB_bertie__server__f_cert(db)
                ,accessor_bertie__server__t_ServerDB_bertie__server__f_sk(db)
                ,None()
              )
             in
            server
          )
          else bertie__server__t_ServerInfo_err())
       else (bertie__server__t_ServerInfo_err()).

letfun bertie__tls13handshake__algs_post_client_hello(
         st : bertie__tls13handshake__t_ClientPostClientHello
       ) =
       accessor_bertie__tls13handshake__t_ClientPostClientHello_bertie__tls13handshake__1(
         st
       ).

letfun bertie__tls13handshake__algs_post_server_hello(
         st : bertie__tls13handshake__t_ClientPostServerHello
       ) =
       accessor_bertie__tls13handshake__t_ClientPostServerHello_bertie__tls13handshake__2(
         st
       ).

letfun bertie__tls13handshake__algs_post_client_finished(
         st : bertie__tls13handshake__t_ClientPostClientFinished
       ) =
       accessor_bertie__tls13handshake__t_ClientPostClientFinished_bertie__tls13handshake__2(
         st
       ).

letfun bertie__tls13handshake__compute_psk_binder_zero_rtt(
         algs0 : bertie__tls13crypto__t_Algorithms,
         ch : bertie__tls13formats__handshake_data__t_HandshakeData,
         trunc_len : nat,
         psk : Option,
         tx : bertie__tls13formats__t_Transcript,
         ks : bertie__tls13keyscheduler__key_schedule__t_TLSkeyscheduler
       ) =
       let bertie__tls13crypto__Algorithms(ha,ae,e_sa,e_ks,psk_mode,zero_rtt) =
         algs0
        in
       let
         (
           ks: bertie__tls13keyscheduler__key_schedule__t_TLSkeyscheduler,
           hax_temp_output: bitstring
         )
        =
         let (
           =true,
           Some(bertie__tls13utils__t_Bytes_to_bitstring(k)),
           wildcard5: bitstring
         ) = (psk_mode, psk, trunc_len) in (
           let psk_handle =
             bertie__tls13keyscheduler__key_schedule__Handle(
               bertie__tls13keyscheduler__key_schedule__TLSnames_PSK(),ha,0
             )
            in
           let ks =
             bertie__tls13keyscheduler__key_schedule__set_by_handle(
               ks, psk_handle, k
             )
            in
           let th_trunc = bertie__tls13formats__impl_Transcript__transcript_hash_without_client_hello(
             tx, ch, trunc_len
           ) in (
             let
               (
                 tmp0: bertie__tls13keyscheduler__key_schedule__t_TLSkeyscheduler,
                 v_out: bertie__tls13keyscheduler__key_schedule__t_Handle
               )
              = bertie__tls13keyscheduler__derive_binder_key(ha, psk_handle, ks) in
             let ks = tmp0 in
             let hoist17 = v_out in
             let mk_handle = hoist17 in (
               let
                 (
                   tmp0: bertie__tls13keyscheduler__key_schedule__t_TLSkeyscheduler,
                   v_out: bertie__tls13keyscheduler__key_schedule__t_Handle
                 )
                =
                 bertie__tls13keyscheduler__key_schedule__v_XPD(
                   ks,
                   bertie__tls13keyscheduler__key_schedule__TLSnames_Binder(),
                   0,
                   mk_handle,
                   true,
                   th_trunc
                 )
                in
               let ks = tmp0 in
               let hoist18 = v_out in
               let binder_handle = hoist18 in let hoist19 = bertie__tls13keyscheduler__key_schedule__tagkey_from_handle(
                 ks, binder_handle
               ) in (
                 let binder =
                   accessor_bertie__tls13keyscheduler__key_schedule__t_TagKey_bertie__tls13keyscheduler__key_schedule__f_val(
                     hoist19
                   )
                  in
                 let nch = bertie__tls13formats__set_client_hello_binder(
                   algs0,
                   Some(bertie__tls13utils__t_Bytes_to_bitstring(binder)),
                   ch,
                   Some(nat_to_bitstring(trunc_len))
                 ) in (
                   let tx_ch =
                     bertie__tls13formats__impl_Transcript__add(tx, nch)
                    in
                   if zero_rtt
                   then
                     (let th = bertie__tls13formats__impl_Transcript__transcript_hash(
                        tx_ch
                      ) in (
                        let
                          (
                            tmp0: bertie__tls13keyscheduler__key_schedule__t_TLSkeyscheduler,
                            v_out: bitstring
                          )
                         =
                          bertie__tls13keyscheduler__derive_0rtt_keys(
                            ha, ae, psk_handle, th, ks
                          )
                         in
                        let ks = tmp0 in
                        let hoist20 = v_out in
                        let (
                          aek: bertie__tls13crypto__t_AeadKeyIV,
                          handle: bertie__tls13keyscheduler__key_schedule__t_Handle
                        ) = hoist20 in let key = bertie__tls13keyscheduler__key_schedule__tagkey_from_handle(
                          ks, handle
                        ) in (
                          let cipher0 =
                            Some(
                              bertie__tls13record__t_ClientCipherState0_to_bitstring(
                                bertie__tls13record__client_cipher_state0(
                                  ae, aek, 0, key
                                )
                              )
                            )
                           in
                          (ks, (nch, cipher0, tx_ch))
                        )
                        else bitstring_err()
                        else bitstring_err()
                      )
                      else bitstring_err())
                   else ((ks, (nch, None(), tx_ch)))
                 )
                 else bitstring_err()
               )
               else bitstring_err()
               else bitstring_err()
             )
             else bitstring_err()
           )
           else bitstring_err()
         )
         else let (=false, None(), =0) = (psk_mode, psk, trunc_len) in (
           let tx_ch = bertie__tls13formats__impl_Transcript__add(tx, ch) in
           (ks, (ch, None(), tx_ch))
         )
         else (ks, bitstring_err())
        in
       (ks, hax_temp_output).

letfun bertie__tls13handshake__build_client_hello(
         ciphersuite : bertie__tls13crypto__t_Algorithms,
         sn : bertie__tls13utils__t_Bytes,
         tkt : Option,
         psk : Option,
         rng : impl_CryptoRng,
         ks : bertie__tls13keyscheduler__key_schedule__t_TLSkeyscheduler
       ) =
       let tx =
         bertie__tls13formats__impl_Transcript__new(
           bertie__tls13crypto__impl_Algorithms__hash(ciphersuite)
         )
        in
       let client_random = rust_primitives__hax__repeat(0, 32) in
       let (tmp0: impl_CryptoRng, tmp1: bitstring) =
         rand_core__f_fill_bytes(rng, client_random)
        in
       let rng = tmp0 in
       let client_random = tmp1 in
       let wildcard6: bitstring = () in
       let (tmp0: impl_CryptoRng, v_out: bitstring) =
         bertie__tls13crypto__kem_keygen(
           bertie__tls13crypto__impl_Algorithms__kem(ciphersuite), rng
         )
        in
       let rng = tmp0 in
       let hoist15 = v_out in
       let (
         kem_sk: bertie__tls13utils__t_Bytes,
         kem_pk: bertie__tls13utils__t_Bytes
       ) = hoist15 in let (
         client_hello: bertie__tls13formats__handshake_data__t_HandshakeData,
         trunc_len: nat
       ) = bertie__tls13formats__client_hello(
         ciphersuite, bertie__tls13utils__bytes(client_random), kem_pk, sn, tkt
       ) in (
         let
           (
             tmp0: bertie__tls13keyscheduler__key_schedule__t_TLSkeyscheduler,
             v_out: bitstring
           )
          =
           bertie__tls13handshake__compute_psk_binder_zero_rtt(
             ciphersuite, client_hello, trunc_len, psk, tx, ks
           )
          in
         let ks = tmp0 in
         let hoist16 = v_out in
         let (
           nch: bertie__tls13formats__handshake_data__t_HandshakeData,
           cipher0: Option,
           tx_ch: bertie__tls13formats__t_Transcript
         ) = hoist16 in (
           let hax_temp_output =
             (
               nch,
               cipher0,
               bertie__tls13handshake__ClientPostClientHello(
                 bertie__tls13utils__t_Bytes_from_bitstring(client_random),
                 ciphersuite,
                 kem_sk,
                 psk,
                 tx_ch
               )
             )
            in
           (rng, ks, hax_temp_output)
         )
         else bitstring_err()
       )
       else bitstring_err()
       else bitstring_err().

letfun bertie__tls13handshake__put_server_hello(
         handshake : bertie__tls13formats__handshake_data__t_HandshakeData,
         state : bertie__tls13handshake__t_ClientPostClientHello,
         ks : bertie__tls13keyscheduler__key_schedule__t_TLSkeyscheduler
       ) =
       let
         bertie__tls13handshake__ClientPostClientHello(
           client_random, ciphersuite, sk, psk, tx
         )
        = state in
       let (sr: bertie__tls13utils__t_Bytes, ct: bertie__tls13utils__t_Bytes) = bertie__tls13formats__parse_server_hello(
         ciphersuite, handshake
       ) in (
         let tx = bertie__tls13formats__impl_Transcript__add(tx, handshake) in
         let shared_secret = bertie__tls13crypto__kem_decap(
           accessor_bertie__tls13crypto__t_Algorithms_bertie__tls13crypto__f_kem(
             ciphersuite
           ),
           ct,
           sk
         ) in let th = bertie__tls13formats__impl_Transcript__transcript_hash(tx
         ) in (
           let shared_secret_handle =
             bertie__tls13keyscheduler__key_schedule__Handle(
               bertie__tls13keyscheduler__key_schedule__TLSnames_KEM()
               ,
                 accessor_bertie__tls13crypto__t_Algorithms_bertie__tls13crypto__f_hash(
                   ciphersuite
                 )

               ,0
             )
            in
           let ks =
             bertie__tls13keyscheduler__key_schedule__set_by_handle(
               ks, shared_secret_handle, shared_secret
             )
            in
           let
             (
               ks: bertie__tls13keyscheduler__key_schedule__t_TLSkeyscheduler,
               psk_handle: Option
             )
            =
             let Some(bertie__tls13utils__t_Bytes_to_bitstring(bytes)) = psk in (
               let handle =
                 bertie__tls13keyscheduler__key_schedule__Handle(
                   bertie__tls13keyscheduler__key_schedule__TLSnames_PSK()
                   ,
                     accessor_bertie__tls13crypto__t_Algorithms_bertie__tls13crypto__f_hash(
                       ciphersuite
                     )

                   ,0
                 )
                in
               let ks =
                 bertie__tls13keyscheduler__key_schedule__set_by_handle(
                   ks, handle, bytes
                 )
                in
               (
                 ks,
                 Some(
                   bertie__tls13keyscheduler__key_schedule__t_Handle_to_bitstring(
                     handle
                   )
                 )
               )
             )
             else let None() = psk in (ks, None())
            in
           let
             (
               tmp0: bertie__tls13keyscheduler__key_schedule__t_TLSkeyscheduler,
               v_out: bitstring
             )
            =
             bertie__tls13keyscheduler__derive_hk_handles(
               accessor_bertie__tls13crypto__t_Algorithms_bertie__tls13crypto__f_hash(
                 ciphersuite
               ),
               shared_secret_handle,
               psk_handle,
               th,
               ks
             )
            in
           let ks = tmp0 in
           let hoist21 = v_out in
           let (
             ch_handle: bertie__tls13keyscheduler__key_schedule__t_Handle,
             sh_handle: bertie__tls13keyscheduler__key_schedule__t_Handle,
             ms_handle: bertie__tls13keyscheduler__key_schedule__t_Handle
           ) = hoist21 in (
             let
               (
                 tmp0: bertie__tls13keyscheduler__key_schedule__t_TLSkeyscheduler,
                 v_out: bitstring
               )
              =
               bertie__tls13keyscheduler__derive_hk_ms(
                 accessor_bertie__tls13crypto__t_Algorithms_bertie__tls13crypto__f_hash(
                   ciphersuite
                 ),
                 accessor_bertie__tls13crypto__t_Algorithms_bertie__tls13crypto__f_aead(
                   ciphersuite
                 ),
                 ch_handle,
                 sh_handle,
                 ks
               )
              in
             let ks = tmp0 in
             let hoist22 = v_out in
             let (
               chk: bertie__tls13crypto__t_AeadKeyIV,
               shk: bertie__tls13crypto__t_AeadKeyIV,
               cfk: bertie__tls13utils__t_Bytes,
               sfk: bertie__tls13utils__t_Bytes
             ) = hoist22 in (
               let hax_temp_output =
                 (
                   bertie__tls13record__impl_DuplexCipherStateH__new(
                     chk, 0, shk, 0
                   ),
                   bertie__tls13handshake__ClientPostServerHello(
                     client_random, sr, ciphersuite, ms_handle, cfk, sfk, tx
                   )
                 )
                in
               (ks, hax_temp_output)
             )
             else bitstring_err()
           )
           else bitstring_err()
         )
         else bitstring_err()
         else bitstring_err()
       )
       else bitstring_err().

letfun bertie__tls13handshake__put_server_signature(
         encrypted_extensions : bertie__tls13formats__handshake_data__t_HandshakeData,
         server_certificate : bertie__tls13formats__handshake_data__t_HandshakeData,
         server_certificate_verify : bertie__tls13formats__handshake_data__t_HandshakeData,
         handshake_state : bertie__tls13handshake__t_ClientPostServerHello
       ) =
       let
         bertie__tls13handshake__ClientPostServerHello(
           client_random,
           server_random,
           algorithms,
           master_secret_handle,
           client_finished_key,
           server_finished_key,
           transcript
         )
        = handshake_state in
       if
         core__ops__bit__f_not(
             bertie__tls13crypto__impl_Algorithms__psk_mode(algorithms)
           )
       then
         (let wildcard8: bitstring = bertie__tls13formats__parse_encrypted_extensions(
            algorithms, encrypted_extensions
          ) in (
            let transcript =
              bertie__tls13formats__impl_Transcript__add(
                transcript, encrypted_extensions
              )
             in
            let certificate = bertie__tls13formats__parse_server_certificate(
              server_certificate
            ) in (
              let transcript =
                bertie__tls13formats__impl_Transcript__add(
                  transcript, server_certificate
                )
               in
              let transcript_hash_server_certificate = bertie__tls13formats__impl_Transcript__transcript_hash(
                transcript
              ) in let spki = bertie__tls13cert__verification_key_from_cert(
                certificate
              ) in let cert_pk = bertie__tls13cert__cert_public_key(
                certificate, spki
              ) in let cert_signature = bertie__tls13formats__parse_certificate_verify(
                algorithms, server_certificate_verify
              ) in (
                let sigval =
                  bertie__tls13utils__impl_Bytes__concat(
                    bertie__tls13utils__impl_Bytes__from_slice(
                      bertie__tls13formats__v_PREFIX_SERVER_SIGNATURE
                    ),
                    transcript_hash_server_certificate
                  )
                 in
                let wildcard7: bitstring = bertie__tls13crypto__verify(
                  bertie__tls13crypto__impl_Algorithms__signature(algorithms),
                  cert_pk,
                  sigval,
                  cert_signature
                ) in (
                  let transcript =
                    bertie__tls13formats__impl_Transcript__add(
                      transcript, server_certificate_verify
                    )
                   in
                  bertie__tls13handshake__ClientPostCertificateVerify(
                    client_random,
                    server_random,
                    algorithms,
                    master_secret_handle,
                    client_finished_key,
                    server_finished_key,
                    transcript
                  )
                )
                else bertie__tls13handshake__t_ClientPostCertificateVerify_err()
              )
              else bertie__tls13handshake__t_ClientPostCertificateVerify_err()
              else bertie__tls13handshake__t_ClientPostCertificateVerify_err()
              else bertie__tls13handshake__t_ClientPostCertificateVerify_err()
              else bertie__tls13handshake__t_ClientPostCertificateVerify_err()
            )
            else bertie__tls13handshake__t_ClientPostCertificateVerify_err()
          )
          else bertie__tls13handshake__t_ClientPostCertificateVerify_err())
       else (bertie__tls13handshake__t_ClientPostCertificateVerify_err()).

letfun bertie__tls13handshake__put_psk_skip_server_signature(
         encrypted_extensions : bertie__tls13formats__handshake_data__t_HandshakeData,
         handshake_state : bertie__tls13handshake__t_ClientPostServerHello
       ) =
       let
         bertie__tls13handshake__ClientPostServerHello(
           client_random,
           server_random,
           algorithms,
           master_secret_handle,
           client_finished_key,
           server_finished_key,
           transcript
         )
        = handshake_state in
       if bertie__tls13crypto__impl_Algorithms__psk_mode(algorithms)
       then
         (let wildcard9: bitstring = bertie__tls13formats__parse_encrypted_extensions(
            algorithms, encrypted_extensions
          ) in (
            let transcript =
              bertie__tls13formats__impl_Transcript__add(
                transcript, encrypted_extensions
              )
             in
            bertie__tls13handshake__ClientPostCertificateVerify(
              client_random,
              server_random,
              algorithms,
              master_secret_handle,
              client_finished_key,
              server_finished_key,
              transcript
            )
          )
          else bertie__tls13handshake__t_ClientPostCertificateVerify_err())
       else (bertie__tls13handshake__t_ClientPostCertificateVerify_err()).

letfun bertie__tls13handshake__put_server_finished(
         server_finished : bertie__tls13formats__handshake_data__t_HandshakeData,
         handshake_state : bertie__tls13handshake__t_ClientPostCertificateVerify,
         ks : bertie__tls13keyscheduler__key_schedule__t_TLSkeyscheduler
       ) =
       let
         bertie__tls13handshake__ClientPostCertificateVerify(
           client_random,
           server_random,
           algorithms,
           master_secret_handle,
           client_finished_key,
           server_finished_key,
           transcript
         )
        = handshake_state in
       let
         bertie__tls13crypto__Algorithms(
           hash,aead,signature,kem,psk_mode,zero_rtt
         )
        = algorithms in
       let transcript_hash = bertie__tls13formats__impl_Transcript__transcript_hash(
         transcript
       ) in let verify_data = bertie__tls13formats__parse_finished(
         server_finished
       ) in let wildcard10: bitstring = bertie__tls13crypto__hmac_verify(
         hash, server_finished_key, transcript_hash, verify_data
       ) in (
         let transcript =
           bertie__tls13formats__impl_Transcript__add(
             transcript, server_finished
           )
          in
         let transcript_hash_server_finished = bertie__tls13formats__impl_Transcript__transcript_hash(
           transcript
         ) in (
           let
             (
               tmp0: bertie__tls13keyscheduler__key_schedule__t_TLSkeyscheduler,
               v_out: bitstring
             )
            =
             bertie__tls13keyscheduler__derive_app_handles(
               hash, master_secret_handle, transcript_hash_server_finished, ks
             )
            in
           let ks = tmp0 in
           let hoist23 = v_out in
           let (
             ca_handle: bertie__tls13keyscheduler__key_schedule__t_Handle,
             sa_handle: bertie__tls13keyscheduler__key_schedule__t_Handle,
             exp_handle: bertie__tls13keyscheduler__key_schedule__t_Handle
           ) = hoist23 in (
             let
               (
                 tmp0: bertie__tls13keyscheduler__key_schedule__t_TLSkeyscheduler,
                 v_out: bitstring
               )
              =
               bertie__tls13keyscheduler__derive_app_keys(
                 hash, aead, ca_handle, sa_handle, ks
               )
              in
             let ks = tmp0 in
             let hoist24 = v_out in
             let (
               cak: bertie__tls13crypto__t_AeadKeyIV,
               sak: bertie__tls13crypto__t_AeadKeyIV
             ) = hoist24 in let exp = bertie__tls13keyscheduler__key_schedule__tagkey_from_handle(
               ks, exp_handle
             ) in (
               let cipher1 =
                 bertie__tls13record__duplex_cipher_state1(
                   aead, cak, 0, sak, 0, exp
                 )
                in
               let hax_temp_output =
                 (
                   cipher1,
                   bertie__tls13handshake__ClientPostServerFinished(
                     client_random,
                     server_random,
                     algorithms,
                     master_secret_handle,
                     client_finished_key,
                     transcript
                   )
                 )
                in
               (ks, hax_temp_output)
             )
             else bitstring_err()
             else bitstring_err()
           )
           else bitstring_err()
         )
         else bitstring_err()
       )
       else bitstring_err()
       else bitstring_err()
       else bitstring_err().

letfun bertie__tls13handshake__get_client_finished(
         handshake_state : bertie__tls13handshake__t_ClientPostServerFinished,
         ks : bertie__tls13keyscheduler__key_schedule__t_TLSkeyscheduler
       ) =
       let
         bertie__tls13handshake__ClientPostServerFinished(
           client_random,
           server_random,
           algorithms,
           master_secret_handle,
           client_finished_key,
           transcript
         )
        = handshake_state in
       let transcript_hash = bertie__tls13formats__impl_Transcript__transcript_hash(
         transcript
       ) in let verify_data = bertie__tls13crypto__hmac_tag(
         bertie__tls13crypto__impl_Algorithms__hash(algorithms),
         client_finished_key,
         transcript_hash
       ) in let client_finished = bertie__tls13formats__finished(verify_data) in (
         let transcript =
           bertie__tls13formats__impl_Transcript__add(
             transcript, client_finished
           )
          in
         let transcript_hash = bertie__tls13formats__impl_Transcript__transcript_hash(
           transcript
         ) in (
           let
             (
               tmp0: bertie__tls13keyscheduler__key_schedule__t_TLSkeyscheduler,
               v_out: bertie__tls13keyscheduler__key_schedule__t_Handle
             )
            =
             bertie__tls13keyscheduler__derive_rms(
               bertie__tls13crypto__impl_Algorithms__hash(algorithms),
               master_secret_handle,
               transcript_hash,
               ks
             )
            in
           let ks = tmp0 in
           let hoist25 = v_out in
           let resumption_master_secret = hoist25 in (
             let hax_temp_output =
               (
                 client_finished,
                 bertie__tls13handshake__ClientPostClientFinished(
                   client_random,
                   server_random,
                   algorithms,
                   resumption_master_secret,
                   transcript
                 )
               )
              in
             (ks, hax_temp_output)
           )
           else bitstring_err()
         )
         else bitstring_err()
       )
       else bitstring_err()
       else bitstring_err()
       else bitstring_err().

letfun bertie__tls13handshake__client_init(
         algs : bertie__tls13crypto__t_Algorithms,
         sn : bertie__tls13utils__t_Bytes,
         tkt : Option,
         psk : Option,
         rng : impl_CryptoRng,
         ks : bertie__tls13keyscheduler__key_schedule__t_TLSkeyscheduler
       ) =
       let
         (
           tmp0: impl_CryptoRng,
           tmp1: bertie__tls13keyscheduler__key_schedule__t_TLSkeyscheduler,
           v_out: bitstring
         )
        =
         bertie__tls13handshake__build_client_hello(algs, sn, tkt, psk, rng, ks)
        in
       let rng = tmp0 in
       let ks = tmp1 in
       let hax_temp_output = v_out in
       (rng, ks, hax_temp_output).

letfun bertie__tls13handshake__client_set_params(
         payload : bertie__tls13formats__handshake_data__t_HandshakeData,
         st : bertie__tls13handshake__t_ClientPostClientHello,
         ks : bertie__tls13keyscheduler__key_schedule__t_TLSkeyscheduler
       ) =
       let
         (
           tmp0: bertie__tls13keyscheduler__key_schedule__t_TLSkeyscheduler,
           v_out: bitstring
         )
        = bertie__tls13handshake__put_server_hello(payload, st, ks) in
       let ks = tmp0 in
       let hax_temp_output = v_out in
       (ks, hax_temp_output).

letfun bertie__tls13handshake__client_finish(
         payload : bertie__tls13formats__handshake_data__t_HandshakeData,
         handshake_state : bertie__tls13handshake__t_ClientPostServerHello,
         ks : bertie__tls13keyscheduler__key_schedule__t_TLSkeyscheduler
       ) =
       let
         (
           ks: bertie__tls13keyscheduler__key_schedule__t_TLSkeyscheduler,
           hax_temp_output: bitstring
         )
        =
         let (=false) = bertie__tls13crypto__impl_Algorithms__psk_mode(
           bertie__tls13handshake__algs_post_server_hello(handshake_state)
         ) in let (
           encrypted_extensions: bertie__tls13formats__handshake_data__t_HandshakeData,
           server_certificate: bertie__tls13formats__handshake_data__t_HandshakeData,
           server_certificate_verify: bertie__tls13formats__handshake_data__t_HandshakeData,
           server_finished: bertie__tls13formats__handshake_data__t_HandshakeData
         ) = bertie__tls13formats__handshake_data__impl_HandshakeData__to_four(
           payload
         ) in let client_state_certificate_verify = bertie__tls13handshake__put_server_signature(
           encrypted_extensions,
           server_certificate,
           server_certificate_verify,
           handshake_state
         ) in (
           let
             (
               tmp0: bertie__tls13keyscheduler__key_schedule__t_TLSkeyscheduler,
               v_out: bitstring
             )
            =
             bertie__tls13handshake__put_server_finished(
               server_finished, client_state_certificate_verify, ks
             )
            in
           let ks = tmp0 in
           let hoist26 = v_out in
           let (
             cipher: bertie__tls13record__t_DuplexCipherState1,
             client_state_server_finished: bertie__tls13handshake__t_ClientPostServerFinished
           ) = hoist26 in (
             let
               (
                 tmp0: bertie__tls13keyscheduler__key_schedule__t_TLSkeyscheduler,
                 v_out: bitstring
               )
              =
               bertie__tls13handshake__get_client_finished(
                 client_state_server_finished, ks
               )
              in
             let ks = tmp0 in
             let hoist27 = v_out in
             let (
               client_finished: bertie__tls13formats__handshake_data__t_HandshakeData,
               client_state: bertie__tls13handshake__t_ClientPostClientFinished
             ) = hoist27 in (ks, (client_finished, cipher, client_state))
             else bitstring_err()
           )
           else bitstring_err()
         )
         else bitstring_err()
         else bitstring_err()
         else let (=true) = bertie__tls13crypto__impl_Algorithms__psk_mode(
           bertie__tls13handshake__algs_post_server_hello(handshake_state)
         ) in let (
           encrypted_extensions: bertie__tls13formats__handshake_data__t_HandshakeData,
           server_finished: bertie__tls13formats__handshake_data__t_HandshakeData
         ) = bertie__tls13formats__handshake_data__impl_HandshakeData__to_two(
           payload
         ) in let client_state_certificate_verify = bertie__tls13handshake__put_psk_skip_server_signature(
           encrypted_extensions, handshake_state
         ) in (
           let
             (
               tmp0: bertie__tls13keyscheduler__key_schedule__t_TLSkeyscheduler,
               v_out: bitstring
             )
            =
             bertie__tls13handshake__put_server_finished(
               server_finished, client_state_certificate_verify, ks
             )
            in
           let ks = tmp0 in
           let hoist28 = v_out in
           let (
             cipher: bertie__tls13record__t_DuplexCipherState1,
             client_state_server_finished: bertie__tls13handshake__t_ClientPostServerFinished
           ) = hoist28 in (
             let
               (
                 tmp0: bertie__tls13keyscheduler__key_schedule__t_TLSkeyscheduler,
                 v_out: bitstring
               )
              =
               bertie__tls13handshake__get_client_finished(
                 client_state_server_finished, ks
               )
              in
             let ks = tmp0 in
             let hoist29 = v_out in
             let (
               client_finished: bertie__tls13formats__handshake_data__t_HandshakeData,
               client_state: bertie__tls13handshake__t_ClientPostClientFinished
             ) = hoist29 in (ks, (client_finished, cipher, client_state))
             else bitstring_err()
           )
           else bitstring_err()
         )
         else bitstring_err()
         else bitstring_err()
        in
       (ks, hax_temp_output).

letfun bertie__tls13handshake__process_psk_binder_zero_rtt(
         ciphersuite : bertie__tls13crypto__t_Algorithms,
         th_trunc : bertie__tls13utils__t_Bytes,
         th : bertie__tls13utils__t_Bytes,
         psko : Option,
         bindero : Option,
         ks : bertie__tls13keyscheduler__key_schedule__t_TLSkeyscheduler
       ) =
       let
         (
           ks: bertie__tls13keyscheduler__key_schedule__t_TLSkeyscheduler,
           hax_temp_output: Option
         )
        =
         let (
           =true,
           Some(bertie__tls13utils__t_Bytes_to_bitstring(k)),
           Some(bertie__tls13utils__t_Bytes_to_bitstring(binder))
         ) = (
           accessor_bertie__tls13crypto__t_Algorithms_bertie__tls13crypto__f_psk_mode(
             ciphersuite
           ),
           psko,
           bindero
         ) in (
           let psk_handle =
             bertie__tls13keyscheduler__key_schedule__Handle(
               bertie__tls13keyscheduler__key_schedule__TLSnames_PSK()
               ,
                 accessor_bertie__tls13crypto__t_Algorithms_bertie__tls13crypto__f_hash(
                   ciphersuite
                 )

               ,0
             )
            in
           let ks =
             bertie__tls13keyscheduler__key_schedule__set_by_handle(
               ks, psk_handle, k
             )
            in
           let
             (
               tmp0: bertie__tls13keyscheduler__key_schedule__t_TLSkeyscheduler,
               v_out: bertie__tls13keyscheduler__key_schedule__t_Handle
             )
            =
             bertie__tls13keyscheduler__derive_binder_key(
               accessor_bertie__tls13crypto__t_Algorithms_bertie__tls13crypto__f_hash(
                 ciphersuite
               ),
               psk_handle,
               ks
             )
            in
           let ks = tmp0 in
           let hoist31 = v_out in
           let mk_handle = hoist31 in let hoist32 = bertie__tls13keyscheduler__key_schedule__tagkey_from_handle(
             ks, mk_handle
           ) in (
             let mk =
               accessor_bertie__tls13keyscheduler__key_schedule__t_TagKey_bertie__tls13keyscheduler__key_schedule__f_val(
                 hoist32
               )
              in
             let
               (
                 tmp0: bertie__tls13keyscheduler__key_schedule__t_TLSkeyscheduler,
                 v_out: bertie__tls13keyscheduler__key_schedule__t_Handle
               )
              =
               bertie__tls13keyscheduler__key_schedule__v_XPD(
                 ks,
                 bertie__tls13keyscheduler__key_schedule__TLSnames_Binder(),
                 0,
                 mk_handle,
                 true,
                 th_trunc
               )
              in
             let ks = tmp0 in
             let hoist33 = v_out in
             let binder_handle = hoist33 in let hoist34 = bertie__tls13keyscheduler__key_schedule__tagkey_from_handle(
               ks, binder_handle
             ) in (
               let binder =
                 accessor_bertie__tls13keyscheduler__key_schedule__t_TagKey_bertie__tls13keyscheduler__key_schedule__f_val(
                   hoist34
                 )
                in
               let wildcard11: bitstring = bertie__tls13crypto__hmac_verify(
                 accessor_bertie__tls13crypto__t_Algorithms_bertie__tls13crypto__f_hash(
                   ciphersuite
                 ),
                 mk,
                 th_trunc,
                 binder
               ) in (
                 if
                   accessor_bertie__tls13crypto__t_Algorithms_bertie__tls13crypto__f_zero_rtt(
                       ciphersuite
                     )
                 then
                   (let
                      (
                        tmp0: bertie__tls13keyscheduler__key_schedule__t_TLSkeyscheduler,
                        v_out: bitstring
                      )
                     =
                      bertie__tls13keyscheduler__derive_0rtt_keys(
                        accessor_bertie__tls13crypto__t_Algorithms_bertie__tls13crypto__f_hash(
                          ciphersuite
                        ),
                        accessor_bertie__tls13crypto__t_Algorithms_bertie__tls13crypto__f_aead(
                          ciphersuite
                        ),
                        psk_handle,
                        th,
                        ks
                      )
                     in
                    let ks = tmp0 in
                    let hoist35 = v_out in
                    let (
                      key_iv: bertie__tls13crypto__t_AeadKeyIV,
                      early_exporter_ms_handle: bertie__tls13keyscheduler__key_schedule__t_Handle
                    ) = hoist35 in let early_exporter_ms = bertie__tls13keyscheduler__key_schedule__tagkey_from_handle(
                      ks, early_exporter_ms_handle
                    ) in (
                      ks,
                      Some(
                        bertie__tls13record__t_ServerCipherState0_to_bitstring(
                          bertie__tls13record__server_cipher_state0(
                            key_iv, 0, early_exporter_ms
                          )
                        )
                      )
                    )
                    else bitstring_err()
                    else bitstring_err())
                 else ((ks, None()))
               )
               else bitstring_err()
             )
             else bitstring_err()
             else bitstring_err()
           )
           else bitstring_err()
           else bitstring_err()
         )
         else let (=false, None(), None()) = (
           accessor_bertie__tls13crypto__t_Algorithms_bertie__tls13crypto__f_psk_mode(
             ciphersuite
           ),
           psko,
           bindero
         ) in (ks, None())
         else (ks, Option_err())
        in
       (ks, hax_temp_output).

letfun bertie__tls13handshake__put_client_hello(
         ciphersuite : bertie__tls13crypto__t_Algorithms,
         ch : bertie__tls13formats__handshake_data__t_HandshakeData,
         db : bertie__server__t_ServerDB,
         ks : bertie__tls13keyscheduler__key_schedule__t_TLSkeyscheduler
       ) =
       let (
         client_randomness: bertie__tls13utils__t_Bytes,
         session_id: bertie__tls13utils__t_Bytes,
         sni: bertie__tls13utils__t_Bytes,
         gx: bertie__tls13utils__t_Bytes,
         tkto: Option,
         bindero: Option,
         trunc_len: nat
       ) = bertie__tls13formats__parse_client_hello(ciphersuite, ch) in (
         let tx =
           bertie__tls13formats__impl_Transcript__new(
             bertie__tls13crypto__impl_Algorithms__hash(ciphersuite)
           )
          in
         let th_trunc = bertie__tls13formats__impl_Transcript__transcript_hash_without_client_hello(
           tx, ch, trunc_len
         ) in (
           let transcript = bertie__tls13formats__impl_Transcript__add(tx, ch) in
           let th = bertie__tls13formats__impl_Transcript__transcript_hash(
             transcript
           ) in let server = bertie__server__lookup_db(
             ciphersuite, db, sni, tkto
           ) in (
             let
               (
                 tmp0: bertie__tls13keyscheduler__key_schedule__t_TLSkeyscheduler,
                 v_out: Option
               )
              =
               bertie__tls13handshake__process_psk_binder_zero_rtt(
                 ciphersuite,
                 th_trunc,
                 th,
                 accessor_bertie__server__t_ServerInfo_bertie__server__f_psk_opt(
                   server
                 ),
                 bindero,
                 ks
               )
              in
             let ks = tmp0 in
             let hoist30 = v_out in
             let cipher0 = hoist30 in (
               let hax_temp_output =
                 (
                   cipher0,
                   bertie__tls13handshake__ServerPostClientHello(
                     client_randomness
                     ,ciphersuite
                     ,session_id
                     ,gx
                     ,server
                     ,transcript
                   )
                 )
                in
               (ks, hax_temp_output)
             )
             else bitstring_err()
           )
           else bitstring_err()
           else bitstring_err()
         )
         else bitstring_err()
       )
       else bitstring_err().

letfun bertie__tls13handshake__get_server_hello(
         state : bertie__tls13handshake__t_ServerPostClientHello,
         rng : impl_CryptoRng,
         ks : bertie__tls13keyscheduler__key_schedule__t_TLSkeyscheduler
       ) =
       let server_random = rust_primitives__hax__repeat(0, 32) in
       let (tmp0: impl_CryptoRng, tmp1: bitstring) =
         rand_core__f_fill_bytes(rng, server_random)
        in
       let rng = tmp0 in
       let server_random = tmp1 in
       let wildcard12: bitstring = () in
       let (tmp0: impl_CryptoRng, v_out: bitstring) =
         bertie__tls13crypto__kem_encap(
           accessor_bertie__tls13crypto__t_Algorithms_bertie__tls13crypto__f_kem(
             accessor_bertie__tls13handshake__t_ServerPostClientHello_bertie__tls13handshake__f_ciphersuite(
               state
             )
           ),
           accessor_bertie__tls13handshake__t_ServerPostClientHello_bertie__tls13handshake__f_gx(
             state
           ),
           rng
         )
        in
       let rng = tmp0 in
       let hoist36 = v_out in
       let (
         shared_secret: bertie__tls13utils__t_Bytes,
         gy: bertie__tls13utils__t_Bytes
       ) = hoist36 in (
         let shared_secret_handle =
           bertie__tls13keyscheduler__key_schedule__Handle(
             bertie__tls13keyscheduler__key_schedule__TLSnames_KEM()
             ,
               accessor_bertie__tls13crypto__t_Algorithms_bertie__tls13crypto__f_hash(
                 accessor_bertie__tls13handshake__t_ServerPostClientHello_bertie__tls13handshake__f_ciphersuite(
                   state
                 )
               )

             ,0
           )
          in
         let ks =
           bertie__tls13keyscheduler__key_schedule__set_by_handle(
             ks, shared_secret_handle, shared_secret
           )
          in
         let sh = bertie__tls13formats__server_hello(
           accessor_bertie__tls13handshake__t_ServerPostClientHello_bertie__tls13handshake__f_ciphersuite(
             state
           ),
           bertie__tls13utils__bytes(server_random),
           accessor_bertie__tls13handshake__t_ServerPostClientHello_bertie__tls13handshake__f_session_id(
             state
           ),
           gy
         ) in (
           let transcript =
             bertie__tls13formats__impl_Transcript__add(
               accessor_bertie__tls13handshake__t_ServerPostClientHello_bertie__tls13handshake__f_transcript(
                 state
               ),
               sh
             )
            in
           let transcript_hash = bertie__tls13formats__impl_Transcript__transcript_hash(
             transcript
           ) in (
             let psk_handle =
               accessor_bertie__server__t_ServerInfo_bertie__server__f_psk_opt(
                 accessor_bertie__tls13handshake__t_ServerPostClientHello_bertie__tls13handshake__f_server(
                   state
                 )
               )
              in
             let
               (
                 ks: bertie__tls13keyscheduler__key_schedule__t_TLSkeyscheduler,
                 psk_handle: Option
               )
              =
               let Some(bertie__tls13utils__t_Bytes_to_bitstring(bytes)) = psk_handle in (
                 let handle =
                   bertie__tls13keyscheduler__key_schedule__Handle(
                     bertie__tls13keyscheduler__key_schedule__TLSnames_PSK()
                     ,
                       accessor_bertie__tls13crypto__t_Algorithms_bertie__tls13crypto__f_hash(
                         accessor_bertie__tls13handshake__t_ServerPostClientHello_bertie__tls13handshake__f_ciphersuite(
                           state
                         )
                       )

                     ,0
                   )
                  in
                 let ks =
                   bertie__tls13keyscheduler__key_schedule__set_by_handle(
                     ks, handle, bytes
                   )
                  in
                 (
                   ks,
                   Some(
                     bertie__tls13keyscheduler__key_schedule__t_Handle_to_bitstring(
                       handle
                     )
                   )
                 )
               )
               else let None() = psk_handle in (ks, None())
              in
             let
               (
                 tmp0: bertie__tls13keyscheduler__key_schedule__t_TLSkeyscheduler,
                 v_out: bitstring
               )
              =
               bertie__tls13keyscheduler__derive_hk_handles(
                 accessor_bertie__tls13crypto__t_Algorithms_bertie__tls13crypto__f_hash(
                   accessor_bertie__tls13handshake__t_ServerPostClientHello_bertie__tls13handshake__f_ciphersuite(
                     state
                   )
                 ),
                 shared_secret_handle,
                 psk_handle,
                 transcript_hash,
                 ks
               )
              in
             let ks = tmp0 in
             let hoist37 = v_out in
             let (
               ch_handle: bertie__tls13keyscheduler__key_schedule__t_Handle,
               sh_handle: bertie__tls13keyscheduler__key_schedule__t_Handle,
               ms_handle: bertie__tls13keyscheduler__key_schedule__t_Handle
             ) = hoist37 in (
               let
                 (
                   tmp0: bertie__tls13keyscheduler__key_schedule__t_TLSkeyscheduler,
                   v_out: bitstring
                 )
                =
                 bertie__tls13keyscheduler__derive_hk_ms(
                   accessor_bertie__tls13crypto__t_Algorithms_bertie__tls13crypto__f_hash(
                     accessor_bertie__tls13handshake__t_ServerPostClientHello_bertie__tls13handshake__f_ciphersuite(
                       state
                     )
                   ),
                   accessor_bertie__tls13crypto__t_Algorithms_bertie__tls13crypto__f_aead(
                     accessor_bertie__tls13handshake__t_ServerPostClientHello_bertie__tls13handshake__f_ciphersuite(
                       state
                     )
                   ),
                   ch_handle,
                   sh_handle,
                   ks
                 )
                in
               let ks = tmp0 in
               let hoist38 = v_out in
               let (
                 chk: bertie__tls13crypto__t_AeadKeyIV,
                 shk: bertie__tls13crypto__t_AeadKeyIV,
                 cfk: bertie__tls13utils__t_Bytes,
                 sfk: bertie__tls13utils__t_Bytes
               ) = hoist38 in (
                 let hax_temp_output =
                   (
                     sh,
                     bertie__tls13record__impl_DuplexCipherStateH__new(
                       shk, 0, chk, 0
                     ),
                     bertie__tls13handshake__ServerPostServerHello(

                         accessor_bertie__tls13handshake__t_ServerPostClientHello_bertie__tls13handshake__f_client_randomness(
                           state
                         )

                       ,
                         bertie__tls13utils__t_Bytes_from_bitstring(
                           server_random
                         )

                       ,
                         accessor_bertie__tls13handshake__t_ServerPostClientHello_bertie__tls13handshake__f_ciphersuite(
                           state
                         )

                       ,
                         accessor_bertie__tls13handshake__t_ServerPostClientHello_bertie__tls13handshake__f_server(
                           state
                         )

                       ,ms_handle
                       ,cfk
                       ,sfk
                       ,transcript
                     )
                   )
                  in
                 (rng, ks, hax_temp_output)
               )
               else bitstring_err()
             )
             else bitstring_err()
           )
           else bitstring_err()
         )
         else bitstring_err()
       )
       else bitstring_err().

letfun bertie__tls13handshake__get_rsa_signature(
         cert : bertie__tls13utils__t_Bytes,
         sk : bertie__tls13utils__t_Bytes,
         sigval : bertie__tls13utils__t_Bytes,
         rng : impl_CryptoRng
       ) =
       let hax_temp_output =
         (
              extern__sign_inner_rsa(
                  sk,
                  sigval
               )
         )
        in
       (rng, hax_temp_output).

letfun bertie__tls13handshake__get_server_signature_no_psk(
         state : bertie__tls13handshake__t_ServerPostServerHello,
         rng : impl_CryptoRng
       ) =
       let ee = bertie__tls13formats__encrypted_extensions(
         accessor_bertie__tls13handshake__t_ServerPostServerHello_bertie__tls13handshake__f_ciphersuite(
           state
         )
       ) in (
         let transcript =
           bertie__tls13formats__impl_Transcript__add(
             accessor_bertie__tls13handshake__t_ServerPostServerHello_bertie__tls13handshake__f_transcript(
               state
             ),
             ee
           )
          in
         let sc = bertie__tls13formats__server_certificate(
           accessor_bertie__tls13handshake__t_ServerPostServerHello_bertie__tls13handshake__f_ciphersuite(
             state
           ),
           accessor_bertie__server__t_ServerInfo_bertie__server__f_cert(
             accessor_bertie__tls13handshake__t_ServerPostServerHello_bertie__tls13handshake__f_server(
               state
             )
           )
         ) in (
           let transcript =
             bertie__tls13formats__impl_Transcript__add(transcript, sc)
            in
           let transcript_hash = bertie__tls13formats__impl_Transcript__transcript_hash(
             transcript
           ) in (
             let sigval =
               bertie__tls13utils__impl_Bytes__concat(
                 bertie__tls13utils__impl_Bytes__from_slice(
                   bertie__tls13formats__v_PREFIX_SERVER_SIGNATURE
                 ),
                 transcript_hash
               )
              in
             let (rng: impl_CryptoRng, hoist39: bertie__tls13utils__t_Bytes) =
               let bertie__tls13crypto__SignatureScheme_EcdsaSecp256r1Sha256() = bertie__tls13crypto__impl_Algorithms__signature(
                 accessor_bertie__tls13handshake__t_ServerPostServerHello_bertie__tls13handshake__f_ciphersuite(
                   state
                 )
               ) in (
                 let (tmp0: impl_CryptoRng, v_out: bertie__tls13utils__t_Bytes) =
                   bertie__tls13crypto__sign(
                     bertie__tls13crypto__impl_Algorithms__signature(
                       accessor_bertie__tls13handshake__t_ServerPostServerHello_bertie__tls13handshake__f_ciphersuite(
                         state
                       )
                     ),
                     accessor_bertie__server__t_ServerInfo_bertie__server__f_sk(
                       accessor_bertie__tls13handshake__t_ServerPostServerHello_bertie__tls13handshake__f_server(
                         state
                       )
                     ),
                     sigval,
                     rng
                   )
                  in
                 let rng = tmp0 in
                 (rng, v_out)
               )
               else let bertie__tls13crypto__SignatureScheme_RsaPssRsaSha256() = bertie__tls13crypto__impl_Algorithms__signature(
                 accessor_bertie__tls13handshake__t_ServerPostServerHello_bertie__tls13handshake__f_ciphersuite(
                   state
                 )
               ) in (
                 let (tmp0: impl_CryptoRng, v_out: bertie__tls13utils__t_Bytes) =
                   bertie__tls13handshake__get_rsa_signature(
                     accessor_bertie__server__t_ServerInfo_bertie__server__f_cert(
                       accessor_bertie__tls13handshake__t_ServerPostServerHello_bertie__tls13handshake__f_server(
                         state
                       )
                     ),
                     accessor_bertie__server__t_ServerInfo_bertie__server__f_sk(
                       accessor_bertie__tls13handshake__t_ServerPostServerHello_bertie__tls13handshake__f_server(
                         state
                       )
                     ),
                     sigval,
                     rng
                   )
                  in
                 let rng = tmp0 in
                 (rng, v_out)
               )
               else let bertie__tls13crypto__SignatureScheme_ED25519() = bertie__tls13crypto__impl_Algorithms__signature(
                 accessor_bertie__tls13handshake__t_ServerPostServerHello_bertie__tls13handshake__f_ciphersuite(
                   state
                 )
               ) in (rng, bertie__tls13utils__t_Bytes_err())
              in
             let sig = hoist39 in let scv = bertie__tls13formats__certificate_verify(
               accessor_bertie__tls13handshake__t_ServerPostServerHello_bertie__tls13handshake__f_ciphersuite(
                 state
               ),
               sig
             ) in (
               let transcript =
                 bertie__tls13formats__impl_Transcript__add(transcript, scv)
                in
               let hax_temp_output =
                 (
                   ee,
                   sc,
                   scv,
                   bertie__tls13handshake__ServerPostCertificateVerify(
                     accessor_bertie__tls13handshake__t_ServerPostServerHello_bertie__tls13handshake__f_client_random(
                       state
                     ),
                     accessor_bertie__tls13handshake__t_ServerPostServerHello_bertie__tls13handshake__f_server_random(
                       state
                     ),
                     accessor_bertie__tls13handshake__t_ServerPostServerHello_bertie__tls13handshake__f_ciphersuite(
                       state
                     ),
                     accessor_bertie__tls13handshake__t_ServerPostServerHello_bertie__tls13handshake__f_master_secret(
                       state
                     ),
                     accessor_bertie__tls13handshake__t_ServerPostServerHello_bertie__tls13handshake__f_cfk(
                       state
                     ),
                     accessor_bertie__tls13handshake__t_ServerPostServerHello_bertie__tls13handshake__f_sfk(
                       state
                     ),
                     transcript
                   )
                 )
                in
               (rng, hax_temp_output)
             )
             else bitstring_err()
             else bitstring_err()
           )
           else bitstring_err()
         )
         else bitstring_err()
       )
       else bitstring_err().

letfun bertie__tls13handshake__get_server_signature(
         state : bertie__tls13handshake__t_ServerPostServerHello,
         rng : impl_CryptoRng
       ) =
       let (rng: impl_CryptoRng, hax_temp_output: bitstring) =
         if
           core__ops__bit__f_not(
               bertie__tls13crypto__impl_Algorithms__psk_mode(
                 accessor_bertie__tls13handshake__t_ServerPostServerHello_bertie__tls13handshake__f_ciphersuite(
                   state
                 )
               )
             )
         then
           (let (tmp0: impl_CryptoRng, v_out: bitstring) =
              bertie__tls13handshake__get_server_signature_no_psk(state, rng)
             in
            let rng = tmp0 in
            (rng, v_out))
         else ((rng, bitstring_err()))
        in
       (rng, hax_temp_output).

letfun bertie__tls13handshake__get_skip_server_signature_no_psk(
         st : bertie__tls13handshake__t_ServerPostServerHello
       ) =
       let
         bertie__tls13handshake__ServerPostServerHello(
           cr,sr,algs,server,ms,cfk,sfk,tx
         )
        = st in
       let ee = bertie__tls13formats__encrypted_extensions(algs) in (
         let tx = bertie__tls13formats__impl_Transcript__add(tx, ee) in
         (
           ee,
           bertie__tls13handshake__ServerPostCertificateVerify(
             cr, sr, algs, ms, cfk, sfk, tx
           )
         )
       )
       else bitstring_err().

letfun bertie__tls13handshake__get_skip_server_signature(
         st : bertie__tls13handshake__t_ServerPostServerHello
       ) =
       let
         bertie__tls13handshake__ServerPostServerHello(
           cr,sr,algs,server,ms,cfk,sfk,tx
         )
        = st in
       if bertie__tls13crypto__impl_Algorithms__psk_mode(algs)
       then (bertie__tls13handshake__get_skip_server_signature_no_psk(st))
       else (bitstring_err()).

letfun bertie__tls13handshake__get_server_finished(
         st : bertie__tls13handshake__t_ServerPostCertificateVerify,
         ks : bertie__tls13keyscheduler__key_schedule__t_TLSkeyscheduler
       ) =
       let
         bertie__tls13handshake__ServerPostCertificateVerify(
           cr, sr, algs, ms_handle, cfk, sfk, tx
         )
        = st in
       let
         bertie__tls13crypto__Algorithms(ha,ae,e_sa,e_gn,e_psk_mode,e_zero_rtt)
        = algs in
       let th_scv = bertie__tls13formats__impl_Transcript__transcript_hash(tx) in let vd = bertie__tls13crypto__hmac_tag(
         ha, sfk, th_scv
       ) in let sfin = bertie__tls13formats__finished(vd) in (
         let tx = bertie__tls13formats__impl_Transcript__add(tx, sfin) in
         let th_sfin = bertie__tls13formats__impl_Transcript__transcript_hash(tx
         ) in (
           let
             (
               tmp0: bertie__tls13keyscheduler__key_schedule__t_TLSkeyscheduler,
               v_out: bitstring
             )
            =
             bertie__tls13keyscheduler__derive_app_handles(
               ha, ms_handle, th_sfin, ks
             )
            in
           let ks = tmp0 in
           let hoist40 = v_out in
           let (
             ca_handle: bertie__tls13keyscheduler__key_schedule__t_Handle,
             sa_handle: bertie__tls13keyscheduler__key_schedule__t_Handle,
             exp_handle: bertie__tls13keyscheduler__key_schedule__t_Handle
           ) = hoist40 in (
             let
               (
                 tmp0: bertie__tls13keyscheduler__key_schedule__t_TLSkeyscheduler,
                 v_out: bitstring
               )
              =
               bertie__tls13keyscheduler__derive_app_keys(
                 ha, ae, ca_handle, sa_handle, ks
               )
              in
             let ks = tmp0 in
             let hoist41 = v_out in
             let (
               cak: bertie__tls13crypto__t_AeadKeyIV,
               sak: bertie__tls13crypto__t_AeadKeyIV
             ) = hoist41 in let exp = bertie__tls13keyscheduler__key_schedule__tagkey_from_handle(
               ks, exp_handle
             ) in (
               let cipher1 =
                 bertie__tls13record__duplex_cipher_state1(
                   ae, sak, 0, cak, 0, exp
                 )
                in
               let hax_temp_output =
                 (
                   sfin,
                   cipher1,
                   bertie__tls13handshake__ServerPostServerFinished(
                     cr, sr, algs, ms_handle, cfk, tx
                   )
                 )
                in
               (ks, hax_temp_output)
             )
             else bitstring_err()
             else bitstring_err()
           )
           else bitstring_err()
         )
         else bitstring_err()
       )
       else bitstring_err()
       else bitstring_err()
       else bitstring_err().

letfun bertie__tls13handshake__put_client_finished(
         cfin : bertie__tls13formats__handshake_data__t_HandshakeData,
         st : bertie__tls13handshake__t_ServerPostServerFinished,
         ks : bertie__tls13keyscheduler__key_schedule__t_TLSkeyscheduler
       ) =
       let
         bertie__tls13handshake__ServerPostServerFinished(
           cr, sr, algs, ms, cfk, tx
         )
        = st in
       let th = bertie__tls13formats__impl_Transcript__transcript_hash(tx) in let vd = bertie__tls13formats__parse_finished(
         cfin
       ) in let wildcard13: bitstring = bertie__tls13crypto__hmac_verify(
         bertie__tls13crypto__impl_Algorithms__hash(algs), cfk, th, vd
       ) in (
         let tx = bertie__tls13formats__impl_Transcript__add(tx, cfin) in
         let th = bertie__tls13formats__impl_Transcript__transcript_hash(tx) in (
           let
             (
               tmp0: bertie__tls13keyscheduler__key_schedule__t_TLSkeyscheduler,
               v_out: bertie__tls13keyscheduler__key_schedule__t_Handle
             )
            =
             bertie__tls13keyscheduler__derive_rms(
               bertie__tls13crypto__impl_Algorithms__hash(algs), ms, th, ks
             )
            in
           let ks = tmp0 in
           let hoist42 = v_out in
           let rms = hoist42 in (
             let hax_temp_output =
               bertie__tls13handshake__ServerPostClientFinished(
                 cr, sr, algs, rms, tx
               )
              in
             (ks, hax_temp_output)
           )
           else bitstring_err()
         )
         else bitstring_err()
       )
       else bitstring_err()
       else bitstring_err()
       else bitstring_err().

letfun bertie__tls13handshake__server_init_no_psk(
         algs : bertie__tls13crypto__t_Algorithms,
         ch : bertie__tls13formats__handshake_data__t_HandshakeData,
         db : bertie__server__t_ServerDB,
         rng : impl_CryptoRng,
         ks : bertie__tls13keyscheduler__key_schedule__t_TLSkeyscheduler
       ) =
       let
         (
           tmp0: bertie__tls13keyscheduler__key_schedule__t_TLSkeyscheduler,
           v_out: bitstring
         )
        = bertie__tls13handshake__put_client_hello(algs, ch, db, ks) in
       let ks = tmp0 in
       let hoist43 = v_out in
       let (cipher0: Option, st: bertie__tls13handshake__t_ServerPostClientHello
       ) = hoist43 in (
         let
           (
             tmp0: impl_CryptoRng,
             tmp1: bertie__tls13keyscheduler__key_schedule__t_TLSkeyscheduler,
             v_out: bitstring
           )
          = bertie__tls13handshake__get_server_hello(st, rng, ks) in
         let rng = tmp0 in
         let ks = tmp1 in
         let hoist44 = v_out in
         let (
           sh: bertie__tls13formats__handshake_data__t_HandshakeData,
           cipher_hs: bertie__tls13record__t_DuplexCipherStateH,
           st: bertie__tls13handshake__t_ServerPostServerHello
         ) = hoist44 in (
           let (tmp0: impl_CryptoRng, v_out: bitstring) =
             bertie__tls13handshake__get_server_signature(st, rng)
            in
           let rng = tmp0 in
           let hoist45 = v_out in
           let (
             ee: bertie__tls13formats__handshake_data__t_HandshakeData,
             sc: bertie__tls13formats__handshake_data__t_HandshakeData,
             scv: bertie__tls13formats__handshake_data__t_HandshakeData,
             st: bertie__tls13handshake__t_ServerPostCertificateVerify
           ) = hoist45 in (
             let
               (
                 tmp0: bertie__tls13keyscheduler__key_schedule__t_TLSkeyscheduler,
                 v_out: bitstring
               )
              = bertie__tls13handshake__get_server_finished(st, ks) in
             let ks = tmp0 in
             let hoist46 = v_out in
             let (
               sfin: bertie__tls13formats__handshake_data__t_HandshakeData,
               cipher1: bertie__tls13record__t_DuplexCipherState1,
               st: bertie__tls13handshake__t_ServerPostServerFinished
             ) = hoist46 in (
               let flight =
                 bertie__tls13formats__handshake_data__impl_HandshakeData__concat(
                   bertie__tls13formats__handshake_data__impl_HandshakeData__concat(
                     bertie__tls13formats__handshake_data__impl_HandshakeData__concat(
                       ee, sc
                     ),
                     scv
                   ),
                   sfin
                 )
                in
               let hax_temp_output =
                 (sh, flight, cipher0, cipher_hs, cipher1, st)
                in
               (rng, ks, hax_temp_output)
             )
             else bitstring_err()
           )
           else bitstring_err()
         )
         else bitstring_err()
       )
       else bitstring_err().

letfun bertie__tls13handshake__server_init_psk(
         algs : bertie__tls13crypto__t_Algorithms,
         ch : bertie__tls13formats__handshake_data__t_HandshakeData,
         db : bertie__server__t_ServerDB,
         rng : impl_CryptoRng,
         ks : bertie__tls13keyscheduler__key_schedule__t_TLSkeyscheduler
       ) =
       let
         (
           tmp0: bertie__tls13keyscheduler__key_schedule__t_TLSkeyscheduler,
           v_out: bitstring
         )
        = bertie__tls13handshake__put_client_hello(algs, ch, db, ks) in
       let ks = tmp0 in
       let hoist47 = v_out in
       let (cipher0: Option, st: bertie__tls13handshake__t_ServerPostClientHello
       ) = hoist47 in (
         let
           (
             tmp0: impl_CryptoRng,
             tmp1: bertie__tls13keyscheduler__key_schedule__t_TLSkeyscheduler,
             v_out: bitstring
           )
          = bertie__tls13handshake__get_server_hello(st, rng, ks) in
         let rng = tmp0 in
         let ks = tmp1 in
         let hoist48 = v_out in
         let (
           sh: bertie__tls13formats__handshake_data__t_HandshakeData,
           cipher_hs: bertie__tls13record__t_DuplexCipherStateH,
           st: bertie__tls13handshake__t_ServerPostServerHello
         ) = hoist48 in let (
           ee: bertie__tls13formats__handshake_data__t_HandshakeData,
           st: bertie__tls13handshake__t_ServerPostCertificateVerify
         ) = bertie__tls13handshake__get_skip_server_signature(st) in (
           let
             (
               tmp0: bertie__tls13keyscheduler__key_schedule__t_TLSkeyscheduler,
               v_out: bitstring
             )
            = bertie__tls13handshake__get_server_finished(st, ks) in
           let ks = tmp0 in
           let hoist49 = v_out in
           let (
             sfin: bertie__tls13formats__handshake_data__t_HandshakeData,
             cipher1: bertie__tls13record__t_DuplexCipherState1,
             st: bertie__tls13handshake__t_ServerPostServerFinished
           ) = hoist49 in (
             let flight =
               bertie__tls13formats__handshake_data__impl_HandshakeData__concat(
                 ee, sfin
               )
              in
             let hax_temp_output = (sh, flight, cipher0, cipher_hs, cipher1, st) in
             (rng, ks, hax_temp_output)
           )
           else bitstring_err()
         )
         else bitstring_err()
         else bitstring_err()
       )
       else bitstring_err().

letfun bertie__tls13handshake__server_init(
         algs : bertie__tls13crypto__t_Algorithms,
         ch : bertie__tls13formats__handshake_data__t_HandshakeData,
         db : bertie__server__t_ServerDB,
         rng : impl_CryptoRng,
         ks : bertie__tls13keyscheduler__key_schedule__t_TLSkeyscheduler
       ) =
       let
         (
           (
             ks: bertie__tls13keyscheduler__key_schedule__t_TLSkeyscheduler,
             rng: impl_CryptoRng
           ),
           hax_temp_output: bitstring
         )
        =
         let (=false) = bertie__tls13crypto__impl_Algorithms__psk_mode(algs) in (
           let
             (
               tmp0: impl_CryptoRng,
               tmp1: bertie__tls13keyscheduler__key_schedule__t_TLSkeyscheduler,
               v_out: bitstring
             )
            = bertie__tls13handshake__server_init_no_psk(algs, ch, db, rng, ks) in
           let rng = tmp0 in
           let ks = tmp1 in
           ((ks, rng), v_out)
         )
         else let (=true) = bertie__tls13crypto__impl_Algorithms__psk_mode(algs) in (
           let
             (
               tmp0: impl_CryptoRng,
               tmp1: bertie__tls13keyscheduler__key_schedule__t_TLSkeyscheduler,
               v_out: bitstring
             )
            = bertie__tls13handshake__server_init_psk(algs, ch, db, rng, ks) in
           let rng = tmp0 in
           let ks = tmp1 in
           ((ks, rng), v_out)
         )
        in
       (rng, ks, hax_temp_output).

letfun bertie__tls13handshake__server_finish(
         cf : bertie__tls13formats__handshake_data__t_HandshakeData,
         st : bertie__tls13handshake__t_ServerPostServerFinished,
         ks : bertie__tls13keyscheduler__key_schedule__t_TLSkeyscheduler
       ) =
       let
         (
           tmp0: bertie__tls13keyscheduler__key_schedule__t_TLSkeyscheduler,
           v_out: bertie__tls13handshake__t_ServerPostClientFinished
         )
        = bertie__tls13handshake__put_client_finished(cf, st, ks) in
       let ks = tmp0 in
       let hax_temp_output = v_out in
       (ks, hax_temp_output).

letfun bertie__tls13handshake__proverif_extra__f(wildcard14 : bitstring) =
       let b = bertie__tls13utils__impl_Bytes__new(()) in
       ().

