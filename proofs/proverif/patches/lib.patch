--- proofs/proverif/extraction/lib.pvl	2024-04-04 08:42:32.394763093 +0200
+++ proofs/proverif/extraction/lib_latest.pvl	2024-04-04 08:42:14.064816277 +0200
@@ -20,7 +20,7 @@
 fun nat_to_bitstring(nat): bitstring.
 
 letfun bool_default() = false.
-
+event Reachable_simple.
 
 (*****************************************)
 (* Types and Constructors *)
@@ -486,26 +486,9 @@
       bertie__tls13utils__t_Bytes, bertie__tls13utils__t_Bytes
     )
     : bertie__tls13crypto__t_RsaVerificationKey [data].
-reduc forall 
-  bertie__tls13crypto__RsaVerificationKey_f_modulus: bertie__tls13utils__t_Bytes,
-  bertie__tls13crypto__RsaVerificationKey_f_exponent: bertie__tls13utils__t_Bytes
-;
-    accessor_bertie__tls13crypto__RsaVerificationKey_f_modulus(
-      bertie__tls13crypto__RsaVerificationKey_c(
-        bertie__tls13crypto__RsaVerificationKey_f_modulus,
-        bertie__tls13crypto__RsaVerificationKey_f_exponent
-      )
-    ) = bertie__tls13crypto__RsaVerificationKey_f_modulus.
-reduc forall 
-  bertie__tls13crypto__RsaVerificationKey_f_modulus: bertie__tls13utils__t_Bytes,
-  bertie__tls13crypto__RsaVerificationKey_f_exponent: bertie__tls13utils__t_Bytes
-;
-    accessor_bertie__tls13crypto__RsaVerificationKey_f_exponent(
-      bertie__tls13crypto__RsaVerificationKey_c(
-        bertie__tls13crypto__RsaVerificationKey_f_modulus,
-        bertie__tls13crypto__RsaVerificationKey_f_exponent
-      )
-    ) = bertie__tls13crypto__RsaVerificationKey_f_exponent.
+
+
+
 
 type bertie__tls13crypto__t_PublicVerificationKey.
 
@@ -2125,6 +2108,9 @@
 
 type bertie__tls13record__t_DuplexCipherState1.
 
+event ClientFinished(bertie__tls13utils__t_Bytes,bertie__tls13record__t_DuplexCipherState1, bertie__tls13handshake__t_ClientPostClientFinished).
+event ServerFinished(bertie__tls13utils__t_Bytes,bertie__tls13record__t_DuplexCipherState1, bertie__tls13handshake__t_ServerPostServerFinished).
+
 fun bertie__tls13record__t_DuplexCipherState1_to_bitstring(
       bertie__tls13record__t_DuplexCipherState1
     )
@@ -2445,22 +2431,30 @@
 letfun bertie__tls13utils__parse_failed(wildcard1 : bitstring) =
        bertie__tls13utils__v_PARSE_FAILED.
 
-(* REPLACE by handwritten model *)
-letfun bertie__tls13utils__u16_as_be_bytes(val : nat) =
-       bitstring_default().
+(* MARKER: tls13utils models*)
+fun bertie__tls13utils__u16_as_be_bytes(nat)
+    : bertie__tls13utils__t_Bytes [data].
+
+letfun bertie__tls13utils__eq(
+         b1 : bertie__tls13utils__t_Bytes, b2 : bertie__tls13utils__t_Bytes
+       ) =
+       b1 = b2. (* This is term equality, which may not be what we want? *)
+
+fun bertie__tls13utils__check_eq(bertie__tls13utils__t_Bytes, bertie__tls13utils__t_Bytes): bitstring
+reduc forall b1 : bertie__tls13utils__t_Bytes;
+      bertie__tls13utils__check_eq(b1,b1) = ().
+
+fun bertie__tls13utils__impl__Bytes__concat(bertie__tls13utils__t_Bytes, bertie__tls13utils__t_Bytes): bertie__tls13utils__t_Bytes [data].
+
+letfun bertie__tls13utils__impl__Bytes__prefix(self:bertie__tls13utils__t_Bytes, prefix:bertie__tls13utils__t_Bytes)
+=
+       bertie__tls13utils__impl__Bytes__concat(prefix, self).
+(* MARKER: tls13utils models end*)
+
 
 letfun bertie__tls13crypto__impl__HashAlgorithm__hash_len(
          self : bertie__tls13crypto__t_HashAlgorithm
-       ) =
-       let bertie__tls13crypto__HashAlgorithm_HashAlgorithm_SHA256_c() = self in libcrux__digest__digest_size(
-         libcrux__digest__Algorithm_Algorithm_Sha256_c()
-       )
-       else let bertie__tls13crypto__HashAlgorithm_HashAlgorithm_SHA384_c() = self in libcrux__digest__digest_size(
-         libcrux__digest__Algorithm_Algorithm_Sha384_c()
-       )
-       else let bertie__tls13crypto__HashAlgorithm_HashAlgorithm_SHA512_c() = self in libcrux__digest__digest_size(
-         libcrux__digest__Algorithm_Algorithm_Sha512_c()
-       ).
+       ) = 0.
 
 letfun bertie__tls13crypto__impl__HashAlgorithm__hmac_tag_len(
          self : bertie__tls13crypto__t_HashAlgorithm
@@ -2487,22 +2481,6 @@
        ) =
        accessor_bertie__tls13crypto__Algorithms_f_signature(self).
 
-(* REPLACE by handwritten model *)
-letfun bertie__tls13cert__verification_key_from_cert(
-         cert : bertie__tls13utils__t_Bytes
-       ) =
-       bitstring_default().
-
-(* marked as constructor *)
-fun bertie__tls13crypto__sign_rsa(
-      bertie__tls13utils__t_Bytes,
-      bertie__tls13utils__t_Bytes,
-      bertie__tls13utils__t_Bytes,
-      bertie__tls13crypto__t_SignatureScheme,
-      bertie__tls13utils__t_Bytes,
-      impl_CryptoRng___RngCore
-    )
-    : bitstring [data].
 
 (* marked as constructor *)
 fun bertie__tls13crypto__impl__HashAlgorithm__hash(
@@ -2533,56 +2511,13 @@
       bertie__tls13utils__t_Bytes,
       bertie__tls13utils__t_Bytes
     )
-    : bertie__tls13utils__t_Bytes [data].
-
-(* REPLACE by handwritten model *)
-letfun bertie__tls13crypto__kem_decap(
-         alg : bertie__tls13crypto__t_KemScheme,
-         ct : bertie__tls13utils__t_Bytes,
-         sk : bertie__tls13utils__t_Bytes
-       ) =
-       bertie__tls13utils__t_Bytes_default().
+    : bertie__tls13utils__t_Bytes.
 
 letfun bertie__tls13utils__impl__Bytes__as_raw(
          self : bertie__tls13utils__t_Bytes
        ) =
        accessor_bertie__tls13utils__Bytes_0(self).
 
-(* REPLACE by handwritten model *)
-letfun bertie__tls13utils__impl__Bytes__prefix(
-         self : bertie__tls13utils__t_Bytes, prefix : bitstring
-       ) =
-       bertie__tls13utils__t_Bytes_default().
-
-(* REPLACE by handwritten model *)
-letfun bertie__tls13utils__impl__Bytes__concat(
-         self : bertie__tls13utils__t_Bytes, other : bertie__tls13utils__t_Bytes
-       ) =
-       bertie__tls13utils__t_Bytes_default().
-
-(* marked as constructor *)
-fun bertie__tls13crypto__kem_encap(
-      bertie__tls13crypto__t_KemScheme,
-      bertie__tls13utils__t_Bytes,
-      impl_CryptoRng___RngCore
-    )
-    : bitstring [data].
-
-(* REPLACE by handwritten model *)
-letfun bertie__tls13crypto__kem_keygen(
-         alg : bertie__tls13crypto__t_KemScheme, rng : impl_CryptoRng___RngCore
-       ) =
-       bitstring_default().
-
-(* marked as constructor *)
-fun bertie__tls13crypto__sign(
-      bertie__tls13crypto__t_SignatureScheme,
-      bertie__tls13utils__t_Bytes,
-      bertie__tls13utils__t_Bytes,
-      impl_CryptoRng___RngCore
-    )
-    : bitstring [data].
-
 letfun bertie__tls13utils__impl__Bytes__from_slice(s : bitstring) =
        bertie__tls13utils__t_Bytes_from_bitstring(s).
 
@@ -2609,52 +2544,23 @@
 letfun bertie__tls13utils__bytes(x : bitstring) =
        bertie__tls13utils__t_Bytes_from_bitstring(x).
 
-(* REPLACE by handwritten model *)
-letfun bertie__tls13utils__check_eq(
-         b1 : bertie__tls13utils__t_Bytes, b2 : bertie__tls13utils__t_Bytes
-       ) =
-       bitstring_default().
-
 (* marked as constructor *)
 fun bertie__tls13utils__encode_length_u8(bitstring)
     : bertie__tls13utils__t_Bytes [data].
 
-letfun bertie__tls13handshake__hkdf_expand_label(
-         hash_algorithm : bertie__tls13crypto__t_HashAlgorithm,
-         key : bertie__tls13utils__t_Bytes,
-         label : bertie__tls13utils__t_Bytes,
-         context : bertie__tls13utils__t_Bytes,
-         len : nat
-       ) =
-       if core__cmp__PartialOrd__ge(len, 65536)
-       then (bertie__tls13utils__t_Bytes_err())
-       else (
-         let lenb =
-           bertie__tls13utils__u16_as_be_bytes(bertie__tls13utils__v_U16(len))
-          in
-         let tls13_label =
-           bertie__tls13utils__impl__Bytes__concat(
-             bertie__tls13utils__impl__Bytes__from_slice(
-               bertie__tls13formats__v_LABEL_TLS13
-             ),
-             label
-           )
-          in
-         let hoist27 = bertie__tls13utils__encode_length_u8(
-           bertie__tls13utils__impl__Bytes__as_raw(tls13_label)
-         ) in let hoist26 = bertie__tls13utils__encode_length_u8(
-           bertie__tls13utils__impl__Bytes__as_raw(context)
-         ) in (
-           let hoist28 =
-             bertie__tls13utils__impl__Bytes__concat(hoist27, hoist26)
-            in
-           let info = bertie__tls13utils__impl__Bytes__prefix(hoist28, lenb) in
-           bertie__tls13crypto__hkdf_expand(hash_algorithm, key, info, len)
-         )
-         else bertie__tls13utils__t_Bytes_err()
-         else bertie__tls13utils__t_Bytes_err()
-       ).
+fun expand_label_inner(bertie__tls13crypto__t_HashAlgorithm,
+         bertie__tls13utils__t_Bytes,
+         bertie__tls13utils__t_Bytes,
+         bertie__tls13utils__t_Bytes): bertie__tls13utils__t_Bytes [data].
 
+letfun bertie__tls13handshake__hkdf_expand_label(
+         hash_algorithm: bertie__tls13crypto__t_HashAlgorithm,
+         key: bertie__tls13utils__t_Bytes,
+         label: bertie__tls13utils__t_Bytes,
+         input: bertie__tls13utils__t_Bytes,
+         length: nat
+       ) = expand_label_inner(hash_algorithm, key, label, input).
+       
 letfun bertie__tls13handshake__derive_finished_key(
          ha : bertie__tls13crypto__t_HashAlgorithm,
          k : bertie__tls13utils__t_Bytes
@@ -2708,21 +2614,6 @@
          tx
        ).
 
-(* REPLACE by handwritten model *)
-letfun bertie__tls13utils__eq(
-         b1 : bertie__tls13utils__t_Bytes, b2 : bertie__tls13utils__t_Bytes
-       ) =
-       bool_default().
-
-(* REPLACE by handwritten model *)
-letfun bertie__tls13crypto__hmac_verify(
-         alg : bertie__tls13crypto__t_HashAlgorithm,
-         mk : bertie__tls13utils__t_Bytes,
-         input : bertie__tls13utils__t_Bytes,
-         tag : bertie__tls13utils__t_Bytes
-       ) =
-       bitstring_default().
-
 letfun bertie__server__lookup_db(
          ciphersuite : bertie__tls13crypto__t_Algorithms,
          db : bertie__server__t_ServerDB,
@@ -2789,39 +2680,264 @@
     )
     : bertie__tls13crypto__t_RsaVerificationKey [data].
 
-(* REPLACE by handwritten model *)
+(* MARKER: tls13cert models*)
+fun bertie__tls13cert__ecdsa_public_key(bertie__tls13utils__t_Bytes, bertie__tls13cert__t_CertificateKey): bertie__tls13utils__t_Bytes.
+fun spki(bertie__tls13crypto__t_SignatureScheme,
+         bertie__tls13cert__t_CertificateKey):  bertie__tls13utils__t_Bytes [data].
+
+fun certificate(bertie__tls13utils__t_Bytes, bertie__tls13utils__t_Bytes, bertie__tls13crypto__t_PublicVerificationKey): bertie__tls13utils__t_Bytes [private].
+
+reduc forall
+      server_name: bertie__tls13utils__t_Bytes,
+      spki:bertie__tls13utils__t_Bytes,
+      cert_pk: bertie__tls13crypto__t_PublicVerificationKey;
+      cert_verify(server_name, certificate(server_name, spki, cert_pk))
+      = certificate(server_name, spki, cert_pk).
+
+
 letfun bertie__tls13cert__cert_public_key(
+         server_name: bertie__tls13utils__t_Bytes,
          certificate : bertie__tls13utils__t_Bytes, spki : bitstring
        ) =
-       bertie__tls13crypto__t_PublicVerificationKey_default().
+       let certificate = cert_verify(server_name, certificate) in
+       let (scheme: bertie__tls13crypto__t_SignatureScheme, pk: bertie__tls13cert__t_CertificateKey) = spki in
+       let bertie__tls13crypto__SignatureScheme_SignatureScheme_ED25519_c() = scheme in
+       bertie__tls13crypto__t_PublicVerificationKey_err()
+       else let bertie__tls13crypto__SignatureScheme_SignatureScheme_EcdsaSecp256r1Sha256_c(
+
+       ) = scheme in let pk = bertie__tls13cert__ecdsa_public_key(
+         certificate, pk
+       ) in bertie__tls13crypto__PublicVerificationKey_PublicVerificationKey_EcDsa_c(
+         pk
+       )
+       else bertie__tls13crypto__t_PublicVerificationKey_err()
+       else let bertie__tls13crypto__SignatureScheme_SignatureScheme_RsaPssRsaSha256_c(
 
-(* REPLACE by handwritten model *)
-letfun bertie__tls13crypto__verify(
-         alg : bertie__tls13crypto__t_SignatureScheme,
-         pk : bertie__tls13crypto__t_PublicVerificationKey,
-         input : bertie__tls13utils__t_Bytes,
-         sig : bertie__tls13utils__t_Bytes
+       ) = scheme in let pk = bertie__tls13cert__rsa_public_key(
+         certificate, pk
+       ) in bertie__tls13crypto__PublicVerificationKey_PublicVerificationKey_Rsa_c(
+         pk
+       )
+       else bertie__tls13crypto__t_PublicVerificationKey_err().
+
+      
+reduc forall server_name: bertie__tls13utils__t_Bytes, alg: bertie__tls13crypto__t_SignatureScheme, cert_key_slice: bertie__tls13cert__t_CertificateKey, cert_key: bertie__tls13crypto__t_PublicVerificationKey;
+  bertie__tls13cert__verification_key_from_cert(
+            certificate(server_name, spki(alg, cert_key_slice), cert_key) 
        ) =
-       bitstring_default().
+       (alg, cert_key_slice).
+(* MARKER: tls13cert models end*)
 
-(* marked as constructor *)
-fun bertie__tls13formats__handshake_data__impl__HandshakeData__concat(
-      bertie__tls13formats__handshake_data__t_HandshakeData,
-      bertie__tls13formats__handshake_data__t_HandshakeData
+(* MARKER: tls13crypto models*)
+fun vk_from_sk(bertie__tls13utils__t_Bytes): bertie__tls13crypto__t_PublicVerificationKey.
+fun rsa_vk_from_sk(bertie__tls13utils__t_Bytes,bertie__tls13utils__t_Bytes,bertie__tls13utils__t_Bytes): bertie__tls13crypto__t_PublicVerificationKey.
+fun rsa_modulus_from_sk(bertie__tls13utils__t_Bytes): bertie__tls13utils__t_Bytes.
+const RSA_PUBLIC_EXPONENT: bertie__tls13utils__t_Bytes.
+
+fun ecdsa_cert_key_slice(): bertie__tls13cert__t_CertificateKey.
+fun rsa_cert_key_slice(): bertie__tls13cert__t_CertificateKey.
+
+
+fun accessor_bertie__tls13crypto__RsaVerificationKey_f_modulus(bertie__tls13crypto__t_RsaVerificationKey): bertie__tls13utils__t_Bytes
+reduc forall 
+  bertie__tls13crypto__RsaVerificationKey_f_modulus: bertie__tls13utils__t_Bytes,
+  bertie__tls13crypto__RsaVerificationKey_f_exponent: bertie__tls13utils__t_Bytes
+;
+    accessor_bertie__tls13crypto__RsaVerificationKey_f_modulus(
+      bertie__tls13crypto__RsaVerificationKey_c(
+        bertie__tls13crypto__RsaVerificationKey_f_modulus,
+        bertie__tls13crypto__RsaVerificationKey_f_exponent
+      )
+    ) = bertie__tls13crypto__RsaVerificationKey_f_modulus
+otherwise
+    forall server_name: bertie__tls13utils__t_Bytes,
+           sk: bertie__tls13utils__t_Bytes,
+           modulus: bertie__tls13utils__t_Bytes,
+           exponent: bertie__tls13utils__t_Bytes,
+           key_slice: bertie__tls13cert__t_CertificateKey;
+    accessor_bertie__tls13crypto__RsaVerificationKey_f_modulus(    bertie__tls13cert__rsa_public_key(
+        certificate(server_name,
+                    spki(bertie__tls13crypto__SignatureScheme_SignatureScheme_RsaPssRsaSha256_c,
+                         key_slice),
+                    rsa_vk_from_sk(sk,
+                                   modulus,
+                    exponent)),
+                    key_slice)) = modulus.
+
+fun accessor_bertie__tls13crypto__RsaVerificationKey_f_exponent(bertie__tls13crypto__t_RsaVerificationKey): bertie__tls13utils__t_Bytes
+reduc forall 
+  bertie__tls13crypto__RsaVerificationKey_f_modulus: bertie__tls13utils__t_Bytes,
+  bertie__tls13crypto__RsaVerificationKey_f_exponent: bertie__tls13utils__t_Bytes
+;
+    accessor_bertie__tls13crypto__RsaVerificationKey_f_exponent(
+      bertie__tls13crypto__RsaVerificationKey_c(
+        bertie__tls13crypto__RsaVerificationKey_f_modulus,
+        bertie__tls13crypto__RsaVerificationKey_f_exponent
+      )
+    ) = bertie__tls13crypto__RsaVerificationKey_f_exponent
+    otherwise
+    forall server_name: bertie__tls13utils__t_Bytes,
+           sk: bertie__tls13utils__t_Bytes,
+           modulus: bertie__tls13utils__t_Bytes,
+           exponent: bertie__tls13utils__t_Bytes,
+           key_slice: bertie__tls13cert__t_CertificateKey;
+    accessor_bertie__tls13crypto__RsaVerificationKey_f_exponent(    bertie__tls13cert__rsa_public_key(
+        certificate(server_name,
+                    spki(bertie__tls13crypto__SignatureScheme_SignatureScheme_RsaPssRsaSha256_c,
+                         key_slice),
+                    rsa_vk_from_sk(sk,
+                                   modulus,
+                    exponent)),
+                    key_slice)) = exponent.
+
+    
+fun sign_inner(
+      bertie__tls13crypto__t_SignatureScheme,
+      bertie__tls13utils__t_Bytes,
+      bertie__tls13utils__t_Bytes
     )
-    : bertie__tls13formats__handshake_data__t_HandshakeData [data].
+    : bertie__tls13utils__t_Bytes.
 
-(* REPLACE by handwritten model *)
-letfun bertie__tls13formats__handshake_data__impl__HandshakeData__to_four(
-         self : bertie__tls13formats__handshake_data__t_HandshakeData
-       ) =
-       bitstring_default().
+letfun bertie__tls13crypto__sign(
+      alg:bertie__tls13crypto__t_SignatureScheme,
+      sk: bertie__tls13utils__t_Bytes,
+      input: bertie__tls13utils__t_Bytes,
+      rng: impl_CryptoRng___RngCore)
+      =
+      (rng,
+        sign_inner(
+        alg,
+        sk,
+        input
+      )).
 
-(* REPLACE by handwritten model *)
-letfun bertie__tls13formats__handshake_data__impl__HandshakeData__to_two(
-         self : bertie__tls13formats__handshake_data__t_HandshakeData
+fun sign_inner_rsa(
+      bertie__tls13utils__t_Bytes,
+      bertie__tls13utils__t_Bytes,
+      bertie__tls13utils__t_Bytes,
+      bertie__tls13crypto__t_SignatureScheme,
+      bertie__tls13utils__t_Bytes
+    )
+    : bertie__tls13utils__t_Bytes.
+
+letfun bertie__tls13crypto__sign_rsa(
+      sk: bertie__tls13utils__t_Bytes,
+      pk_modulus: bertie__tls13utils__t_Bytes,
+      pk_exponent: bertie__tls13utils__t_Bytes,
+      cert_scheme: bertie__tls13crypto__t_SignatureScheme,
+      input: bertie__tls13utils__t_Bytes,
+      rng: impl_CryptoRng___RngCore
+    )
+    =
+    (rng,
+        sign_inner_rsa(
+          sk,
+          pk_modulus,
+          pk_exponent,
+          cert_scheme,
+          input)
+    ).
+
+fun bertie__tls13crypto__verify(
+        bertie__tls13crypto__t_SignatureScheme,
+        bertie__tls13crypto__t_PublicVerificationKey,
+        bertie__tls13utils__t_Bytes,
+        bertie__tls13utils__t_Bytes
+        )
+    : bitstring
+  reduc
+    forall server_name: bertie__tls13utils__t_Bytes,
+           sk: bertie__tls13utils__t_Bytes,
+           cert_scheme: bertie__tls13crypto__t_SignatureScheme,
+           input: bertie__tls13utils__t_Bytes,
+           rng: impl_CryptoRng___RngCore;
+      bertie__tls13crypto__verify(
+        bertie__tls13crypto__SignatureScheme_SignatureScheme_RsaPssRsaSha256_c(),
+
+        bertie__tls13crypto__PublicVerificationKey_PublicVerificationKey_Rsa_c(
+            bertie__tls13cert__rsa_public_key(
+                certificate(server_name,
+                    spki(bertie__tls13crypto__SignatureScheme_SignatureScheme_RsaPssRsaSha256_c,rsa_cert_key_slice),
+                    rsa_vk_from_sk(sk,rsa_modulus_from_sk(sk),RSA_PUBLIC_EXPONENT)),
+                    rsa_cert_key_slice)),
+        input,
+        sign_inner_rsa(sk, rsa_modulus_from_sk(sk), RSA_PUBLIC_EXPONENT, cert_scheme, input)
+      ) = ()
+  otherwise
+    forall server_name: bertie__tls13utils__t_Bytes,
+           sk: bertie__tls13utils__t_Bytes,
+           input: bertie__tls13utils__t_Bytes,
+           rng: impl_CryptoRng___RngCore;
+      bertie__tls13crypto__verify(
+        bertie__tls13crypto__SignatureScheme_SignatureScheme_EcdsaSecp256r1Sha256_c,
+        bertie__tls13crypto__PublicVerificationKey_PublicVerificationKey_EcDsa_c(
+            bertie__tls13cert__ecdsa_public_key(
+                certificate(server_name,
+                    spki(bertie__tls13crypto__SignatureScheme_SignatureScheme_EcdsaSecp256r1Sha256_c,ecdsa_cert_key_slice),
+                    vk_from_sk(sk)),
+                ecdsa_cert_key_slice)),
+        input,
+        sign_inner(bertie__tls13crypto__SignatureScheme_SignatureScheme_EcdsaSecp256r1Sha256_c, sk, input)
+      ) = ().
+
+reduc
+  forall
+         alg : bertie__tls13crypto__t_HashAlgorithm,
+         mk : bertie__tls13utils__t_Bytes,
+         input : bertie__tls13utils__t_Bytes;
+         bertie__tls13crypto__hmac_verify(
+            alg,
+            mk,
+            input,
+            bertie__tls13crypto__hmac_tag(alg, mk, input)
+         ) = ().
+
+fun kem_pk_from_sk(bertie__tls13utils__t_Bytes): bertie__tls13utils__t_Bytes.
+
+letfun bertie__tls13crypto__kem_keygen(
+         alg : bertie__tls13crypto__t_KemScheme, rng : impl_CryptoRng___RngCore
        ) =
-       bitstring_default().
+       new kem_sk: bertie__tls13utils__t_Bytes;
+       let kem_pk = kem_pk_from_sk(kem_sk) in
+       (rng, (kem_sk, kem_pk)).
+
+fun kem_encapsulation(bertie__tls13utils__t_Bytes, bertie__tls13utils__t_Bytes): bertie__tls13utils__t_Bytes.
+
+letfun bertie__tls13crypto__kem_encap(
+      alg: bertie__tls13crypto__t_KemScheme,
+      pk: bertie__tls13utils__t_Bytes,
+      rng: impl_CryptoRng___RngCore
+    ) = 
+     new shared_secret: bertie__tls13utils__t_Bytes;
+     let ct = kem_encapsulation(pk, shared_secret) in
+     (rng,(shared_secret, ct)).
+
+reduc forall alg: bertie__tls13crypto__t_KemScheme, kem_sk: bertie__tls13utils__t_Bytes, shared_secret: bertie__tls13utils__t_Bytes;
+     bertie__tls13crypto__kem_decap(
+     alg, kem_encapsulation(kem_pk_from_sk(kem_sk), shared_secret), kem_sk
+     ) = shared_secret.
+(* MARKER: tls13crypto models end*)
+
+fun HandshakeData_to_bytes(bertie__tls13formats__handshake_data__t_HandshakeData): bertie__tls13utils__t_Bytes [typeConverter].
+fun HandshakeData_from_bytes(bertie__tls13utils__t_Bytes):  bertie__tls13formats__handshake_data__t_HandshakeData [typeConverter].
+
+letfun bertie__tls13formats__handshake_data__impl__HandshakeData__concat(
+      self: bertie__tls13formats__handshake_data__t_HandshakeData,
+      other: bertie__tls13formats__handshake_data__t_HandshakeData
+    ) =
+
+
+    let self_bytes: bertie__tls13utils__t_Bytes =          HandshakeData_to_bytes(self) in
+
+    let other_bytes: bertie__tls13utils__t_Bytes =         HandshakeData_to_bytes(other) in
+
+    HandshakeData_from_bytes(
+    bertie__tls13utils__impl__Bytes__concat(
+    self_bytes,
+    other_bytes
+    )).
+
+
 
 (* marked as constructor *)
 fun bertie__tls13formats__certificate_verify(
@@ -2830,16 +2946,6 @@
     : bertie__tls13formats__handshake_data__t_HandshakeData [data].
 
 (* marked as constructor *)
-fun bertie__tls13formats__client_hello(
-      bertie__tls13crypto__t_Algorithms,
-      bertie__tls13utils__t_Bytes,
-      bertie__tls13utils__t_Bytes,
-      bertie__tls13utils__t_Bytes,
-      Option
-    )
-    : bitstring [data].
-
-(* marked as constructor *)
 fun bertie__tls13formats__encrypted_extensions(bertie__tls13crypto__t_Algorithms
     )
     : bertie__tls13formats__handshake_data__t_HandshakeData [data].
@@ -2848,45 +2954,6 @@
 fun bertie__tls13formats__finished(bertie__tls13utils__t_Bytes)
     : bertie__tls13formats__handshake_data__t_HandshakeData [data].
 
-(* REPLACE by handwritten model *)
-letfun bertie__tls13formats__parse_certificate_verify(
-         algs : bertie__tls13crypto__t_Algorithms,
-         certificate_verify : bertie__tls13formats__handshake_data__t_HandshakeData
-       ) =
-       bertie__tls13utils__t_Bytes_default().
-
-(* REPLACE by handwritten model *)
-letfun bertie__tls13formats__parse_client_hello(
-         ciphersuite : bertie__tls13crypto__t_Algorithms,
-         client_hello : bertie__tls13formats__handshake_data__t_HandshakeData
-       ) =
-       bitstring_default().
-
-(* REPLACE by handwritten model *)
-letfun bertie__tls13formats__parse_encrypted_extensions(
-         v__algs : bertie__tls13crypto__t_Algorithms,
-         encrypted_extensions : bertie__tls13formats__handshake_data__t_HandshakeData
-       ) =
-       bitstring_default().
-
-(* REPLACE by handwritten model *)
-letfun bertie__tls13formats__parse_finished(
-         finished : bertie__tls13formats__handshake_data__t_HandshakeData
-       ) =
-       bertie__tls13utils__t_Bytes_default().
-
-(* REPLACE by handwritten model *)
-letfun bertie__tls13formats__parse_server_certificate(
-         certificate : bertie__tls13formats__handshake_data__t_HandshakeData
-       ) =
-       bertie__tls13utils__t_Bytes_default().
-
-(* REPLACE by handwritten model *)
-letfun bertie__tls13formats__parse_server_hello(
-         algs : bertie__tls13crypto__t_Algorithms,
-         server_hello : bertie__tls13formats__handshake_data__t_HandshakeData
-       ) =
-       bitstring_default().
 
 (* marked as constructor *)
 fun bertie__tls13formats__server_certificate(
@@ -2902,27 +2969,149 @@
       bertie__tls13utils__t_Bytes
     )
     : bertie__tls13formats__handshake_data__t_HandshakeData [data].
+(* MARKER: tls13formats models*)
+
+reduc forall hs1: bertie__tls13utils__t_Bytes,
+             hs2: bertie__tls13utils__t_Bytes;
+  bertie__tls13formats__handshake_data__impl__HandshakeData__to_two(
+                HandshakeData_from_bytes(bertie__tls13utils__impl__Bytes__concat(hs1, hs2)))
+     = (hs1,
+        hs2).
+
+
+reduc forall hs1: bertie__tls13utils__t_Bytes,
+             hs2: bertie__tls13utils__t_Bytes,
+             hs3: bertie__tls13utils__t_Bytes,
+             hs4: bertie__tls13utils__t_Bytes;
+  bertie__tls13formats__handshake_data__impl__HandshakeData__to_four(
+                HandshakeData_from_bytes(bertie__tls13utils__impl__Bytes__concat(
+                        bertie__tls13utils__impl__Bytes__concat(
+                                bertie__tls13utils__impl__Bytes__concat(
+                                hs1,
+                                hs2),
+                                hs3),
+                                hs4)))
+     = (hs1,
+        hs2,
+        hs3,
+        hs4).
+
+reduc forall algs: bertie__tls13crypto__t_Algorithms, cert: bertie__tls13utils__t_Bytes;
+      bertie__tls13formats__parse_certificate_verify(
+        algs,bertie__tls13formats__certificate_verify(algs, cert)
+      ) = cert.
+
+reduc forall   algs: bertie__tls13crypto__t_Algorithms, server_random: bertie__tls13utils__t_Bytes, sid: bertie__tls13utils__t_Bytes, gy: bertie__tls13utils__t_Bytes;
+   bertie__tls13formats__parse_server_hello(
+     algs,
+     bertie__tls13formats__server_hello(algs, server_random, sid, gy)
+) = (server_random, gy).
+
+reduc forall algs: bertie__tls13crypto__t_Algorithms;
+      bertie__tls13formats__parse_encrypted_extensions(
+        algs,
+        bertie__tls13formats__encrypted_extensions(algs)
+      ) = ().
+
+reduc forall vd: bertie__tls13utils__t_Bytes;
+   bertie__tls13formats__parse_finished(
+     bertie__tls13formats__finished(vd)
+) = vd.
+
+reduc forall algs: bertie__tls13crypto__t_Algorithms, cert: bertie__tls13utils__t_Bytes;
+  bertie__tls13formats__parse_server_certificate(
+     bertie__tls13formats__server_certificate(algs, cert)
+  ) = cert.
+
+fun client_hello_c(
+      bertie__tls13utils__t_Bytes, (* client_randomness *)
+      bertie__tls13utils__t_Bytes, (* session_id *)
+      bertie__tls13utils__t_Bytes, (*server name /sni*)
+      bertie__tls13utils__t_Bytes, (*kem_pk / gx*)
+      Option, (*tkto*)
+      Option, (*bindero*)
+      nat) (*trunc_len*)
+      : bertie__tls13formats__handshake_data__t_HandshakeData [data].
+
+letfun bertie__tls13formats__client_hello(
+      alg: bertie__tls13crypto__t_Algorithms,
+      client_random: bertie__tls13utils__t_Bytes,
+      kem_pk: bertie__tls13utils__t_Bytes,
+      server_name: bertie__tls13utils__t_Bytes,
+      session_ticket: Option
+    ) =
+    (client_hello_c(client_random,
+                            bertie__tls13utils__t_Bytes_default(),
+                            server_name,
+                            kem_pk,
+                            session_ticket,
+                            None(),
+                            0),
+     0).
 
-(* REPLACE by handwritten model *)
 letfun bertie__tls13formats__set_client_hello_binder(
          ciphersuite : bertie__tls13crypto__t_Algorithms,
          binder : Option,
          client_hello : bertie__tls13formats__handshake_data__t_HandshakeData,
          trunc_len : Option
        ) =
-       bertie__tls13formats__handshake_data__t_HandshakeData_default().
+       let client_hello_c(client_randomness,
+                                  session_id,
+                                  server_name,
+                                  kem_pk,
+                                  tkto,
+                                  old_binder,
+                                  old_trunc_len)
+        = client_hello in
+          client_hello_c(client_randomness,
+                                  session_id,
+                                  server_name,
+                                  kem_pk,
+                                  tkto,
+                                  binder,
+                                  0).
+
+fun bertie__tls13formats__parse_client_hello(bertie__tls13crypto__t_Algorithms, bertie__tls13formats__handshake_data__t_HandshakeData): bitstring
+reduc forall
+      algs:bertie__tls13crypto__t_Algorithms,
+      client_random: bertie__tls13utils__t_Bytes,
+      server_name: bertie__tls13utils__t_Bytes,
+      kem_pk: bertie__tls13utils__t_Bytes,
+      session_ticket: Option,
+      binder: Option;
+    bertie__tls13formats__parse_client_hello(
+        algs,
+        client_hello_c(client_random,
+                            bertie__tls13utils__t_Bytes_default_value,
+                            server_name,
+                            kem_pk,
+                            session_ticket,
+                            binder,
+                            0))
+           = (client_random,
+                            bertie__tls13utils__t_Bytes_default_value,
+                            server_name,
+                            kem_pk,
+                            session_ticket,
+                            binder,
+                            0).
+(* MARKER: tls13formats models end*)
 
 letfun bertie__tls13crypto__impl__AeadKeyIV__new(
          key : bertie__tls13crypto__t_AeadKey, iv : bertie__tls13utils__t_Bytes
        ) =
        bertie__tls13crypto__AeadKeyIV_c(key,iv).
 
-(* marked as constructor *)
-fun bertie__tls13formats__impl__Transcript__add(
-      bertie__tls13formats__t_Transcript,
-      bertie__tls13formats__handshake_data__t_HandshakeData
-    )
-    : bertie__tls13formats__t_Transcript [data].
+letfun bertie__tls13formats__impl__Transcript__add(
+    old_transcript:       bertie__tls13formats__t_Transcript,
+    addition:       bertie__tls13formats__handshake_data__t_HandshakeData
+    ) =
+    let        bertie__tls13formats__Transcript_c(hash_algorithm: bertie__tls13crypto__t_HashAlgorithm, old_handshake_data: bertie__tls13formats__handshake_data__t_HandshakeData) = old_transcript in
+        bertie__tls13formats__Transcript_c(
+         hash_algorithm
+         ,
+         bertie__tls13formats__handshake_data__HandshakeData_c(HandshakeData_to_bytes(bertie__tls13formats__handshake_data__impl__HandshakeData__concat(old_handshake_data, addition)))
+    ).
 
 letfun bertie__tls13formats__impl__Transcript__new(
          hash_algorithm : bertie__tls13crypto__t_HashAlgorithm
@@ -2947,13 +3136,35 @@
        ) in th
        else bertie__tls13utils__t_Bytes_err().
 
+fun transcript_to_bytes(bertie__tls13formats__t_Transcript): bertie__tls13utils__t_Bytes [typeConverter].
+
 (* marked as constructor *)
 fun bertie__tls13formats__impl__Transcript__transcript_hash_without_client_hello(
       bertie__tls13formats__t_Transcript,
       bertie__tls13formats__handshake_data__t_HandshakeData,
       nat
     )
-    : bertie__tls13utils__t_Bytes [data].
+    : bertie__tls13utils__t_Bytes
+reduc forall tx: bertie__tls13formats__t_Transcript,
+            cr: bertie__tls13utils__t_Bytes,
+            sid: bertie__tls13utils__t_Bytes,
+            server_name: bertie__tls13utils__t_Bytes,
+            kem_pk: bertie__tls13utils__t_Bytes,
+            ticket: Option,
+            binder: Option,
+             trunc_len: nat;
+      bertie__tls13formats__impl__Transcript__transcript_hash_without_client_hello(
+        tx,
+        client_hello_c(
+            cr,
+            sid,
+            server_name,
+            kem_pk,
+            ticket,
+            binder,
+            trunc_len),
+         trunc_len) = transcript_to_bytes(tx).
+
 
 letfun bertie__tls13handshake__derive_aead_key_iv(
          hash_algorithm : bertie__tls13crypto__t_HashAlgorithm,
@@ -3458,6 +3669,7 @@
        else (bertie__tls13handshake__t_ClientPostCertificateVerify_err()).
 
 letfun bertie__tls13handshake__put_server_signature(
+         server_name: bertie__tls13utils__t_Bytes,
          encrypted_extensions : bertie__tls13formats__handshake_data__t_HandshakeData,
          server_certificate : bertie__tls13formats__handshake_data__t_HandshakeData,
          server_certificate_verify : bertie__tls13formats__handshake_data__t_HandshakeData,
@@ -3500,7 +3712,7 @@
               ) in let spki = bertie__tls13cert__verification_key_from_cert(
                 certificate
               ) in let cert_pk = bertie__tls13cert__cert_public_key(
-                certificate, spki
+                server_name, certificate, spki
               ) in let cert_signature = bertie__tls13formats__parse_certificate_verify(
                 algorithms, server_certificate_verify
               ) in (
@@ -3976,6 +4188,7 @@
        else bitstring_err().
 
 letfun bertie__tls13handshake__client_finish(
+         server_name: bertie__tls13utils__t_Bytes,
          payload : bertie__tls13formats__handshake_data__t_HandshakeData,
          handshake_state : bertie__tls13handshake__t_ClientPostServerHello
        ) =
@@ -3989,6 +4202,7 @@
        ) = bertie__tls13formats__handshake_data__impl__HandshakeData__to_four(
          payload
        ) in let client_state_certificate_verify = bertie__tls13handshake__put_server_signature(
+         server_name,
          encrypted_extensions,
          server_certificate,
          server_certificate_verify,
@@ -4003,7 +4217,8 @@
          client_state: bertie__tls13handshake__t_ClientPostClientFinished
        ) = bertie__tls13handshake__get_client_finished(
          client_state_server_finished
-       ) in (client_finished, cipher, client_state)
+       ) in
+       (client_finished, cipher, client_state)
        else bitstring_err()
        else bitstring_err()
        else bitstring_err()
